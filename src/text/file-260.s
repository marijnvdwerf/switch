.include "macros.s"

.intel_syntax noprefix

.text


    .global _sub_4A8810
_sub_4A8810:
    mov_offset esi, __96885C                             # 004A8810
    mov ecx, 0xfa00                                      # 004A8815
.L4A881A:
    mov word ptr [esi], 0xffff                           # 004A881A
    add esi, 2                                           # 004A881F
    dec ecx                                              # 004A8822
    jne .L4A881A                                         # 004A8823
    ret                                                  # 004A8825

    .global _sub_4A8826
_sub_4A8826:
    DebugStamp 0x12081061
    test dword ptr [_scenarioChunk3+16], 1               # 004A8826
    je .L4A8881                                          # 004A8830
    test word ptr [__508F14], 2                          # 004A8832
    jne .L4A8881                                         # 004A883B
    mov si, word ptr [_scenarioChunk3+42]                # 004A883D
.L4A8844:
    cmp si, -1                                           # 004A8844
    je .L4A8881                                          # 004A8848
    movzx esi, si                                        # 004A884A
    shl esi, 7                                           # 004A884D
    add_offset esi, _things                              # 004A8850
    push dword ptr [esi + 4]                             # 004A8856
.L4A8859:
    movzx ebp, byte ptr [esi + 1]                        # 004A8859
    call dword ptr [ebp*4 + __50030C]                    # 004A885D
    jb .L4A887E                                          # 004A8864
    mov si, word ptr [esi + 0x3a]                        # 004A8866
    cmp si, -1                                           # 004A886A
    je .L4A887E                                          # 004A886E
    movzx esi, si                                        # 004A8870
    shl esi, 7                                           # 004A8873
    add_offset esi, _things                              # 004A8876
    jmp .L4A8859                                         # 004A887C
.L4A887E:
    pop esi                                              # 004A887E
    jmp .L4A8844                                         # 004A887F
.L4A8881:
    ret                                                  # 004A8881

    .global _sub_4A8882
_sub_4A8882:
    mov edi, dword ptr [__1136120]                       # 004A8882
    call _sub_4A88A6                                     # 004A8888
.L4A888D:
    movzx edi, word ptr [edi + 0x3a]                     # 004A888D
    shl edi, 7                                           # 004A8891
    add_offset edi, _things                              # 004A8894
    cmp byte ptr [edi + 1], 6                            # 004A889A
    jne .L4A888D                                         # 004A889E
    call _sub_4A88A6                                     # 004A88A0
    ret                                                  # 004A88A5

    .global _sub_4A88A6
_sub_4A88A6:
    cmp word ptr [esi + 0x30], -1                        # 004A88A6
    je _loc_4A8B7C                                       # 004A88AB
    cmp byte ptr [esi + 0x5d], 8                         # 004A88B1
    je _loc_4A8B7C                                       # 004A88B5
    cmp byte ptr [esi + 0x5d], 9                         # 004A88BB
    je _loc_4A8B7C                                       # 004A88BF
    test byte ptr [esi + 0x38], 0x10                     # 004A88C5
    jne _loc_4A8B7C                                      # 004A88C9
    movsx ebp, word ptr [edi + 0x48]                     # 004A88CF
    cmp ebp, -1                                          # 004A88D3
    je _loc_4A8B7C                                       # 004A88D6
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004A88DC
    movzx ebx, byte ptr [ebp + 0x119]                    # 004A88E3
    lea ebp, [ebp + 0x11a]                               # 004A88EA
    jmp dword ptr [ebx*4 + __500328]                     # 004A88F0
    .global _loc_4A88F7
_loc_4A88F7:
    mov ebx, dword ptr [__1136120]                       # 004A88F7
    mov eax, dword ptr [ebx + 0x56]                      # 004A88FD
    sub eax, dword ptr [ebp + 1]                         # 004A8900
    jb _loc_4A8B7C                                       # 004A8903
    msvc_mov edx, eax                                    # 004A8909
    mov cl, byte ptr [ebp + 5]                           # 004A890B
    shr eax, cl                                          # 004A890E
    add ax, word ptr [ebp + 6]                           # 004A8910
    mov word ptr [edi + 0x46], ax                        # 004A8914
    mov cl, byte ptr [ebp + 8]                           # 004A8918
    shr edx, cl                                          # 004A891B
    movzx eax, byte ptr [ebp + 9]                        # 004A891D
    msvc_add edx, eax                                    # 004A8921
    movzx eax, byte ptr [ebp + 0xa]                      # 004A8923
    msvc_cmp edx, eax                                    # 004A8927
    jbe .L4A892D                                         # 004A8929
    msvc_mov edx, eax                                    # 004A892B
.L4A892D:
    mov byte ptr [edi + 0x45], dl                        # 004A892D
    mov al, byte ptr [ebp]                               # 004A8930
    mov byte ptr [edi + 0x44], al                        # 004A8933
    ret                                                  # 004A8936
    .global _loc_4A8937
_loc_4A8937:
    cmp edi, dword ptr [__1136120]                       # 004A8937
    jne .L4A8962                                         # 004A893D
    cmp byte ptr [esi + 0x5e], 5                         # 004A893F
    je .L4A8962                                          # 004A8943
    cmp byte ptr [esi + 0x5e], 4                         # 004A8945
    je .L4A8962                                          # 004A8949
    movzx ebx, word ptr [edi + 0x3a]                     # 004A894B
    shl ebx, 7                                           # 004A894F
    add_offset ebx, _things                              # 004A8952
    test byte ptr [ebx + 0x5f], 4                        # 004A8958
    jne _loc_4A8B7C                                      # 004A895C
.L4A8962:
    mov ebx, dword ptr [__1136120]                       # 004A8962
    mov al, byte ptr [ebx + 0x5a]                        # 004A8968
    cmp al, 2                                            # 004A896B
    je .L4A897C                                          # 004A896D
    cmp al, 1                                            # 004A896F
    je .L4A8994                                          # 004A8971
.L4A8973:
    mov cx, word ptr [ebp + 1]                           # 004A8973
    mov bl, byte ptr [ebp + 3]                           # 004A8977
    jmp .L4A89C8                                         # 004A897A
.L4A897C:
    mov ecx, dword ptr [__1136120]                       # 004A897C
    cmp dword ptr [ecx + 0x56], 0xc0000                  # 004A8982
    jb .L4A8973                                          # 004A8989
    mov cx, word ptr [ebp + 4]                           # 004A898B
    mov bl, byte ptr [ebp + 6]                           # 004A898F
    jmp .L4A89C8                                         # 004A8992
.L4A8994:
    cmp byte ptr [edi + 1], 2                            # 004A8994
    jne .L4A89AF                                         # 004A8998
    push edi                                             # 004A899A
    movzx edi, word ptr [edi + 0x3a]                     # 004A899B
    shl edi, 7                                           # 004A899F
    add_offset edi, _things                              # 004A89A2
    cmp byte ptr [edi + 0x5e], 0                         # 004A89A8
    pop edi                                              # 004A89AC
    jne .L4A8973                                         # 004A89AD
.L4A89AF:
    mov cx, word ptr [ebp + 7]                           # 004A89AF
    mov bl, byte ptr [ebp + 9]                           # 004A89B3
    push ecx                                             # 004A89B6
    mov cl, byte ptr [ebp + 0x10]                        # 004A89B7
    mov eax, dword ptr [__1136120]                       # 004A89BA
    mov eax, dword ptr [eax + 0x56]                      # 004A89BF
    shr eax, cl                                          # 004A89C2
    pop ecx                                              # 004A89C4
    msvc_add cx, ax                                      # 004A89C5
.L4A89C8:
    cmp byte ptr [edi + 0x44], 0xff                      # 004A89C8
    je .L4A8A1E                                          # 004A89CC
    mov ax, word ptr [edi + 0x46]                        # 004A89CE
    msvc_cmp ax, cx                                      # 004A89D2
    je .L4A89F3                                          # 004A89D5
    ja .L4A89E7                                          # 004A89D7
    add ax, word ptr [ebp + 0xa]                         # 004A89D9
    msvc_cmp ax, cx                                      # 004A89DD
    jbe .L4A89F3                                         # 004A89E0
    msvc_mov ax, cx                                      # 004A89E2
    jmp .L4A89F3                                         # 004A89E5
.L4A89E7:
    sub ax, word ptr [ebp + 0xc]                         # 004A89E7
    msvc_cmp ax, cx                                      # 004A89EB
    jae .L4A89F3                                         # 004A89EE
    msvc_mov ax, cx                                      # 004A89F0
.L4A89F3:
    mov word ptr [edi + 0x46], ax                        # 004A89F3
    mov al, byte ptr [edi + 0x45]                        # 004A89F7
    cmp al, bl                                           # 004A89FA
    je .L4A8A14                                          # 004A89FC
    ja .L4A8A0B                                          # 004A89FE
    add al, byte ptr [ebp + 0xe]                         # 004A8A00
    cmp al, bl                                           # 004A8A03
    jbe .L4A8A14                                         # 004A8A05
    msvc_mov al, bl                                      # 004A8A07
    jmp .L4A8A14                                         # 004A8A09
.L4A8A0B:
    sub al, byte ptr [ebp + 0xf]                         # 004A8A0B
    cmp al, bl                                           # 004A8A0E
    jae .L4A8A14                                         # 004A8A10
    msvc_mov al, bl                                      # 004A8A12
.L4A8A14:
    mov byte ptr [edi + 0x45], al                        # 004A8A14
    mov al, byte ptr [ebp]                               # 004A8A17
    mov byte ptr [edi + 0x44], al                        # 004A8A1A
    ret                                                  # 004A8A1D
.L4A8A1E:
    mov cx, word ptr [ebp + 1]                           # 004A8A1E
    shr cx, 2                                            # 004A8A22
    mov bl, byte ptr [ebp + 3]                           # 004A8A26
    shr bl, 1                                            # 004A8A29
    mov byte ptr [edi + 0x45], bl                        # 004A8A2B
    mov word ptr [edi + 0x46], cx                        # 004A8A2E
    mov al, byte ptr [ebp]                               # 004A8A32
    mov byte ptr [edi + 0x44], al                        # 004A8A35
    ret                                                  # 004A8A38
    .global _loc_4A8A39
_loc_4A8A39:
    cmp edi, dword ptr [__1136120]                       # 004A8A39
    jne .L4A8A64                                         # 004A8A3F
    cmp byte ptr [esi + 0x5e], 5                         # 004A8A41
    je .L4A8A64                                          # 004A8A45
    cmp byte ptr [esi + 0x5e], 4                         # 004A8A47
    je .L4A8A64                                          # 004A8A4B
    movzx ebx, word ptr [edi + 0x3a]                     # 004A8A4D
    shl ebx, 7                                           # 004A8A51
    add_offset ebx, _things                              # 004A8A54
    test byte ptr [ebx + 0x5f], 4                        # 004A8A5A
    jne _loc_4A8B7C                                      # 004A8A5E
.L4A8A64:
    mov ebx, dword ptr [__1136120]                       # 004A8A64
    mov al, byte ptr [ebx + 0x5a]                        # 004A8A6A
    cmp al, 2                                            # 004A8A6D
    je .L4A8A8E                                          # 004A8A6F
    cmp al, 3                                            # 004A8A71
    je .L4A8A8E                                          # 004A8A73
    cmp al, 1                                            # 004A8A75
    je .L4A8AA2                                          # 004A8A77
.L4A8A79:
    mov cx, word ptr [ebp + 1]                           # 004A8A79
    mov bl, byte ptr [ebp + 3]                           # 004A8A7D
    msvc_jmp .L4A8B08                                    # 004A8A80
.L4A8A85:
    mov cx, word ptr [ebp + 1]                           # 004A8A85
    mov bl, byte ptr [ebp + 0x12]                        # 004A8A89
    jmp .L4A8B08                                         # 004A8A8C
.L4A8A8E:
    mov ecx, dword ptr [__1136120]                       # 004A8A8E
    cmp dword ptr [ecx + 0x56], 0xc0000                  # 004A8A94
    jb .L4A8A85                                          # 004A8A9B
    mov bl, byte ptr [ebp + 0x12]                        # 004A8A9D
    jmp .L4A8AA5                                         # 004A8AA0
.L4A8AA2:
    mov bl, byte ptr [ebp + 0x13]                        # 004A8AA2
.L4A8AA5:
    cmp byte ptr [edi + 1], 2                            # 004A8AA5
    jne .L4A8AC0                                         # 004A8AA9
    push edi                                             # 004A8AAB
    movzx edi, word ptr [edi + 0x3a]                     # 004A8AAC
    shl edi, 7                                           # 004A8AB0
    add_offset edi, _things                              # 004A8AB3
    cmp byte ptr [edi + 0x5e], 0                         # 004A8AB9
    pop edi                                              # 004A8ABD
    jne .L4A8A79                                         # 004A8ABE
.L4A8AC0:
    mov ecx, dword ptr [__1136120]                       # 004A8AC0
    mov eax, dword ptr [ecx + 0x56]                      # 004A8AC6
    cmp eax, 0x70000                                     # 004A8AC9
    jae .L4A8AD5                                         # 004A8ACE
    mov eax, 0x70000                                     # 004A8AD0
.L4A8AD5:
    mov dx, word ptr [ebp + 4]                           # 004A8AD5
    shr eax, 0x10                                        # 004A8AD9
    cmp ax, word ptr [ebp + 6]                           # 004A8ADC
    jb .L4A8AFA                                          # 004A8AE0
    sub dx, word ptr [ebp + 8]                           # 004A8AE2
    cmp ax, word ptr [ebp + 0xa]                         # 004A8AE6
    jb .L4A8AFA                                          # 004A8AEA
    sub dx, word ptr [ebp + 0xc]                         # 004A8AEC
    cmp ax, word ptr [ebp + 0xe]                         # 004A8AF0
    jb .L4A8AFA                                          # 004A8AF4
    sub dx, word ptr [ebp + 0x10]                        # 004A8AF6
.L4A8AFA:
    shl eax, 0x10                                        # 004A8AFA
    mov cl, byte ptr [ebp + 0x1a]                        # 004A8AFD
    shr eax, cl                                          # 004A8B00
    msvc_add ax, dx                                      # 004A8B02
    msvc_mov cx, ax                                      # 004A8B05
.L4A8B08:
    cmp byte ptr [edi + 0x44], 0xff                      # 004A8B08
    je .L4A8B61                                          # 004A8B0C
    mov ax, word ptr [edi + 0x46]                        # 004A8B0E
    msvc_cmp ax, cx                                      # 004A8B12
    je .L4A8B36                                          # 004A8B15
    ja .L4A8B27                                          # 004A8B17
    add ax, word ptr [ebp + 0x14]                        # 004A8B19
    msvc_cmp ax, cx                                      # 004A8B1D
    jbe .L4A8B36                                         # 004A8B20
    msvc_mov ax, cx                                      # 004A8B22
    jmp .L4A8B36                                         # 004A8B25
.L4A8B27:
    mov bl, byte ptr [ebp + 0x12]                        # 004A8B27
    sub ax, word ptr [ebp + 0x16]                        # 004A8B2A
    msvc_cmp ax, cx                                      # 004A8B2E
    jae .L4A8B36                                         # 004A8B31
    msvc_mov ax, cx                                      # 004A8B33
.L4A8B36:
    mov word ptr [edi + 0x46], ax                        # 004A8B36
    mov al, byte ptr [edi + 0x45]                        # 004A8B3A
    cmp al, bl                                           # 004A8B3D
    je .L4A8B57                                          # 004A8B3F
    ja .L4A8B4E                                          # 004A8B41
    add al, byte ptr [ebp + 0x18]                        # 004A8B43
    cmp al, bl                                           # 004A8B46
    jbe .L4A8B57                                         # 004A8B48
    msvc_mov al, bl                                      # 004A8B4A
    jmp .L4A8B57                                         # 004A8B4C
.L4A8B4E:
    sub al, byte ptr [ebp + 0x19]                        # 004A8B4E
    cmp al, bl                                           # 004A8B51
    jae .L4A8B57                                         # 004A8B53
    msvc_mov al, bl                                      # 004A8B55
.L4A8B57:
    mov byte ptr [edi + 0x45], al                        # 004A8B57
    mov al, byte ptr [ebp]                               # 004A8B5A
    mov byte ptr [edi + 0x44], al                        # 004A8B5D
    ret                                                  # 004A8B60
.L4A8B61:
    mov cx, word ptr [ebp + 1]                           # 004A8B61
    shr cx, 2                                            # 004A8B65
    mov bl, byte ptr [ebp + 3]                           # 004A8B69
    shr bl, 1                                            # 004A8B6C
    mov byte ptr [edi + 0x45], bl                        # 004A8B6E
    mov word ptr [edi + 0x46], cx                        # 004A8B71
    mov al, byte ptr [ebp]                               # 004A8B75
    mov byte ptr [edi + 0x44], al                        # 004A8B78
    ret                                                  # 004A8B7B
    .global _loc_4A8B7C
_loc_4A8B7C:
    mov byte ptr [edi + 0x44], 0xff                      # 004A8B7C
    ret                                                  # 004A8B80

    .global _sub_4A8B81
_sub_4A8B81:
    DebugStamp 0x24031650
    mov dword ptr [__1136118], esi                       # 004A8B81
    movzx edi, word ptr [esi + 0x3a]                     # 004A8B87
    shl edi, 7                                           # 004A8B8B
    add_offset edi, _things                              # 004A8B8E
    mov dword ptr [__113611C], edi                       # 004A8B94
    movzx edi, word ptr [edi + 0x3a]                     # 004A8B9A
    shl edi, 7                                           # 004A8B9E
    add_offset edi, _things                              # 004A8BA1
    mov dword ptr [__1136120], edi                       # 004A8BA7
    mov al, byte ptr [esi + 0x5d]                        # 004A8BAD
    mov byte ptr [__113646C], al                         # 004A8BB0
    call _sub_4A8882                                     # 004A8BB5
    mov dword ptr [__1136124], 0xffffffff                # 004A8BBA
    mov dword ptr [__1136128], 0xffffffff                # 004A8BC4
    mov edi, dword ptr [__1136120]                       # 004A8BCE
    mov eax, dword ptr [edi + 0x56]                      # 004A8BD4
    shr eax, 7                                           # 004A8BD7
    mov dword ptr [__113612C], eax                       # 004A8BDA
    mov dword ptr [__1136130], eax                       # 004A8BDF
    cmp byte ptr [esi + 0x5c], 0                         # 004A8BE4
    je .L4A8BED                                          # 004A8BE8
    dec byte ptr [esi + 0x5c]                            # 004A8BEA
.L4A8BED:
    cmp word ptr [esi + 0x30], -1                        # 004A8BED
    je .L4A8F3F                                          # 004A8BF2
    call _sub_4BA8D4                                     # 004A8BF8
    cmp byte ptr [esi + 0x42], 2                         # 004A8BFD
    je .L4A9051                                          # 004A8C01
    cmp byte ptr [esi + 0x42], 3                         # 004A8C07
    je .L4A9649                                          # 004A8C0B
    mov edi, dword ptr [__1136120]                       # 004A8C11
    test byte ptr [edi + 0x73], 1                        # 004A8C17
    je .L4A8C23                                          # 004A8C1B
    test byte ptr [edi + 0x73], 2                        # 004A8C1D
    je .L4A8C2D                                          # 004A8C21
.L4A8C23:
    cmp byte ptr [esi + 0x5d], 4                         # 004A8C23
    je .L4A8F75                                          # 004A8C27
.L4A8C2D:
    cmp byte ptr [esi + 0x5d], 5                         # 004A8C2D
    je .L4A9007                                          # 004A8C31
    cmp byte ptr [esi + 0x5d], 6                         # 004A8C37
    je .L4A9011                                          # 004A8C3B
    cmp byte ptr [esi + 0x5d], 8                         # 004A8C41
    je .L4A9042                                          # 004A8C45
    cmp byte ptr [esi + 0x5d], 9                         # 004A8C4B
    je .L4A8F69                                          # 004A8C4F
    mov byte ptr [esi + 0x5d], 2                         # 004A8C55
    test byte ptr [edi + 0x73], 1                        # 004A8C59
    je .L4A8C65                                          # 004A8C5D
    test byte ptr [edi + 0x73], 2                        # 004A8C5F
    je .L4A8CB6                                          # 004A8C63
.L4A8C65:
    test word ptr [esi + 0xc], 0x40                      # 004A8C65
    je .L4A8C73                                          # 004A8C6B
    cmp byte ptr [esi + 0x6e], 0xec                      # 004A8C6D
    jle .L4A8C81                                         # 004A8C71
.L4A8C73:
    test word ptr [esi + 0xc], 2                         # 004A8C73
    je .L4A8D48                                          # 004A8C79
    jmp .L4A8CB6                                         # 004A8C7F
.L4A8C81:
    mov edi, dword ptr [__1136120]                       # 004A8C81
    cmp dword ptr [edi + 0x56], 0x10000                  # 004A8C87
    jae .L4A8D48                                         # 004A8C8E
    call _sub_4BABAD                                     # 004A8C94
    cmp eax, -1                                          # 004A8C99
    je .L4A8CB6                                          # 004A8C9C
    mov word ptr [esi + 0x54], ax                        # 004A8C9E
    call _sub_4B996F                                     # 004A8CA2
    call _sub_4B9987                                     # 004A8CA7
    call _sub_4BACAF                                     # 004A8CAC
    call _sub_4B99E1                                     # 004A8CB1
.L4A8CB6:
    mov edi, dword ptr [__113611C]                       # 004A8CB6
    mov ax, word ptr [edi + 0xe]                         # 004A8CBC
    mov cx, word ptr [edi + 0x10]                        # 004A8CC0
    mov dx, word ptr [edi + 0x12]                        # 004A8CC4
    cmp ax, word ptr [esi + 0xe]                         # 004A8CC8
    jne .L4A8CDA                                         # 004A8CCC
    cmp cx, word ptr [esi + 0x10]                        # 004A8CCE
    jne .L4A8CDA                                         # 004A8CD2
    cmp dx, word ptr [esi + 0x12]                        # 004A8CD4
    je .L4A8CEF                                          # 004A8CD8
.L4A8CDA:
    call _sub_4AD93A                                     # 004A8CDA
    cmp byte ptr [esi + 0x5d], 4                         # 004A8CDF
    jne .L4A8CEF                                         # 004A8CE3
    mov word ptr [esi + 0x54], 0xffff                    # 004A8CE5
    mov byte ptr [esi + 0x5d], 2                         # 004A8CEB
.L4A8CEF:
    movzx edi, word ptr [esi + 0x3a]                     # 004A8CEF
    shl edi, 7                                           # 004A8CF3
    add_offset edi, _things                              # 004A8CF6
    movzx edi, word ptr [edi + 0x3a]                     # 004A8CFC
    shl edi, 7                                           # 004A8D00
    add_offset edi, _things                              # 004A8D03
    mov ax, word ptr [edi + 0x36]                        # 004A8D09
    cmp ax, word ptr [esi + 0x36]                        # 004A8D0D
    jne .L4A8F3A                                         # 004A8D11
    mov ax, word ptr [edi + 0x2e]                        # 004A8D17
    cmp ax, word ptr [esi + 0x2e]                        # 004A8D1B
    jne .L4A8F3A                                         # 004A8D1F
    mov byte ptr [esi + 0x5d], 1                         # 004A8D25
    mov edi, dword ptr [__1136120]                       # 004A8D29
    test byte ptr [edi + 0x73], 1                        # 004A8D2F
    je .L4A8F3A                                          # 004A8D33
    mov byte ptr [esi + 0x5d], 7                         # 004A8D3F
    msvc_jmp .L4A8F3A                                    # 004A8D43
.L4A8D48:
    DebugStamp 0x19091254
    call _sub_4707C0                                     # 004A8D48
    mov eax, 0xd4cb00                                    # 004A8D4D
    mov ebx, dword ptr [__113612C]                       # 004A8D52
    call _sub_4ACEE7                                     # 004A8D58
    cmp byte ptr [esi + 0x42], 1                         # 004A8D5D
    je .L4A8D8F                                          # 004A8D61
    cmp al, 4                                            # 004A8D63
    je .L4A8F6B                                          # 004A8D65
    cmp al, 3                                            # 004A8D6B
    je .L4A8DCB                                          # 004A8D6D
    movzx edi, word ptr [esi + 0x3a]                     # 004A8D6F
    shl edi, 7                                           # 004A8D73
    add_offset edi, _things                              # 004A8D76
    mov word ptr [edi + 0x46], 0                         # 004A8D7C
    cmp al, 2                                            # 004A8D82
    je .L4A8E80                                          # 004A8D84
    msvc_jmp .L4A9049                                    # 004A8D8A
.L4A8D8F:
    call _sub_4AA36A                                     # 004A8D8F
    cmp bl, 1                                            # 004A8D94
    je .L4A8DB7                                          # 004A8D97
    cmp bl, 2                                            # 004A8D99
    je .L4A8F22                                          # 004A8D9C
    cmp al, 4                                            # 004A8DA2
    je .L4A8F6B                                          # 004A8DA4
    cmp al, 2                                            # 004A8DAA
    je .L4A8EEC                                          # 004A8DAC
    msvc_jmp .L4A9049                                    # 004A8DB2
.L4A8DB7:
    call _sub_4AD778                                     # 004A8DB7
    cmp byte ptr [esi + 0x5d], 4                         # 004A8DBC
    jne .L4A8DC6                                         # 004A8DC0
    mov byte ptr [esi + 0x5d], 2                         # 004A8DC2
.L4A8DC6:
    msvc_jmp .L4A9049                                    # 004A8DC6
.L4A8DCB:
    movzx edi, word ptr [esi + 0x3a]                     # 004A8DCB
    shl edi, 7                                           # 004A8DCF
    add_offset edi, _things                              # 004A8DD2
    movzx edi, word ptr [edi + 0x3a]                     # 004A8DD8
    shl edi, 7                                           # 004A8DDC
    add_offset edi, _things                              # 004A8DDF
    mov bx, word ptr [edi + 0x36]                        # 004A8DE5
    cmp bx, word ptr [esi + 0x36]                        # 004A8DE9
    jne .L4A8F3A                                         # 004A8DED
    mov bx, word ptr [edi + 0x2e]                        # 004A8DF3
    cmp bx, word ptr [esi + 0x2e]                        # 004A8DF7
    jne .L4A8F3A                                         # 004A8DFB
    mov byte ptr [esi + 0x5d], 3                         # 004A8E01
    movzx edi, word ptr [esi + 0x3a]                     # 004A8E05
    shl edi, 7                                           # 004A8E09
    add_offset edi, _things                              # 004A8E0C
    inc word ptr [edi + 0x46]                            # 004A8E12
    test word ptr [esi + 0xc], 0x40                      # 004A8E16
    jne .L4A8E57                                         # 004A8E1C
    test ah, 2                                           # 004A8E1E
    jne .L4A8E64                                         # 004A8E21
    test word ptr [edi + 0x46], 0x3f                     # 004A8E23
    jne .L4A8E46                                         # 004A8E29
    test ah, 0x80                                        # 004A8E2B
    jne .L4A8E39                                         # 004A8E2E
    push edi                                             # 004A8E30
    call _sub_4AC1C2                                     # 004A8E31
    pop edi                                              # 004A8E36
    jb .L4A8E57                                          # 004A8E37
.L4A8E39:
    push edi                                             # 004A8E39
    call _sub_4AC0A3                                     # 004A8E3A
    pop edi                                              # 004A8E3F
    jb .L4A8ED9                                          # 004A8E40
.L4A8E46:
    cmp word ptr [edi + 0x46], 0x280                     # 004A8E46
    jb .L4A8F3A                                          # 004A8E4C
    msvc_jmp .L4A8ED9                                    # 004A8E52
.L4A8E57:
    mov byte ptr [esi + 0x5c], 2                         # 004A8E57
    or byte ptr [edi + 0x48], 1                          # 004A8E5B
    msvc_jmp .L4A8F3A                                    # 004A8E5F
.L4A8E64:
    cmp word ptr [edi + 0x46], 0x780                     # 004A8E64
    jb .L4A8F3A                                          # 004A8E6A
    test ah, 0x80                                        # 004A8E70
    jne .L4A8E7E                                         # 004A8E73
    push edi                                             # 004A8E75
    call _sub_4AC1C2                                     # 004A8E76
    pop edi                                              # 004A8E7B
    jb .L4A8E57                                          # 004A8E7C
.L4A8E7E:
    jmp .L4A8ED9                                         # 004A8E7E
.L4A8E80:
    test word ptr [esi + 0xc], 0x40                      # 004A8E80
    je .L4A8ED9                                          # 004A8E86
    movzx edi, word ptr [esi + 0x3a]                     # 004A8E88
    shl edi, 7                                           # 004A8E8C
    add_offset edi, _things                              # 004A8E8F
    movzx edi, word ptr [edi + 0x3a]                     # 004A8E95
    shl edi, 7                                           # 004A8E99
    add_offset edi, _things                              # 004A8E9C
    mov ax, word ptr [edi + 0x36]                        # 004A8EA2
    cmp ax, word ptr [esi + 0x36]                        # 004A8EA6
    jne .L4A8ED9                                         # 004A8EAA
    mov ax, word ptr [edi + 0x2e]                        # 004A8EAC
    cmp ax, word ptr [esi + 0x2e]                        # 004A8EB0
    jne .L4A8ED9                                         # 004A8EB4
.L4A8EB6:
    push esi                                             # 004A8EB6
    movzx esi, word ptr [esi + 0x3a]                     # 004A8EB7
    shl esi, 7                                           # 004A8EBB
    add_offset esi, _things                              # 004A8EBE
    movzx esi, word ptr [esi + 0x3a]                     # 004A8EC4
    shl esi, 7                                           # 004A8EC8
    add_offset esi, _things                              # 004A8ECB
    call _sub_4AA464                                     # 004A8ED1
    pop esi                                              # 004A8ED6
    stc                                                  # 004A8ED7
    ret                                                  # 004A8ED8
.L4A8ED9:
    movzx edi, word ptr [esi + 0x3a]                     # 004A8ED9
    shl edi, 7                                           # 004A8EDD
    add_offset edi, _things                              # 004A8EE0
    mov word ptr [edi + 0x46], 0                         # 004A8EE6
.L4A8EEC:
    DebugStamp 0x19091255
    movzx edi, word ptr [esi + 0x3a]                     # 004A8EEC
    shl edi, 7                                           # 004A8EF0
    add_offset edi, _things                              # 004A8EF3
    movzx edi, word ptr [edi + 0x3a]                     # 004A8EF9
    shl edi, 7                                           # 004A8EFD
    add_offset edi, _things                              # 004A8F00
    mov ax, word ptr [edi + 0x36]                        # 004A8F06
    cmp ax, word ptr [esi + 0x36]                        # 004A8F0A
    jne .L4A9049                                         # 004A8F0E
    mov ax, word ptr [edi + 0x2e]                        # 004A8F14
    cmp ax, word ptr [esi + 0x2e]                        # 004A8F18
    jne .L4A9049                                         # 004A8F1C
.L4A8F22:
    mov al, 1                                            # 004A8F29
    xchg byte ptr [esi + 0x52], al                       # 004A8F2B
    push eax                                             # 004A8F2E
    msvc_xor eax, eax                                    # 004A8F2F
    call _sub_4ADB47                                     # 004A8F31
    pop eax                                              # 004A8F36
    mov byte ptr [esi + 0x52], al                        # 004A8F37
.L4A8F3A:
    msvc_jmp .L4A9049                                    # 004A8F3A
.L4A8F3F:
    mov edi, dword ptr [__1136120]                       # 004A8F3F
    movzx edi, word ptr [edi + 0x3a]                     # 004A8F45
    shl edi, 7                                           # 004A8F49
    add_offset edi, _things                              # 004A8F4C
    cmp byte ptr [edi + 1], 6                            # 004A8F52
    jne .L4A8F69                                         # 004A8F56
    inc word ptr [edi + 0x4f]                            # 004A8F58
    cmp word ptr [edi + 0x4f], 0x3c0                     # 004A8F5C
    jb .L4A8F69                                          # 004A8F62
    call _sub_4AF06E                                     # 004A8F64
.L4A8F69:
    stc                                                  # 004A8F69
    ret                                                  # 004A8F6A
.L4A8F6B:
    mov byte ptr [esi + 0x5d], 4                         # 004A8F6B
    mov word ptr [esi + 0x54], bp                        # 004A8F6F
    jmp .L4A8F3A                                         # 004A8F73
.L4A8F75:
    cmp byte ptr [esi + 0x42], 1                         # 004A8F75
    jne .L4A8F8E                                         # 004A8F79
    call _sub_4AA36A                                     # 004A8F7B
    cmp bl, 1                                            # 004A8F80
    je .L4A8DB7                                          # 004A8F83
    cmp bl, 2                                            # 004A8F89
    je .L4A8F22                                          # 004A8F8C
.L4A8F8E:
    test word ptr [esi + 0xc], 2                         # 004A8F8E
    jne .L4A8CB6                                         # 004A8F94
    test word ptr [esi + 0xc], 0x40                      # 004A8F9A
    je .L4A8FAC                                          # 004A8FA0
    cmp byte ptr [esi + 0x6e], 0xec                      # 004A8FA2
    jle .L4A8C81                                         # 004A8FA6
.L4A8FAC:
    movzx edi, word ptr [esi + 0x3a]                     # 004A8FAC
    shl edi, 7                                           # 004A8FB0
    add_offset edi, _things                              # 004A8FB3
    movzx edi, word ptr [edi + 0x3a]                     # 004A8FB9
    shl edi, 7                                           # 004A8FBD
    add_offset edi, _things                              # 004A8FC0
    mov ax, word ptr [edi + 0x36]                        # 004A8FC6
    cmp ax, word ptr [esi + 0x36]                        # 004A8FCA
    jne .L4A8F3A                                         # 004A8FCE
    mov ax, word ptr [edi + 0x2e]                        # 004A8FD4
    cmp ax, word ptr [esi + 0x2e]                        # 004A8FD8
    jne .L4A8F3A                                         # 004A8FDC
    test word ptr [esi + 0xc], 0x40                      # 004A8FE2
    jne .L4A8F3A                                         # 004A8FE8
    call _sub_4B996F                                     # 004A8FEE
    call _sub_4B9987                                     # 004A8FF3
    call _sub_4BACAF                                     # 004A8FF8
    call _sub_4B99E1                                     # 004A8FFD
    msvc_jmp .L4A8F3A                                    # 004A9002
.L4A9007:
    call _sub_4B9A2A                                     # 004A9007
    msvc_jmp .L4A8F3A                                    # 004A900C
.L4A9011:
    call _sub_4BA142                                     # 004A9011
    jb .L4A8F3A                                          # 004A9016
    call _sub_4BAC74                                     # 004A901C
    DebugStamp 0x11110018
    mov byte ptr [esi + 0x5d], 1                         # 004A9021
    call _sub_4707C0                                     # 004A9025
    test word ptr [esi + 0xc], 0x40                      # 004A902A
    jne .L4A903D                                         # 004A9030
    call _sub_4ACCDC                                     # 004A9032
    jb .L4A8F22                                          # 004A9037
.L4A903D:
    msvc_jmp .L4A8F3A                                    # 004A903D
.L4A9042:
    call _sub_4AA625                                     # 004A9042
    stc                                                  # 004A9047
    ret                                                  # 004A9048
.L4A9049:
    call _sub_4B980A                                     # 004A9049
    msvc_and eax, eax                                    # 004A904E
    ret                                                  # 004A9050
.L4A9051:
    push esi                                             # 004A9051
    mov esi, dword ptr [__1136120]                       # 004A9052
    mov dword ptr [__1136130], 0x2000                    # 004A9058
    cmp dword ptr [esi + 0x56], 0x140000                 # 004A9062
    jb .L4A9075                                          # 004A9069
    mov dword ptr [__1136130], 0x4000                    # 004A906B
.L4A9075:
    movzx esi, word ptr [esi + 0x3a]                     # 004A9075
    shl esi, 7                                           # 004A9079
    add_offset esi, _things                              # 004A907C
    movzx esi, word ptr [esi + 0x3a]                     # 004A9082
    shl esi, 7                                           # 004A9086
    add_offset esi, _things                              # 004A9089
    movzx esi, word ptr [esi + 0x3a]                     # 004A908F
    shl esi, 7                                           # 004A9093
    add_offset esi, _things                              # 004A9096
    call _sub_4AAB0B                                     # 004A909C
    pop esi                                              # 004A90A1
    cmp byte ptr [esi + 0x5d], 1                         # 004A90A2
    jne .L4A90CF                                         # 004A90A6
    test word ptr [esi + 0xc], 2                         # 004A90A8
    jne .L4A8F3A                                         # 004A90AE
    msvc_jmp .L4A95D7                                    # 004A90B4
.L4A90B9:
    mov byte ptr [esi + 0x5d], 1                         # 004A90B9
    mov edi, dword ptr [__1136120]                       # 004A90BD
    mov dword ptr [edi + 0x56], 0                        # 004A90C3
    msvc_jmp .L4A8F3A                                    # 004A90CA
.L4A90CF:
    cmp byte ptr [esi + 0x5d], 5                         # 004A90CF
    je .L4A95EB                                          # 004A90D3
    cmp byte ptr [esi + 0x5d], 6                         # 004A90D9
    je .L4A95F5                                          # 004A90DD
    mov byte ptr [esi + 0x5d], 2                         # 004A90E3
    call _sub_4273DF                                     # 004A90E7
    mov byte ptr [esi + 0x5d], al                        # 004A90EC
    mov edi, dword ptr [__113611C]                       # 004A90EF
    mov word ptr [edi + 0x44], bx                        # 004A90F5
    call _sub_4707C0                                     # 004A90F9
    mov edi, dword ptr [__113611C]                       # 004A90FE
    movzx ecx, word ptr [edi + 0x44]                     # 004A9104
    shl ecx, 0x10                                        # 004A9108
    mov edi, dword ptr [__1136120]                       # 004A910B
    mov eax, dword ptr [edi + 0x56]                      # 004A9111
    msvc_cmp eax, ecx                                    # 004A9114
    je .L4A9178                                          # 004A9116
    ja .L4A912E                                          # 004A9118
    mov byte ptr [edi + 0x5a], 1                         # 004A911A
    add eax, 0x20000                                     # 004A911E
    msvc_cmp eax, ecx                                    # 004A9123
    jbe .L4A9129                                         # 004A9125
    msvc_mov eax, ecx                                    # 004A9127
.L4A9129:
    mov dword ptr [edi + 0x56], eax                      # 004A9129
    jmp .L4A9187                                         # 004A912C
.L4A912E:
    mov byte ptr [edi + 0x5a], 2                         # 004A912E
    mov edx, 0x20000                                     # 004A9132
    cmp eax, 0x820000                                    # 004A9137
    jb .L4A915B                                          # 004A913C
    mov edx, 0x50000                                     # 004A913E
    cmp eax, 0x1900000                                   # 004A9143
    jb .L4A915B                                          # 004A9148
    mov edx, 0xb0000                                     # 004A914A
    cmp eax, 0x2580000                                   # 004A914F
    jb .L4A915B                                          # 004A9154
    mov edx, 0x190000                                    # 004A9156
.L4A915B:
    cmp ecx, 0x140000                                    # 004A915B
    jne .L4A9167                                         # 004A9161
    mov byte ptr [edi + 0x5a], 3                         # 004A9163
.L4A9167:
    msvc_sub eax, edx                                    # 004A9167
    jns .L4A916D                                         # 004A9169
    msvc_xor eax, eax                                    # 004A916B
.L4A916D:
    msvc_cmp eax, ecx                                    # 004A916D
    jae .L4A9173                                         # 004A916F
    msvc_mov eax, ecx                                    # 004A9171
.L4A9173:
    mov dword ptr [edi + 0x56], eax                      # 004A9173
    jmp .L4A9187                                         # 004A9176
.L4A9178:
    mov byte ptr [edi + 0x5a], 5                         # 004A9178
    cmp eax, 0x140000                                    # 004A917C
    je .L4A9187                                          # 004A9181
    mov byte ptr [edi + 0x5a], 2                         # 004A9183
.L4A9187:
    call _sub_427122                                     # 004A9187
    mov dword ptr [__11360D0], ebp                       # 004A918C
    mov word ptr [__1136168], dx                         # 004A9192
    test dword ptr [__525BB0], 0x80                      # 004A9199
    je .L4A91C2                                          # 004A91A3
    mov byte ptr [__113646D], bl                         # 004A91A5
    mov bl, byte ptr [esi + 0x1e]                        # 004A91AB
    mov edi, dword ptr [__1136120]                       # 004A91AE
    mov byte ptr [edi + 0x5a], 1                         # 004A91B4
    cmp dx, word ptr [esi + 0x12]                        # 004A91B8
    jae .L4A91C2                                         # 004A91BC
    mov byte ptr [edi + 0x5a], 2                         # 004A91BE
.L4A91C2:
    sub bl, byte ptr [esi + 0x1e]                        # 004A91C2
    and bl, 0x3f                                         # 004A91C5
    je .L4A91DF                                          # 004A91C8
    cmp bl, 0x20                                         # 004A91CA
    ja .L4A91D8                                          # 004A91CD
    inc byte ptr [esi + 0x1e]                            # 004A91CF
    and byte ptr [esi + 0x1e], 0x3f                      # 004A91D2
    jmp .L4A91DF                                         # 004A91D6
.L4A91D8:
    dec byte ptr [esi + 0x1e]                            # 004A91D8
    and byte ptr [esi + 0x1e], 0x3f                      # 004A91DB
.L4A91DF:
    mov edi, dword ptr [__1136120]                       # 004A91DF
    cmp dword ptr [edi + 0x56], 0x320000                 # 004A91E5
    jae .L4A9213                                         # 004A91EC
    movzx edi, word ptr [edi + 0x3a]                     # 004A91EE
    shl edi, 7                                           # 004A91F2
    add_offset edi, _things                              # 004A91F5
    movzx edi, word ptr [edi + 0x40]                     # 004A91FB
    mov edi, dword ptr [edi*4 + _vehicleObjects]         # 004A91FF
    mov al, 2                                            # 004A9206
    test word ptr [edi + 0xe0], 0x100                    # 004A9208
    jne .L4A9215                                         # 004A9211
.L4A9213:
    mov al, 0                                            # 004A9213
.L4A9215:
    cmp dx, word ptr [esi + 0x12]                        # 004A9215
    jbe .L4A922C                                         # 004A9219
    mov edi, dword ptr [__1136120]                       # 004A921B
    cmp dword ptr [edi + 0x56], 0x15e0000                # 004A9221
    ja .L4A922C                                          # 004A9228
    mov al, 2                                            # 004A922A
.L4A922C:
    cmp dx, word ptr [esi + 0x12]                        # 004A922C
    jae .L4A9266                                         # 004A9230
    mov edi, dword ptr [__1136120]                       # 004A9232
    cmp dword ptr [edi + 0x56], 0xb40000                 # 004A9238
    ja .L4A9266                                          # 004A923F
    movzx edi, word ptr [edi + 0x3a]                     # 004A9241
    shl edi, 7                                           # 004A9245
    add_offset edi, _things                              # 004A9248
    movzx edi, word ptr [edi + 0x40]                     # 004A924E
    mov edi, dword ptr [edi*4 + _vehicleObjects]         # 004A9252
    test word ptr [edi + 0xe0], 0x800                    # 004A9259
    je .L4A9266                                          # 004A9262
    mov al, 2                                            # 004A9264
.L4A9266:
    cmp al, byte ptr [esi + 0x1f]                        # 004A9266
    je .L4A9275                                          # 004A9269
    jb .L4A9272                                          # 004A926B
    inc byte ptr [esi + 0x1f]                            # 004A926D
    jmp .L4A9275                                         # 004A9270
.L4A9272:
    dec byte ptr [esi + 0x1f]                            # 004A9272
.L4A9275:
    test dword ptr [__525BB0], 0x80                      # 004A9275
    jne .L4A92AF                                         # 004A927F
    mov edi, dword ptr [__1136120]                       # 004A9281
    mov eax, 0x1e0                                       # 004A9287
    cmp byte ptr [esi + 0x68], 0xff                      # 004A928C
    je .L4A92A5                                          # 004A9290
    mov eax, 5                                           # 004A9292
    cmp dword ptr [edi + 0x56], 0x460000                 # 004A9297
    jb .L4A92A5                                          # 004A929E
    mov eax, 0x1e                                        # 004A92A0
.L4A92A5:
    msvc_cmp ebp, eax                                    # 004A92A5
    ja .L4A94A9                                          # 004A92A7
    jmp .L4A92CC                                         # 004A92AD
.L4A92AF:
    mov edi, dword ptr [__1136120]                       # 004A92AF
    mov dword ptr [edi + 0x56], 0x80000                  # 004A92B5
    mov ax, word ptr [__1136168]                         # 004A92BC
    cmp ax, word ptr [esi + 0x12]                        # 004A92C2
    jne .L4A94A9                                         # 004A92C6
.L4A92CC:
    movsx eax, word ptr [esi + 0x54]                     # 004A92CC
    cmp eax, -1                                          # 004A92D0
    je .L4A930B                                          # 004A92D3
    movsx ebx, byte ptr [esi + 0x68]                     # 004A92D5
    cmp ebx, -1                                          # 004A92D9
    je .L4A930B                                          # 004A92DC
    call _sub_426E26                                     # 004A92DE
    test ebx, 0x100                                      # 004A92E3
    je .L4A92F2                                          # 004A92E9
    pushal                                               # 004A92EB
    call _sub_42750E                                     # 004A92EC
    popal                                                # 004A92F1
.L4A92F2:
    test ebx, 8                                          # 004A92F2
    je .L4A92FF                                          # 004A92F8
    call _sub_4BACAF                                     # 004A92FA
.L4A92FF:
    test ebx, 1                                          # 004A92FF
    jne .L4A95CB                                         # 004A9305
.L4A930B:
    mov eax, 0xffffffff                                  # 004A930B
    cmp word ptr [esi + 0x54], -1                        # 004A9310
    je .L4A931B                                          # 004A9315
    movsx eax, byte ptr [esi + 0x68]                     # 004A9317
.L4A931B:
    call _sub_427214                                     # 004A931B
    cmp eax, -2                                          # 004A9320
    jne .L4A9348                                         # 004A9323
    mov edi, dword ptr [__1136120]                       # 004A9325
    cmp dword ptr [edi + 0x56], 0x1e0000                 # 004A932B
    ja .L4A94A9                                          # 004A9332
    mov dword ptr [edi + 0x56], 0                        # 004A9338
    mov byte ptr [edi + 0x5a], 0                         # 004A933F
    msvc_jmp .L4A8F3A                                    # 004A9343
.L4A9348:
    movsx ebx, word ptr [esi + 0x54]                     # 004A9348
    cmp ebx, -1                                          # 004A934C
    je .L4A9367                                          # 004A934F
    imul ebx, ebx, 0x3d2                                 # 004A9351
    movsx ecx, byte ptr [esi + 0x68]                     # 004A9357
    cmp ecx, -1                                          # 004A935B
    je .L4A9367                                          # 004A935E
    btr dword ptr [ebx + _stations+954], ecx             # 004A9360
.L4A9367:
    cmp eax, -1                                          # 004A9367
    je .L4A938A                                          # 004A936A
    mov byte ptr [esi + 0x68], al                        # 004A936C
    movsx ebx, word ptr [esi + 0x54]                     # 004A936F
    cmp ebx, -1                                          # 004A9373
    je .L4A9385                                          # 004A9376
    imul ebx, ebx, 0x3d2                                 # 004A9378
    bts dword ptr [ebx + _stations+954], eax             # 004A937E
.L4A9385:
    msvc_jmp .L4A94A9                                    # 004A9385
.L4A938A:
    call _sub_4BAC74                                     # 004A938A
    cmp word ptr [esi + 0x4c], 1                         # 004A938F
    je .L4A94A5                                          # 004A9394
    mov ebp, dword ptr [esi + 0x46]                      # 004A939A
    movzx edi, word ptr [esi + 0x4a]                     # 004A939D
    mov bl, byte ptr [edi + ebp + __987C5C]              # 004A93A1
    and ebx, 7                                           # 004A93A8
    cmp bl, 1                                            # 004A93AB
    jne .L4A94A5                                         # 004A93AE
    mov bh, byte ptr [edi + ebp + __987C5C]              # 004A93B4
    mov bl, byte ptr [edi + ebp + __987C5C+1]            # 004A93BB
    shr bh, 6                                            # 004A93C2
    and ebx, 0x3ff                                       # 004A93C5
    msvc_mov ebp, ebx                                    # 004A93CB
    imul ebp, ebp, 0x3d2                                 # 004A93CD
    test word ptr [ebp + _stations+42], 0x40             # 004A93D3
    je .L4A94A5                                          # 004A93DC
    mov al, byte ptr [esi + 0x21]                        # 004A93E2
    cmp al, byte ptr [_scenarioChunk3+36]                # 004A93E5
    je .L4A93F9                                          # 004A93EB
    cmp al, byte ptr [_scenarioChunk3+37]                # 004A93ED
    jne .L4A94A1                                         # 004A93F3
.L4A93F9:
    pushal                                               # 004A93F9
    mov ax, word ptr [ebp + _stations+948]               # 004A93FA
    mov cx, word ptr [ebp + _stations+950]               # 004A9401
    mov dx, word ptr [ebp + _stations+952]               # 004A9408
    shr dx, 2                                            # 004A940F
    movzx edi, cx                                        # 004A9413
    shl edi, 9                                           # 004A9416
    msvc_or di, ax                                       # 004A9419
    shr edi, 3                                           # 004A941C
    mov edi, dword ptr [edi + __E40134]                  # 004A941F
.L4A9425:
    mov al, byte ptr [edi]                               # 004A9425
    and al, 0x3c                                         # 004A9427
    cmp al, 8                                            # 004A9429
    jne .L4A9432                                         # 004A942B
    cmp dl, byte ptr [edi + 2]                           # 004A942D
    je .L4A9437                                          # 004A9430
.L4A9432:
    add edi, 8                                           # 004A9432
    jmp .L4A9425                                         # 004A9435
.L4A9437:
    mov al, byte ptr [edi + 5]                           # 004A9437
    and eax, 0x1f                                        # 004A943A
    mov edi, dword ptr [eax*4 + _airportObjects]         # 004A943D
    movzx ebp, word ptr [esi + 0x3a]                     # 004A9444
    shl ebp, 7                                           # 004A9448
    add_offset ebp, _things                              # 004A944B
    movzx ebp, word ptr [ebp + 0x3a]                     # 004A9451
    shl ebp, 7                                           # 004A9455
    add_offset ebp, _things                              # 004A9458
    movzx ebp, word ptr [ebp + 0x3a]                     # 004A945E
    shl ebp, 7                                           # 004A9462
    add_offset ebp, _things                              # 004A9465
    movzx eax, word ptr [ebp + 0x40]                     # 004A946B
    call _sub_426790                                     # 004A946F
    test word ptr [edi + 0x10], ax                       # 004A9474
    jne .L4A94A0                                         # 004A9478
    mov al, byte ptr [esi + 0x21]                        # 004A947A
    cmp al, byte ptr [_scenarioChunk3+36]                # 004A947D
    jne .L4A949D                                         # 004A9483
    mov al, 0xc                                          # 004A9485
    msvc_mov cx, bx                                      # 004A9487
    mov bx, word ptr [esi + 0xa]                         # 004A948A
    mov dx, 0xffff                                       # 004A948E
    mov ah, byte ptr [_scenarioChunk3+36]                # 004A9492
    call _sub_4285BA                                     # 004A9498
.L4A949D:
    popal                                                # 004A949D
    jmp .L4A94A5                                         # 004A949E
.L4A94A0:
    popal                                                # 004A94A0
.L4A94A1:
    mov word ptr [esi + 0x54], bx                        # 004A94A1
.L4A94A5:
    mov byte ptr [esi + 0x68], 0xff                      # 004A94A5
.L4A94A9:
    movzx ebx, byte ptr [esi + 0x1e]                     # 004A94A9
    test dword ptr [__525BB0], 0x80                      # 004A94AD
    je .L4A94C0                                          # 004A94B7
    movzx ebx, byte ptr [__113646D]                      # 004A94B9
.L4A94C0:
    mov edi, dword ptr [__113611C]                       # 004A94C0
    movzx eax, word ptr [esi + 0xe]                      # 004A94C6
    movzx ecx, word ptr [esi + 0x10]                     # 004A94CA
    shl eax, 0x10                                        # 004A94CE
    shl ecx, 0x10                                        # 004A94D1
    mov ax, word ptr [edi + 0x4e]                        # 004A94D4
    mov cx, word ptr [edi + 0x50]                        # 004A94D8
    movsx edx, word ptr [ebx*4 + __503B6A]               # 004A94DC
    movsx ebx, word ptr [ebx*4 + __503B6C]               # 004A94E4
    mov ebp, dword ptr [__1136120]                       # 004A94EC
    mov ebp, dword ptr [ebp + 0x56]                      # 004A94F2
    shr ebp, 0xd                                         # 004A94F5
    imul edx, ebp                                        # 004A94F8
    imul ebx, ebp                                        # 004A94FB
    msvc_add eax, edx                                    # 004A94FE
    msvc_add ecx, ebx                                    # 004A9500
    mov word ptr [edi + 0x4e], ax                        # 004A9502
    mov word ptr [edi + 0x50], cx                        # 004A9506
    shr eax, 0x10                                        # 004A950A
    shr ecx, 0x10                                        # 004A950D
    mov dx, word ptr [__1136168]                         # 004A9510
    cmp dx, word ptr [esi + 0x12]                        # 004A9517
    je .L4A95BB                                          # 004A951B
    cmp dword ptr [__11360D0], 0x1c                      # 004A9521
    jbe .L4A9564                                         # 004A9528
    sub dx, word ptr [esi + 0x12]                        # 004A952A
    push eax                                             # 004A952E
    push ecx                                             # 004A952F
    mov ebp, dword ptr [__1136120]                       # 004A9530
    mov eax, dword ptr [ebp + 0x56]                      # 004A9536
    shr eax, 0x10                                        # 004A9539
    movsx edx, dx                                        # 004A953C
    imul edx                                             # 004A953F
    sar eax, 5                                           # 004A9541
    mov ecx, dword ptr [__11360D0]                       # 004A9544
    sub ecx, 0x12                                        # 004A954A
    idiv ecx                                             # 004A954D
    xchg ax, dx                                          # 004A954F
    inc dx                                               # 004A9551
    msvc_or ax, ax                                       # 004A9553
    jns .L4A955C                                         # 004A9556
    sub dx, 2                                            # 004A9558
.L4A955C:
    add dx, word ptr [esi + 0x12]                        # 004A955C
    pop ecx                                              # 004A9560
    pop eax                                              # 004A9561
    jmp .L4A95BB                                         # 004A9562
.L4A9564:
    mov bx, 1                                            # 004A9564
    mov edi, dword ptr [__1136120]                       # 004A9568
    cmp dword ptr [edi + 0x56], 0x320000                 # 004A956E
    jb .L4A9584                                          # 004A9575
    inc bx                                               # 004A9577
    cmp dword ptr [edi + 0x56], 0x640000                 # 004A9579
    jb .L4A9584                                          # 004A9580
    inc bx                                               # 004A9582
.L4A9584:
    mov dx, word ptr [esi + 0x12]                        # 004A9584
    cmp dx, word ptr [__1136168]                         # 004A9588
    je .L4A95BB                                          # 004A958F
    ja .L4A95A8                                          # 004A9591
    msvc_add dx, bx                                      # 004A9593
    cmp dx, word ptr [__1136168]                         # 004A9596
    jbe .L4A95BB                                         # 004A959D
    mov dx, word ptr [__1136168]                         # 004A959F
    jmp .L4A95BB                                         # 004A95A6
.L4A95A8:
    msvc_sub dx, bx                                      # 004A95A8
    cmp dx, word ptr [__1136168]                         # 004A95AB
    jae .L4A95BB                                         # 004A95B2
    mov dx, word ptr [__1136168]                         # 004A95B4
.L4A95BB:
    mov bl, byte ptr [esi + 0x1e]                        # 004A95BB
    mov bh, byte ptr [esi + 0x1f]                        # 004A95BE
    call _sub_426CA4                                     # 004A95C1
    msvc_jmp .L4A9049                                    # 004A95C6
.L4A95CB:
    test word ptr [esi + 0xc], 2                         # 004A95CB
    jne .L4A90B9                                         # 004A95D1
.L4A95D7:
    call _sub_4B996F                                     # 004A95D7
    call _sub_4B9987                                     # 004A95DC
    call _sub_4B99E1                                     # 004A95E1
    msvc_jmp .L4A8F3A                                    # 004A95E6
.L4A95EB:
    call _sub_4B9A2A                                     # 004A95EB
    msvc_jmp .L4A8F3A                                    # 004A95F0
.L4A95F5:
    mov edi, dword ptr [__1136120]                       # 004A95F5
    mov dword ptr [edi + 0x56], 0                        # 004A95FB
    mov byte ptr [edi + 0x5a], 0                         # 004A9602
    call _sub_4BA142                                     # 004A9606
    jb .L4A8F3A                                          # 004A960B
    call _sub_4707C0                                     # 004A9611
    mov byte ptr [esi + 0x5d], 2                         # 004A9616
    call _sub_4273DF                                     # 004A961A
    mov byte ptr [esi + 0x5d], al                        # 004A961F
    mov eax, 0xffffffff                                  # 004A9622
    cmp word ptr [esi + 0x54], -1                        # 004A9627
    je .L4A9632                                          # 004A962C
    movzx eax, byte ptr [esi + 0x68]                     # 004A962E
.L4A9632:
    call _sub_427214                                     # 004A9632
    cmp eax, -2                                          # 004A9637
    jne .L4A9348                                         # 004A963A
    mov byte ptr [esi + 0x5d], 6                         # 004A9640
    msvc_jmp .L4A8F3A                                    # 004A9644
.L4A9649:
    push esi                                             # 004A9649
    mov esi, dword ptr [__1136120]                       # 004A964A
    mov dword ptr [__1136130], 0x2000                    # 004A9650
    cmp dword ptr [esi + 0x56], 0x50000                  # 004A965A
    jb .L4A966D                                          # 004A9661
    mov dword ptr [__1136130], 0x4000                    # 004A9663
.L4A966D:
    movzx esi, word ptr [esi + 0x3a]                     # 004A966D
    shl esi, 7                                           # 004A9671
    add_offset esi, _things                              # 004A9674
    movzx esi, word ptr [esi + 0x3a]                     # 004A967A
    shl esi, 7                                           # 004A967E
    add_offset esi, _things                              # 004A9681
    movzx esi, word ptr [esi + 0x3a]                     # 004A9687
    shl esi, 7                                           # 004A968B
    add_offset esi, _things                              # 004A968E
    call _sub_4AAB0B                                     # 004A9694
    pop esi                                              # 004A9699
    cmp byte ptr [esi + 0x5d], 1                         # 004A969A
    jne .L4A96E4                                         # 004A969E
    test word ptr [esi + 0xc], 2                         # 004A96A0
    jne .L4A8F3A                                         # 004A96A6
    cmp word ptr [esi + 0x54], -1                        # 004A96AC
    jne .L4A9723                                         # 004A96B1
    jmp .L4A96E4                                         # 004A96B3
.L4A96B5:
    mov eax, 1                                           # 004A96B5
    call _sub_427C05                                     # 004A96BA
    test eax, 0x20000                                    # 004A96BF
    je .L4A8F3A                                          # 004A96C4
.L4A96CA:
    mov byte ptr [esi + 0x5d], 1                         # 004A96CA
    mov edi, dword ptr [__1136120]                       # 004A96CE
    mov dword ptr [edi + 0x56], 0                        # 004A96D4
    mov byte ptr [edi + 0x5a], 0                         # 004A96DB
    msvc_jmp .L4A8F3A                                    # 004A96DF
.L4A96E4:
    test word ptr [esi + 0xc], 2                         # 004A96E4
    jne .L4A96B5                                         # 004A96EA
    cmp byte ptr [esi + 0x5d], 5                         # 004A96EC
    je .L4A9749                                          # 004A96F0
    cmp byte ptr [esi + 0x5d], 6                         # 004A96F2
    je .L4A9753                                          # 004A96F6
    mov byte ptr [esi + 0x5d], 2                         # 004A96F8
    call _sub_427BF2                                     # 004A96FC
    mov byte ptr [esi + 0x5d], al                        # 004A9701
    call _sub_4707C0                                     # 004A9704
    msvc_xor eax, eax                                    # 004A9709
    call _sub_427C05                                     # 004A970B
    test eax, 0x10000                                    # 004A9710
    je .L4A9049                                          # 004A9715
    test word ptr [esi + 0xc], 2                         # 004A971B
    jne .L4A96CA                                         # 004A9721
.L4A9723:
    mov edi, dword ptr [__1136120]                       # 004A9723
    mov dword ptr [edi + 0x56], 0                        # 004A9729
    call _sub_4B996F                                     # 004A9730
    call _sub_4B9987                                     # 004A9735
    call _sub_4BACAF                                     # 004A973A
    call _sub_4B99E1                                     # 004A973F
    msvc_jmp .L4A8F3A                                    # 004A9744
.L4A9749:
    call _sub_4B9A2A                                     # 004A9749
    msvc_jmp .L4A8F3A                                    # 004A974E
.L4A9753:
    call _sub_4BA142                                     # 004A9753
    jb .L4A8F3A                                          # 004A9758
    call _sub_4BAC74                                     # 004A975E
    call _sub_4707C0                                     # 004A9763
    mov byte ptr [esi + 0x5d], 2                         # 004A9768
    call _sub_427BF2                                     # 004A976C
    mov byte ptr [esi + 0x5d], al                        # 004A9771
    mov eax, 2                                           # 004A9774
    call _sub_427C05                                     # 004A9779
    call _sub_42843E                                     # 004A977E
    msvc_jmp .L4A8F3A                                    # 004A9783

    .global _sub_4A9788
_sub_4A9788:
    DebugStamp 0x24031651
    cmp byte ptr [esi + 0x42], 2                         # 004A9788
    je .L4A9B08                                          # 004A978C
    cmp byte ptr [esi + 0x42], 3                         # 004A9792
    je .L4A9B08                                          # 004A9796
    cmp byte ptr [esi + 0x42], 1                         # 004A979C
    je .L4A9969                                          # 004A97A0
    movzx ebp, word ptr [esi + 0x36]                     # 004A97A6
    mov ax, 0xffff                                       # 004A97AA
    mov dx, 0xffff                                       # 004A97AE
    msvc_xor edi, edi                                    # 004A97B2
    mov ebx, dword ptr [__1136118]                       # 004A97B4
    test word ptr [ebx + 0xc], 0x40                      # 004A97BA
    jne .L4A981E                                         # 004A97C0
.L4A97C2:
    mov bx, word ptr [ebp*2 + __96885C]                  # 004A97C2
    cmp bx, -2                                           # 004A97CA
    je .L4A981E                                          # 004A97CE
    msvc_mov ecx, ebx                                    # 004A97D0
    shr ebx, 3                                           # 004A97D2
    msvc_or edi, ecx                                     # 004A97D5
    and ebx, 0x3f                                        # 004A97D7
    cmp ax, word ptr [ebx*2 + __4F8974]                  # 004A97DA
    jbe .L4A97EC                                         # 004A97E2
    mov ax, word ptr [ebx*2 + __4F8974]                  # 004A97E4
.L4A97EC:
    test cx, 0x1000                                      # 004A97EC
    je .L4A980D                                          # 004A97F1
    and ecx, 0xe00                                       # 004A97F3
    shr ecx, 9                                           # 004A97F9
    mov ecx, dword ptr [ecx*4 + _bridgeObjects]          # 004A97FC
    cmp dx, word ptr [ecx + 0xa]                         # 004A9803
    jb .L4A980D                                          # 004A9807
    mov dx, word ptr [ecx + 0xa]                         # 004A9809
.L4A980D:
    msvc_mov cx, bp                                      # 004A980D
    dec bp                                               # 004A9810
    and ebp, 0x3f                                        # 004A9812
    and cx, 0xffc0                                       # 004A9815
    msvc_or bp, cx                                       # 004A9819
    jmp .L4A97C2                                         # 004A981C
.L4A981E:
    msvc_mov cx, dx                                      # 004A981E
    movzx ebp, byte ptr [esi + 0x35]                     # 004A9821
    mov ebp, dword ptr [ebp*4 + _trackObjects]           # 004A9825
    mul word ptr [ebp + 0x1c]                            # 004A982C
    inc dx                                               # 004A9830
    msvc_cmp dx, cx                                      # 004A9832
    jb .L4A983A                                          # 004A9835
    msvc_mov dx, cx                                      # 004A9837
.L4A983A:
    mov ebx, dword ptr [__1136118]                       # 004A983A
    test byte ptr [ebx + 0x38], 0x20                     # 004A9840
    je .L4A985A                                          # 004A9844
    msvc_mov ax, dx                                      # 004A9846
    shr ax, 2                                            # 004A9849
    msvc_add dx, ax                                      # 004A984D
    cmp dx, word ptr [ebp + 0x1c]                        # 004A9850
    jbe .L4A985A                                         # 004A9854
    mov dx, word ptr [ebp + 0x1c]                        # 004A9856
.L4A985A:
    mov ebx, dword ptr [__1136120]                       # 004A985A
    mov ax, word ptr [ebx + 0x54]                        # 004A9860
    test byte ptr [ebx + 0x73], 1                        # 004A9864
    je .L4A986E                                          # 004A9868
    shr ax, 2                                            # 004A986A
.L4A986E:
    msvc_cmp dx, ax                                      # 004A986E
    jbe .L4A9876                                         # 004A9871
    msvc_mov dx, ax                                      # 004A9873
.L4A9876:
    test edi, 0x2000                                     # 004A9876
    je .L4A9888                                          # 004A987C
    cmp dx, word ptr [ebx + 0x5c]                        # 004A987E
    jbe .L4A9888                                         # 004A9882
    mov dx, word ptr [ebx + 0x5c]                        # 004A9884
.L4A9888:
    mov ebx, dword ptr [__1136118]                       # 004A9888
    test word ptr [ebx + 0xc], 0x40                      # 004A988E
    jne .L4A98A8                                         # 004A9894
    mov eax, dword ptr [esi + 0x3c]                      # 004A9896
    shr eax, 0xf                                         # 004A9899
    add ax, 5                                            # 004A989C
    msvc_cmp dx, ax                                      # 004A98A0
    jbe .L4A98A8                                         # 004A98A3
    msvc_mov dx, ax                                      # 004A98A5
.L4A98A8:
    mov ebx, dword ptr [__1136118]                       # 004A98A8
    test word ptr [ebx + 0xc], 0x40                      # 004A98AE
    je .L4A98BC                                          # 004A98B4
    cmp byte ptr [ebx + 0x6e], 0xec                      # 004A98B6
    jle .L4A98C4                                         # 004A98BA
.L4A98BC:
    test word ptr [ebx + 0xc], 2                         # 004A98BC
    je .L4A98D3                                          # 004A98C2
.L4A98C4:
    mov ebx, dword ptr [__1136120]                       # 004A98C4
    cmp dword ptr [ebx + 0x56], 0                        # 004A98CA
    jne .L4A98D3                                         # 004A98CE
    msvc_xor dx, dx                                      # 004A98D0
.L4A98D3:
    mov word ptr [esi + 0x44], dx                        # 004A98D3
    movzx eax, dx                                        # 004A98D7
    shl eax, 0x10                                        # 004A98DA
    mov dword ptr [__1136134], eax                       # 004A98DD
    movzx ebp, word ptr [esi + 0x3a]                     # 004A98E2
    shl ebp, 7                                           # 004A98E6
    add_offset ebp, _things                              # 004A98E9
    mov eax, dword ptr [ebp + 0x56]                      # 004A98EF
    shr eax, 1                                           # 004A98F2
    sub eax, dword ptr [esi + 0x3c]                      # 004A98F4
    mov ebx, dword ptr [__113612C]                       # 004A98F7
    shl ebx, 2                                           # 004A98FD
    cmp ebx, 0xcc48                                      # 004A9900
    jge .L4A990D                                         # 004A9906
    mov ebx, 0xcc48                                      # 004A9908
.L4A990D:
    msvc_cmp eax, ebx                                    # 004A990D
    jle .L4A9913                                         # 004A990F
    msvc_mov eax, ebx                                    # 004A9911
.L4A9913:
    push eax                                             # 004A9913
    mov dword ptr [__1136114], 0                         # 004A9914
    call _sub_4B15FF                                     # 004A991E
    pop edx                                              # 004A9923
    msvc_sub edx, eax                                    # 004A9924
    add dword ptr [esi + 0x3c], edx                      # 004A9926
    test dword ptr [__1136114], 2                        # 004A9929
    jne .L4A994F                                         # 004A9933
    test dword ptr [__1136114], 0x10                     # 004A9935
    je .L4A994C                                          # 004A993F
    mov edi, dword ptr [__1136120]                       # 004A9941
    call _sub_4B98DA                                     # 004A9947
.L4A994C:
    msvc_and eax, eax                                    # 004A994C
    ret                                                  # 004A994E
.L4A994F:
    push esi                                             # 004A994F
    mov esi, dword ptr [__1136118]                       # 004A9950
    call _sub_4AD93A                                     # 004A9956
    cmp byte ptr [esi + 0x5d], 4                         # 004A995B
    jne .L4A9965                                         # 004A995F
    mov byte ptr [esi + 0x5d], 2                         # 004A9961
.L4A9965:
    pop esi                                              # 004A9965
    msvc_and eax, eax                                    # 004A9966
    ret                                                  # 004A9968
.L4A9969:
    movzx ebp, word ptr [esi + 0x36]                     # 004A9969
    mov ax, 0xffff                                       # 004A996D
    mov dx, 0xffff                                       # 004A9971
    msvc_xor edi, edi                                    # 004A9975
.L4A9977:
    mov bx, word ptr [ebp*2 + __96885C]                  # 004A9977
    cmp bx, -2                                           # 004A997F
    je .L4A99D3                                          # 004A9983
    msvc_mov ecx, ebx                                    # 004A9985
    shr ebx, 3                                           # 004A9987
    msvc_or edi, ecx                                     # 004A998A
    and ebx, 0xf                                         # 004A998C
    cmp ax, word ptr [ebx*2 + __4F72FC]                  # 004A998F
    jbe .L4A99A1                                         # 004A9997
    mov ax, word ptr [ebx*2 + __4F72FC]                  # 004A9999
.L4A99A1:
    test cx, 0x1000                                      # 004A99A1
    je .L4A99C2                                          # 004A99A6
    and ecx, 0xe00                                       # 004A99A8
    shr ecx, 9                                           # 004A99AE
    mov ecx, dword ptr [ecx*4 + _bridgeObjects]          # 004A99B1
    cmp dx, word ptr [ecx + 0xa]                         # 004A99B8
    jb .L4A99C2                                          # 004A99BC
    mov dx, word ptr [ecx + 0xa]                         # 004A99BE
.L4A99C2:
    msvc_mov cx, bp                                      # 004A99C2
    dec bp                                               # 004A99C5
    and ebp, 0x3f                                        # 004A99C7
    and cx, 0xffc0                                       # 004A99CA
    msvc_or bp, cx                                       # 004A99CE
    jmp .L4A9977                                         # 004A99D1
.L4A99D3:
    msvc_mov cx, dx                                      # 004A99D3
    mov ebx, dword ptr [__1136120]                       # 004A99D6
    movsx ebp, byte ptr [ebx + 0x4f]                     # 004A99DC
    cmp ebp, -1                                          # 004A99E0
    je .L4A9A26                                          # 004A99E3
    mov ebp, dword ptr [ebp*4 + _roadObjects]            # 004A99E5
    mul word ptr [ebp + 0xc]                             # 004A99EC
    inc dx                                               # 004A99F0
    msvc_cmp dx, cx                                      # 004A99F2
    jb .L4A99FA                                          # 004A99F5
    msvc_mov dx, cx                                      # 004A99F7
.L4A99FA:
    cmp dx, 0xc                                          # 004A99FA
    jae .L4A9A04                                         # 004A99FE
    mov dx, 0xc                                          # 004A9A00
.L4A9A04:
    mov ebx, dword ptr [__1136118]                       # 004A9A04
    test byte ptr [ebx + 0x38], 0x20                     # 004A9A0A
    je .L4A9A24                                          # 004A9A0E
    msvc_mov ax, dx                                      # 004A9A10
    shr ax, 2                                            # 004A9A13
    msvc_add dx, ax                                      # 004A9A17
    cmp dx, word ptr [ebp + 0xc]                         # 004A9A1A
    jbe .L4A9A24                                         # 004A9A1E
    mov dx, word ptr [ebp + 0xc]                         # 004A9A20
.L4A9A24:
    jmp .L4A9A2D                                         # 004A9A24
.L4A9A26:
    mov dx, 0x3c                                         # 004A9A26
    mul dx                                               # 004A9A2A
.L4A9A2D:
    movzx ebx, word ptr [esi + 0x3a]                     # 004A9A2D
    shl ebx, 7                                           # 004A9A31
    add_offset ebx, _things                              # 004A9A34
    cmp dx, word ptr [ebx + 0x54]                        # 004A9A3A
    jbe .L4A9A44                                         # 004A9A3E
    mov dx, word ptr [ebx + 0x54]                        # 004A9A40
.L4A9A44:
    test edi, 0x2000                                     # 004A9A44
    je .L4A9A56                                          # 004A9A4A
    cmp dx, word ptr [ebx + 0x5c]                        # 004A9A4C
    jbe .L4A9A56                                         # 004A9A50
    mov dx, word ptr [ebx + 0x5c]                        # 004A9A52
.L4A9A56:
    mov eax, dword ptr [esi + 0x3c]                      # 004A9A56
    shr eax, 0xf                                         # 004A9A59
    add ax, 5                                            # 004A9A5C
    msvc_cmp dx, ax                                      # 004A9A60
    jbe .L4A9A68                                         # 004A9A63
    msvc_mov dx, ax                                      # 004A9A65
.L4A9A68:
    mov ebx, dword ptr [__1136118]                       # 004A9A68
    test word ptr [ebx + 0xc], 0x40                      # 004A9A6E
    je .L4A9A7C                                          # 004A9A74
    cmp byte ptr [ebx + 0x6e], 0xec                      # 004A9A76
    jle .L4A9A84                                         # 004A9A7A
.L4A9A7C:
    test word ptr [ebx + 0xc], 2                         # 004A9A7C
    je .L4A9A93                                          # 004A9A82
.L4A9A84:
    mov ebx, dword ptr [__1136120]                       # 004A9A84
    cmp dword ptr [ebx + 0x56], 0                        # 004A9A8A
    jne .L4A9A93                                         # 004A9A8E
    msvc_xor dx, dx                                      # 004A9A90
.L4A9A93:
    mov word ptr [esi + 0x44], dx                        # 004A9A93
    movzx eax, dx                                        # 004A9A97
    shl eax, 0x10                                        # 004A9A9A
    mov dword ptr [__1136134], eax                       # 004A9A9D
    movzx ebp, word ptr [esi + 0x3a]                     # 004A9AA2
    shl ebp, 7                                           # 004A9AA6
    add_offset ebp, _things                              # 004A9AA9
    mov eax, dword ptr [ebp + 0x56]                      # 004A9AAF
    shr eax, 1                                           # 004A9AB2
    sub eax, dword ptr [esi + 0x3c]                      # 004A9AB4
    mov ebx, dword ptr [__113612C]                       # 004A9AB7
    shl ebx, 2                                           # 004A9ABD
    cmp ebx, 0xcc48                                      # 004A9AC0
    jge .L4A9ACD                                         # 004A9AC6
    mov ebx, 0xcc48                                      # 004A9AC8
.L4A9ACD:
    msvc_cmp eax, ebx                                    # 004A9ACD
    jle .L4A9AD3                                         # 004A9ACF
    msvc_mov eax, ebx                                    # 004A9AD1
.L4A9AD3:
    push eax                                             # 004A9AD3
    call _sub_47CA71                                     # 004A9AD4
    pop edx                                              # 004A9AD9
    msvc_sub edx, eax                                    # 004A9ADA
    add dword ptr [esi + 0x3c], edx                      # 004A9ADC
    test dword ptr [__1136114], 2                        # 004A9ADF
    jne .L4A9AEE                                         # 004A9AE9
    msvc_and eax, eax                                    # 004A9AEB
    ret                                                  # 004A9AED
.L4A9AEE:
    push esi                                             # 004A9AEE
    mov esi, dword ptr [__1136118]                       # 004A9AEF
    call _sub_4AD93A                                     # 004A9AF5
    cmp byte ptr [esi + 0x5d], 4                         # 004A9AFA
    jne .L4A9B04                                         # 004A9AFE
    mov byte ptr [esi + 0x5d], 2                         # 004A9B00
.L4A9B04:
    pop esi                                              # 004A9B04
    msvc_and eax, eax                                    # 004A9B05
    ret                                                  # 004A9B07
.L4A9B08:
    msvc_and eax, eax                                    # 004A9B08
    ret                                                  # 004A9B0A

    .global _sub_4A9B0B
_sub_4A9B0B:
    DebugStamp 0x24031652
    cmp byte ptr [esi + 0x42], 2                         # 004A9B0B
    je .L4AA005                                          # 004A9B0F
    cmp byte ptr [esi + 0x42], 3                         # 004A9B15
    je .L4AA005                                          # 004A9B19
    mov byte ptr [esi + 0x5a], 1                         # 004A9B1F
    mov eax, dword ptr [esi + 0x56]                      # 004A9B23
    sub eax, dword ptr [__1136134]                       # 004A9B26
    jg .L4A9EF0                                          # 004A9B2C
    mov edi, dword ptr [__1136118]                       # 004A9B32
    test word ptr [edi + 0xc], 0x40                      # 004A9B38
    jne .L4A9B55                                         # 004A9B3E
    cmp eax, 0xfffe8000                                  # 004A9B40
    jl .L4A9B4B                                          # 004A9B45
    mov byte ptr [esi + 0x5a], 2                         # 004A9B47
.L4A9B4B:
    cmp dword ptr [esi + 0x56], 0                        # 004A9B4B
    jne .L4A9B55                                         # 004A9B4F
    mov byte ptr [esi + 0x5a], 0                         # 004A9B51
.L4A9B55:
    movzx edi, word ptr [esi + 0x3a]                     # 004A9B55
    shl edi, 7                                           # 004A9B59
    add_offset edi, _things                              # 004A9B5C
.L4A9B62:
    cmp byte ptr [edi + 1], 6                            # 004A9B62
    je .L4A9B84                                          # 004A9B66
    cmp byte ptr [edi + 0x5e], 0                         # 004A9B68
    je .L4A9B75                                          # 004A9B6C
    inc byte ptr [edi + 0x5e]                            # 004A9B6E
    and byte ptr [edi + 0x5e], 0x3f                      # 004A9B71
.L4A9B75:
    movzx edi, word ptr [edi + 0x3a]                     # 004A9B75
    shl edi, 7                                           # 004A9B79
    add_offset edi, _things                              # 004A9B7C
    jmp .L4A9B62                                         # 004A9B82
.L4A9B84:
    msvc_xor ebp, ebp                                    # 004A9B84
    msvc_xor dx, dx                                      # 004A9B86
    movzx edi, word ptr [esi + 0x3a]                     # 004A9B89
    shl edi, 7                                           # 004A9B8D
    add_offset edi, _things                              # 004A9B90
    cmp byte ptr [edi + 1], 6                            # 004A9B96
    je .L4A9DA1                                          # 004A9B9A
.L4A9BA0:
    movzx eax, word ptr [edi + 0x40]                     # 004A9BA0
    mov eax, dword ptr [eax*4 + _vehicleObjects]         # 004A9BA4
    mov ecx, dword ptr [__1136118]                       # 004A9BAB
    cmp byte ptr [ecx + 0x5d], 2                         # 004A9BB1
    jne .L4A9D08                                         # 004A9BB5
    cmp byte ptr [esi + 0x5a], 2                         # 004A9BBB
    je .L4A9D08                                          # 004A9BBF
    cmp word ptr [eax + 0xd8], 0                         # 004A9BC5
    je .L4A9D08                                          # 004A9BCD
    cmp dword ptr [esi + 0x56], 0xa0000                  # 004A9BD3
    ja .L4A9D08                                          # 004A9BDA
    cmp byte ptr [edi + 0x5e], 0                         # 004A9BE0
    jne .L4A9D08                                         # 004A9BE4
    test word ptr [eax + 0xe0], 0x2000                   # 004A9BEA
    je .L4A9D08                                          # 004A9BF3
    cmp byte ptr [__508F19], 0                           # 004A9BF9
    jne .L4A9D08                                         # 004A9C00
    test word ptr [ecx + 0xc], 0x40                      # 004A9C06
    je .L4A9C18                                          # 004A9C0C
    cmp byte ptr [ecx + 0x6e], 0xa                       # 004A9C0E
    jle .L4A9D08                                         # 004A9C12
.L4A9C18:
    push eax                                             # 004A9C18
    push edx                                             # 004A9C19
    movzx edx, word ptr [eax + 0xd8]                     # 004A9C1A
    movzx eax, word ptr [esi + 0x52]                     # 004A9C21
    imul eax, edx                                        # 004A9C25
    movzx ecx, word ptr [edi + 0x52]                     # 004A9C28
    movzx edx, word ptr [esi + 0x50]                     # 004A9C2C
    imul ecx, edx                                        # 004A9C30
    msvc_xor edx, edx                                    # 004A9C33
    shld edx, eax, 7                                     # 004A9C35
    shl eax, 7                                           # 004A9C39
    msvc_or ecx, ecx                                     # 004A9C3C
    je .L4A9C42                                          # 004A9C3E
    div ecx                                              # 004A9C40
.L4A9C42:
    msvc_mov ecx, eax                                    # 004A9C42
    cmp ecx, 0x4e20                                      # 004A9C44
    jb .L4A9C51                                          # 004A9C4A
    mov ecx, 0x4e20                                      # 004A9C4C
.L4A9C51:
    mov eax, dword ptr [_scenarioChunk3]                 # 004A9C51
    mov edx, dword ptr [_scenarioChunk3+4]               # 004A9C56
    ror eax, 3                                           # 004A9C5C
    xor edx, 0x1234567f                                  # 004A9C5F
    mov dword ptr [_scenarioChunk3+4], eax               # 004A9C65
    ror edx, 7                                           # 004A9C6A
    add dword ptr [_scenarioChunk3], edx                 # 004A9C6D
    msvc_cmp ax, cx                                      # 004A9C73
    pop edx                                              # 004A9C76
    pop eax                                              # 004A9C77
    ja .L4A9D08                                          # 004A9C78
    movzx ecx, byte ptr [edi + 0x35]                     # 004A9C7E
    cmp byte ptr [edi + 0x42], 1                         # 004A9C82
    je .L4A9CA1                                          # 004A9C86
    mov ecx, dword ptr [ecx*4 + _trackObjects]           # 004A9C88
    test word ptr [ecx + 0x22], 2                        # 004A9C8F
    jne .L4A9D08                                         # 004A9C95
    test word ptr [ecx + 0x22], 1                        # 004A9C97
    je .L4A9CCC                                          # 004A9C9D
    jmp .L4A9CBD                                         # 004A9C9F
.L4A9CA1:
    cmp cl, 0xff                                         # 004A9CA1
    je .L4A9D08                                          # 004A9CA4
    mov ecx, dword ptr [ecx*4 + _roadObjects]            # 004A9CA6
    test word ptr [ecx + 0x12], 0x10                     # 004A9CAD
    jne .L4A9D08                                         # 004A9CB3
    test word ptr [ecx + 0x12], 0x20                     # 004A9CB5
    je .L4A9CCC                                          # 004A9CBB
.L4A9CBD:
    push eax                                             # 004A9CBD
    push edx                                             # 004A9CBE
    msvc_xor edx, edx                                    # 004A9CBF
    call _sub_4AA97A                                     # 004A9CC1
    msvc_or dl, dl                                       # 004A9CC6
    pop edx                                              # 004A9CC8
    pop eax                                              # 004A9CC9
    je .L4A9D08                                          # 004A9CCA
.L4A9CCC:
    push edi                                             # 004A9CCC
    mov cl, byte ptr [eax + 4]                           # 004A9CCD
.L4A9CD0:
    mov byte ptr [edi + 0x5e], 1                         # 004A9CD0
    movzx edi, word ptr [edi + 0x3a]                     # 004A9CD4
    shl edi, 7                                           # 004A9CD8
    add_offset edi, _things                              # 004A9CDB
    mov byte ptr [edi + 0x5e], 1                         # 004A9CE1
    movzx edi, word ptr [edi + 0x3a]                     # 004A9CE5
    shl edi, 7                                           # 004A9CE9
    add_offset edi, _things                              # 004A9CEC
    mov byte ptr [edi + 0x5e], 1                         # 004A9CF2
    movzx edi, word ptr [edi + 0x3a]                     # 004A9CF6
    shl edi, 7                                           # 004A9CFA
    add_offset edi, _things                              # 004A9CFD
    dec cl                                               # 004A9D03
    jne .L4A9CD0                                         # 004A9D05
    pop edi                                              # 004A9D07
.L4A9D08:
    cmp byte ptr [edi + 0x5e], 0                         # 004A9D08
    je .L4A9D10                                          # 004A9D0C
    mov dh, 1                                            # 004A9D0E
.L4A9D10:
    movzx ebx, byte ptr [edi + 0x1f]                     # 004A9D10
    cmp dword ptr [ebx*4 + __500170], 0xffffb512         # 004A9D14
    jg .L4A9D30                                          # 004A9D1F
    cmp word ptr [eax + 0xd8], 0                         # 004A9D21
    je .L4A9D30                                          # 004A9D29
    call _sub_4AA97A                                     # 004A9D2B
.L4A9D30:
    movzx eax, word ptr [edi + 0x52]                     # 004A9D30
    imul eax, dword ptr [ebx*4 + __500170]               # 004A9D34
    sar eax, 8                                           # 004A9D3C
    msvc_add ebp, eax                                    # 004A9D3F
    movzx edi, word ptr [edi + 0x3a]                     # 004A9D41
    shl edi, 7                                           # 004A9D45
    add_offset edi, _things                              # 004A9D48
    movzx edi, word ptr [edi + 0x3a]                     # 004A9D4E
    shl edi, 7                                           # 004A9D52
    add_offset edi, _things                              # 004A9D55
    movzx edi, word ptr [edi + 0x3a]                     # 004A9D5B
    shl edi, 7                                           # 004A9D5F
    add_offset edi, _things                              # 004A9D62
.L4A9D68:
    cmp byte ptr [edi + 1], 6                            # 004A9D68
    je .L4A9DA1                                          # 004A9D6C
    movzx ebx, word ptr [edi + 0x3a]                     # 004A9D6E
    shl ebx, 7                                           # 004A9D72
    add_offset ebx, _things                              # 004A9D75
    movzx ebx, word ptr [ebx + 0x3a]                     # 004A9D7B
    shl ebx, 7                                           # 004A9D7F
    add_offset ebx, _things                              # 004A9D82
    cmp byte ptr [ebx + 1], 5                            # 004A9D88
    jne .L4A9BA0                                         # 004A9D8C
    movzx edi, word ptr [ebx + 0x3a]                     # 004A9D92
    shl edi, 7                                           # 004A9D96
    add_offset edi, _things                              # 004A9D99
    jmp .L4A9D68                                         # 004A9D9F
.L4A9DA1:
    msvc_or dl, dl                                       # 004A9DA1
    je .L4A9DE8                                          # 004A9DA3
    shl ebp, 1                                           # 004A9DA5
    mov edi, dword ptr [__1136118]                       # 004A9DA7
    bt word ptr [edi + 0xc], 1                           # 004A9DAD
    jb .L4A9DE8                                          # 004A9DB3
    mov byte ptr [esi + 0x5a], 4                         # 004A9DB5
    mov al, byte ptr [edi + 0x21]                        # 004A9DC2
    cmp al, byte ptr [_scenarioChunk3+36]                # 004A9DC5
    jne .L4A9DE8                                         # 004A9DCB
    pushal                                               # 004A9DCD
    mov al, 2                                            # 004A9DCE
    mov bx, word ptr [edi + 0xa]                         # 004A9DD0
    mov cx, 0xffff                                       # 004A9DD4
    mov dx, 0xffff                                       # 004A9DD8
    mov ah, byte ptr [_scenarioChunk3+36]                # 004A9DDC
    call _sub_4285BA                                     # 004A9DE2
    popal                                                # 004A9DE7
.L4A9DE8:
    msvc_or dx, dx                                       # 004A9DE8
    jne .L4A9E88                                         # 004A9DEB
    mov eax, dword ptr [__1136118]                       # 004A9DF1
    test word ptr [eax + 0xc], 0x40                      # 004A9DF6
    jne .L4A9E1C                                         # 004A9DFC
    push edx                                             # 004A9DFE
    movzx eax, word ptr [esi + 0x50]                     # 004A9DFF
    test byte ptr [esi + 0x73], 1                        # 004A9E03
    je .L4A9E0C                                          # 004A9E07
    shr eax, 2                                           # 004A9E09
.L4A9E0C:
    movzx ebx, word ptr [esi + 0x52]                     # 004A9E0C
    msvc_xor edx, edx                                    # 004A9E10
    shl eax, 0xb                                         # 004A9E12
    div ebx                                              # 004A9E15
    msvc_add ebp, eax                                    # 004A9E17
    pop edx                                              # 004A9E19
    jmp .L4A9E88                                         # 004A9E1A
.L4A9E1C:
    push ecx                                             # 004A9E1C
    push edx                                             # 004A9E1D
    movsx ecx, byte ptr [eax + 0x6e]                     # 004A9E1E
    msvc_or ecx, ecx                                     # 004A9E22
    js .L4A9E57                                          # 004A9E24
    mov byte ptr [esi + 0x5a], 2                         # 004A9E26
    cmp ecx, 0xa                                         # 004A9E2A
    jl .L4A9E33                                          # 004A9E2D
    mov byte ptr [esi + 0x5a], 1                         # 004A9E2F
.L4A9E33:
    movzx eax, word ptr [esi + 0x50]                     # 004A9E33
    test byte ptr [esi + 0x73], 1                        # 004A9E37
    je .L4A9E40                                          # 004A9E3B
    shr eax, 2                                           # 004A9E3D
.L4A9E40:
    movzx ebx, word ptr [esi + 0x52]                     # 004A9E40
    msvc_xor edx, edx                                    # 004A9E44
    imul ebx, ebx, 0x28                                  # 004A9E46
    shl eax, 0xb                                         # 004A9E49
    imul eax, ecx                                        # 004A9E4C
    div ebx                                              # 004A9E4F
    msvc_add ebp, eax                                    # 004A9E51
    pop edx                                              # 004A9E53
    pop ecx                                              # 004A9E54
    jmp .L4A9E88                                         # 004A9E55
.L4A9E57:
    mov byte ptr [esi + 0x5a], 2                         # 004A9E57
    cmp ecx, -0xa                                        # 004A9E5B
    jg .L4A9E64                                          # 004A9E5E
    mov byte ptr [esi + 0x5a], 3                         # 004A9E60
.L4A9E64:
    neg ecx                                              # 004A9E64
    movzx eax, word ptr [esi + 0x50]                     # 004A9E66
    test byte ptr [esi + 0x73], 1                        # 004A9E6A
    je .L4A9E73                                          # 004A9E6E
    shr eax, 2                                           # 004A9E70
.L4A9E73:
    movzx ebx, word ptr [esi + 0x52]                     # 004A9E73
    msvc_xor edx, edx                                    # 004A9E77
    imul ebx, ebx, 0x28                                  # 004A9E79
    shl eax, 0xb                                         # 004A9E7C
    imul eax, ecx                                        # 004A9E7F
    div ebx                                              # 004A9E82
    msvc_sub ebp, eax                                    # 004A9E84
    pop edx                                              # 004A9E86
    pop ecx                                              # 004A9E87
.L4A9E88:
    push edx                                             # 004A9E88
    mov eax, dword ptr [esi + 0x56]                      # 004A9E89
    shr eax, 0x10                                        # 004A9E8C
    mul eax                                              # 004A9E8F
    msvc_sub ebp, eax                                    # 004A9E91
    pop edx                                              # 004A9E93
    cmp ebp, 0x8000                                      # 004A9E94
    jle .L4A9EA1                                         # 004A9E9A
    mov ebp, 0x8000                                      # 004A9E9C
.L4A9EA1:
    msvc_or ebp, ebp                                     # 004A9EA1
    jns .L4A9ECD                                         # 004A9EA3
    mov eax, dword ptr [__1136118]                       # 004A9EA5
    test word ptr [eax + 0xc], 0x40                      # 004A9EAA
    jne .L4A9EBB                                         # 004A9EB0
    mov eax, 0x50000                                     # 004A9EB2
    msvc_or dl, dl                                       # 004A9EB7
    je .L4A9EBD                                          # 004A9EB9
.L4A9EBB:
    msvc_xor eax, eax                                    # 004A9EBB
.L4A9EBD:
    cmp dword ptr [esi + 0x56], eax                      # 004A9EBD
    jb .L4A9ECD                                          # 004A9EC0
    add ebp, dword ptr [esi + 0x56]                      # 004A9EC2
    msvc_cmp ebp, eax                                    # 004A9EC5
    jg .L4A9ED0                                          # 004A9EC7
    msvc_mov ebp, eax                                    # 004A9EC9
    jmp .L4A9ED0                                         # 004A9ECB
.L4A9ECD:
    add ebp, dword ptr [esi + 0x56]                      # 004A9ECD
.L4A9ED0:
    mov eax, dword ptr [__1136118]                       # 004A9ED0
    test word ptr [eax + 0xc], 0x40                      # 004A9ED5
    jne .L4A9EEB                                         # 004A9EDB
    cmp ebp, dword ptr [__1136134]                       # 004A9EDD
    jbe .L4A9EEB                                         # 004A9EE3
    mov ebp, dword ptr [__1136134]                       # 004A9EE5
.L4A9EEB:
    mov dword ptr [esi + 0x56], ebp                      # 004A9EEB
    jmp .L4A9F20                                         # 004A9EEE
.L4A9EF0:
    mov byte ptr [esi + 0x5a], 3                         # 004A9EF0
    mov eax, dword ptr [esi + 0x56]                      # 004A9EF4
    msvc_mov ecx, eax                                    # 004A9EF7
    shr ecx, 6                                           # 004A9EF9
    add ecx, 0x2ee0                                      # 004A9EFC
    msvc_sub eax, ecx                                    # 004A9F02
    cmp eax, dword ptr [__1136134]                       # 004A9F04
    jge .L4A9F11                                         # 004A9F0A
    mov eax, dword ptr [__1136134]                       # 004A9F0C
.L4A9F11:
    cmp eax, 0x50000                                     # 004A9F11
    jge .L4A9F1D                                         # 004A9F16
    mov eax, 0x50000                                     # 004A9F18
.L4A9F1D:
    mov dword ptr [esi + 0x56], eax                      # 004A9F1D
.L4A9F20:
    mov eax, dword ptr [__113612C]                       # 004A9F20
    mov dword ptr [__1136114], 0x8000                    # 004A9F25
    call _sub_4B15FF                                     # 004A9F2F
    sub dword ptr [__113612C], eax                       # 004A9F34
    sub dword ptr [__1136130], eax                       # 004A9F3A
    test dword ptr [__1136114], 2                        # 004A9F40
    jne .L4A9FFE                                         # 004A9F4A
    test dword ptr [__1136114], 1                        # 004A9F50
    je .L4A9F74                                          # 004A9F5A
    mov eax, dword ptr [__1136118]                       # 004A9F5C
    test word ptr [eax + 0xc], 0x40                      # 004A9F61
    jne .L4A9F74                                         # 004A9F67
    mov dword ptr [esi + 0x56], 0                        # 004A9F69
    mov byte ptr [esi + 0x5a], 0                         # 004A9F70
.L4A9F74:
    cmp byte ptr [esi + 0x5a], 4                         # 004A9F74
    jne .L4A9F89                                         # 004A9F78
    mov eax, dword ptr [__113612C]                       # 004A9F7A
    add eax, 0x1388                                      # 004A9F7F
    mov dword ptr [__1136130], eax                       # 004A9F84
.L4A9F89:
    mov ebx, dword ptr [__1136118]                       # 004A9F89
    mov eax, dword ptr [__113612C]                       # 004A9F8F
    sub dword ptr [ebx + 0x3c], eax                      # 004A9F94
    mov ebx, dword ptr [__113611C]                       # 004A9F97
    sub dword ptr [ebx + 0x3c], eax                      # 004A9F9D
    cmp byte ptr [esi + 0x5a], 3                         # 004A9FA0
    je .L4A9FD2                                          # 004A9FA4
    cmp byte ptr [esi + 0x5b], 0                         # 004A9FA6
    je .L4A9FFB                                          # 004A9FAA
    dec byte ptr [esi + 0x5b]                            # 004A9FAC
    jne .L4A9FFB                                         # 004A9FAF
    push esi                                             # 004A9FB1
.L4A9FB2:
    call _sub_4CBB01                                     # 004A9FB2
    mov si, word ptr [esi + 0x3a]                        # 004A9FB7
    cmp si, -1                                           # 004A9FBB
    je .L4A9FCF                                          # 004A9FBF
    movzx esi, si                                        # 004A9FC1
    shl esi, 7                                           # 004A9FC4
    add_offset esi, _things                              # 004A9FC7
    jmp .L4A9FB2                                         # 004A9FCD
.L4A9FCF:
    pop esi                                              # 004A9FCF
    jmp .L4A9FFB                                         # 004A9FD0
.L4A9FD2:
    cmp byte ptr [esi + 0x5b], 0                         # 004A9FD2
    jne .L4A9FF7                                         # 004A9FD6
    push esi                                             # 004A9FD8
.L4A9FD9:
    call _sub_4CBB01                                     # 004A9FD9
    mov si, word ptr [esi + 0x3a]                        # 004A9FDE
    cmp si, -1                                           # 004A9FE2
    je .L4A9FF6                                          # 004A9FE6
    movzx esi, si                                        # 004A9FE8
    shl esi, 7                                           # 004A9FEB
    add_offset esi, _things                              # 004A9FEE
    jmp .L4A9FD9                                         # 004A9FF4
.L4A9FF6:
    pop esi                                              # 004A9FF6
.L4A9FF7:
    mov byte ptr [esi + 0x5b], 7                         # 004A9FF7
.L4A9FFB:
    msvc_and eax, eax                                    # 004A9FFB
    ret                                                  # 004A9FFD
.L4A9FFE:
    call _sub_4AA464                                     # 004A9FFE
    stc                                                  # 004AA003
    ret                                                  # 004AA004
.L4AA005:
    msvc_and eax, eax                                    # 004AA005
    ret                                                  # 004AA007

    .global _sub_4AA008
_sub_4AA008:
    DebugStamp 0x24031653
    msvc_mov eax, esi                                    # 004AA008
    xchg dword ptr [__1136128], eax                      # 004AA00A
    mov dword ptr [__1136124], eax                       # 004AA010
    cmp byte ptr [esi + 0x42], 2                         # 004AA015
    je .L4AA1CD                                          # 004AA019
    cmp byte ptr [esi + 0x42], 3                         # 004AA01F
    je .L4AA1CD                                          # 004AA023
    mov ax, word ptr [esi + 0xe]                         # 004AA029
    mov cx, word ptr [esi + 0x10]                        # 004AA02D
    mov dx, word ptr [esi + 0x12]                        # 004AA031
    push eax                                             # 004AA035
    push ecx                                             # 004AA036
    push edx                                             # 004AA037
    mov eax, dword ptr [__113612C]                       # 004AA038
    mov dword ptr [__1136114], 0                         # 004AA03D
    call _sub_4B15FF                                     # 004AA047
    pop edx                                              # 004AA04C
    pop ecx                                              # 004AA04D
    pop eax                                              # 004AA04E
    cmp dword ptr [__1136124], -1                        # 004AA04F
    je .L4AA065                                          # 004AA056
    movzx ebp, word ptr [esi + 0x40]                     # 004AA058
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AA05C
    jmp .L4AA065                                         # 004AA063
.L4AA065:
    msvc_xor bl, bl                                      # 004AA065
    cmp ax, word ptr [esi + 0xe]                         # 004AA067
    jne .L4AA079                                         # 004AA06B
    cmp cx, word ptr [esi + 0x10]                        # 004AA06D
    jne .L4AA079                                         # 004AA071
    cmp dx, word ptr [esi + 0x12]                        # 004AA073
    je .L4AA07B                                          # 004AA077
.L4AA079:
    inc bl                                               # 004AA079
.L4AA07B:
    xchg byte ptr [__1136237], bl                        # 004AA07B
    mov byte ptr [__1136238], bl                         # 004AA081
    push dword ptr [__1136130]                           # 004AA087
    cmp byte ptr [esi + 0x5e], 0                         # 004AA08D
    je .L4AA0B2                                          # 004AA091
    movzx eax, byte ptr [esi + 0x5e]                     # 004AA093
    cmp eax, 0x20                                        # 004AA097
    jbe .L4AA0A1                                         # 004AA09A
    neg eax                                              # 004AA09C
    add eax, 0x40                                        # 004AA09E
.L4AA0A1:
    imul eax, eax, 0x140                                 # 004AA0A1
    add eax, 0x1f4                                       # 004AA0A7
    add dword ptr [__1136130], eax                       # 004AA0AC
.L4AA0B2:
    call _sub_4AAC02                                     # 004AA0B2
    pop dword ptr [__1136130]                            # 004AA0B7
    test dword ptr [__1136114], 2                        # 004AA0BD
    jne .L4AA0D8                                         # 004AA0C7
    test dword ptr [__1136114], 4                        # 004AA0C9
    jne .L4AA0DF                                         # 004AA0D3
    msvc_and eax, eax                                    # 004AA0D5
    ret                                                  # 004AA0D7
.L4AA0D8:
    call _sub_4AA464                                     # 004AA0D8
    stc                                                  # 004AA0DD
    ret                                                  # 004AA0DE
.L4AA0DF:
    call _sub_4AA464                                     # 004AA0DF
    push esi                                             # 004AA0E4
    call _sub_4AA407                                     # 004AA0E5
    or word ptr [esi + 0xc], 0x20                        # 004AA0EA
    and dword ptr [esi + 0x5a], 0x7fffffff               # 004AA0EF
    shr dword ptr [esi + 0x5a], 3                        # 004AA0F6
    or dword ptr [esi + 0x5a], 0x80000000                # 004AA0FA
    movzx esi, word ptr [esi + 0x3a]                     # 004AA101
    shl esi, 7                                           # 004AA105
    add_offset esi, _things                              # 004AA108
    cmp byte ptr [esi + 1], 3                            # 004AA10E
    jne .L4AA121                                         # 004AA112
    movzx esi, word ptr [esi + 0x3a]                     # 004AA114
    shl esi, 7                                           # 004AA118
    add_offset esi, _things                              # 004AA11B
.L4AA121:
    call _sub_4AA407                                     # 004AA121
    or word ptr [esi + 0xc], 0x20                        # 004AA126
    and dword ptr [esi + 0x5a], 0x7fffffff               # 004AA12B
    shr dword ptr [esi + 0x5a], 3                        # 004AA132
    or dword ptr [esi + 0x5a], 0x80000000                # 004AA136
    pop esi                                              # 004AA13D
    push esi                                             # 004AA13E
    movzx esi, word ptr [__113610E]                      # 004AA13F
    shl esi, 7                                           # 004AA146
    add_offset esi, _things                              # 004AA149
    cmp byte ptr [esi], 0                                # 004AA14F
    jne .L4AA1CA                                         # 004AA152
    movzx ebx, word ptr [esi + 0x26]                     # 004AA154
    shl ebx, 7                                           # 004AA158
    add_offset ebx, _things                              # 004AA15B
    cmp byte ptr [ebx + 0x5d], 8                         # 004AA161
    je .L4AA16C                                          # 004AA165
    call _sub_4AA464                                     # 004AA167
.L4AA16C:
    call _sub_4AA407                                     # 004AA16C
    or word ptr [esi + 0xc], 0x20                        # 004AA171
    and dword ptr [esi + 0x5a], 0x7fffffff               # 004AA176
    shr dword ptr [esi + 0x5a], 3                        # 004AA17D
    or dword ptr [esi + 0x5a], 0x80000000                # 004AA181
    cmp byte ptr [esi + 1], 3                            # 004AA188
    jne .L4AA1CA                                         # 004AA18C
    movzx esi, word ptr [esi + 0x3a]                     # 004AA18E
    shl esi, 7                                           # 004AA192
    add_offset esi, _things                              # 004AA195
    cmp byte ptr [esi + 1], 3                            # 004AA19B
    jne .L4AA1AE                                         # 004AA19F
    movzx esi, word ptr [esi + 0x3a]                     # 004AA1A1
    shl esi, 7                                           # 004AA1A5
    add_offset esi, _things                              # 004AA1A8
.L4AA1AE:
    call _sub_4AA407                                     # 004AA1AE
    or word ptr [esi + 0xc], 0x20                        # 004AA1B3
    and dword ptr [esi + 0x5a], 0x7fffffff               # 004AA1B8
    shr dword ptr [esi + 0x5a], 3                        # 004AA1BF
    or dword ptr [esi + 0x5a], 0x80000000                # 004AA1C3
.L4AA1CA:
    pop esi                                              # 004AA1CA
    stc                                                  # 004AA1CB
    ret                                                  # 004AA1CC
.L4AA1CD:
    msvc_and eax, eax                                    # 004AA1CD
    ret                                                  # 004AA1CF

    .global _sub_4AA1D0
_sub_4AA1D0:
    DebugStamp 0x24031654
    cmp byte ptr [esi + 0x42], 2                         # 004AA1D0
    je .L4AA242                                          # 004AA1D4
    cmp byte ptr [esi + 0x42], 3                         # 004AA1D6
    je .L4AA242                                          # 004AA1DA
    mov al, byte ptr [__1136237]                         # 004AA1DC
    or al, byte ptr [__1136238]                          # 004AA1E1
    je .L4AA204                                          # 004AA1E7
    call _sub_4CBB01                                     # 004AA1E9
    mov ebx, dword ptr [__1136124]                       # 004AA1EE
    mov edi, dword ptr [__1136128]                       # 004AA1F4
    call _sub_4AC255                                     # 004AA1FA
    call _sub_4CBB01                                     # 004AA1FF
.L4AA204:
    push dword ptr [__1136130]                           # 004AA204
    cmp byte ptr [esi + 0x5e], 0                         # 004AA20A
    je .L4AA22F                                          # 004AA20E
    movzx eax, byte ptr [esi + 0x5e]                     # 004AA210
    cmp eax, 0x20                                        # 004AA214
    jbe .L4AA21E                                         # 004AA217
    neg eax                                              # 004AA219
    add eax, 0x40                                        # 004AA21B
.L4AA21E:
    imul eax, eax, 0x140                                 # 004AA21E
    add eax, 0x1f4                                       # 004AA224
    add dword ptr [__1136130], eax                       # 004AA229
.L4AA22F:
    call _sub_4AAC4E                                     # 004AA22F
    call _sub_4AAB0B                                     # 004AA234
    pop dword ptr [__1136130]                            # 004AA239
    msvc_and eax, eax                                    # 004AA23F
    ret                                                  # 004AA241
.L4AA242:
    call _sub_4AAC4E                                     # 004AA242
    msvc_and eax, eax                                    # 004AA247
    ret                                                  # 004AA249

    .global _sub_4AA24A
_sub_4AA24A:
    DebugStamp 0x24031655
    cmp byte ptr [esi + 0x42], 2                         # 004AA24A
    je .L4AA367                                          # 004AA24E
    cmp byte ptr [esi + 0x42], 3                         # 004AA254
    je .L4AA367                                          # 004AA258
    push word ptr [esi + 0x36]                           # 004AA25E
    push word ptr [esi + 0x30]                           # 004AA262
    push word ptr [esi + 0x32]                           # 004AA266
    push word ptr [esi + 0x34]                           # 004AA26A
    mov eax, dword ptr [__113612C]                       # 004AA26E
    mov dword ptr [__1136114], 0                         # 004AA273
    call _sub_4B15FF                                     # 004AA27D
    pop dx                                               # 004AA282
    pop cx                                               # 004AA284
    pop ax                                               # 004AA286
    pop bp                                               # 004AA288
    test dword ptr [__1136114], 2                        # 004AA28A
    jne .L4AA360                                         # 004AA294
    cmp bp, word ptr [esi + 0x36]                        # 004AA29A
    je .L4AA348                                          # 004AA29E
    msvc_xor dh, dh                                      # 004AA2A4
    shl dx, 2                                            # 004AA2A6
    movzx ebp, bp                                        # 004AA2AA
    mov bx, 0xfffe                                       # 004AA2AD
    xchg word ptr [ebp*2 + __96885C], bx                 # 004AA2B1
    cmp byte ptr [esi + 0x42], 1                         # 004AA2B9
    je .L4AA34B                                          # 004AA2BD
    test bx, 0x8000                                      # 004AA2C3
    je .L4AA2E1                                          # 004AA2C8
    pushal                                               # 004AA2CA
    msvc_mov ebp, ebx                                    # 004AA2CB
    and ebp, 0x1ff                                       # 004AA2CD
    mov bl, byte ptr [esi + 0x21]                        # 004AA2D3
    mov bh, byte ptr [esi + 0x35]                        # 004AA2D6
    msvc_xor edi, edi                                    # 004AA2D9
    call _sub_48963F                                     # 004AA2DB
    popal                                                # 004AA2E0
.L4AA2E1:
    pushal                                               # 004AA2E1
    msvc_mov ebp, ebx                                    # 004AA2E2
    and ebp, 0x1ff                                       # 004AA2E4
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AA2EA
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AA2F2
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AA2FA
    movzx ebx, byte ptr [ebp*8 + __4F7B5D]               # 004AA302
    cmp bl, 0xc                                          # 004AA30A
    jae .L4AA31F                                         # 004AA30D
    sub ax, word ptr [ebx*4 + __503C6C]                  # 004AA30F
    sub cx, word ptr [ebx*4 + __503C6E]                  # 004AA317
.L4AA31F:
    xor ebp, 4                                           # 004AA31F
    mov bl, byte ptr [esi + 0x21]                        # 004AA322
    mov bh, byte ptr [esi + 0x35]                        # 004AA325
    call _sub_4A2AD7                                     # 004AA328
    popal                                                # 004AA32D
    pushal                                               # 004AA32E
    msvc_mov ebp, ebx                                    # 004AA32F
    and ebp, 0x1ff                                       # 004AA331
    mov bl, byte ptr [esi + 0x21]                        # 004AA337
    mov bh, byte ptr [esi + 0x35]                        # 004AA33A
    mov edi, 9                                           # 004AA33D
    call _sub_4794BC                                     # 004AA342
    popal                                                # 004AA347
.L4AA348:
    msvc_and eax, eax                                    # 004AA348
    ret                                                  # 004AA34A
.L4AA34B:
    pushal                                               # 004AA34B
    msvc_mov ebp, ebx                                    # 004AA34C
    and ebp, 0x1ff                                       # 004AA34E
    shr dx, 2                                            # 004AA354
    call _sub_47D959                                     # 004AA358
    popal                                                # 004AA35D
    jmp .L4AA348                                         # 004AA35E
.L4AA360:
    call _sub_4AA464                                     # 004AA360
    stc                                                  # 004AA365
    ret                                                  # 004AA366
.L4AA367:
    msvc_and eax, eax                                    # 004AA367
    ret                                                  # 004AA369

    .global _sub_4AA36A
_sub_4AA36A:
    pushal                                               # 004AA36A
    movzx edi, word ptr [esi + 0x3a]                     # 004AA36B
    shl edi, 7                                           # 004AA36F
    add_offset edi, _things                              # 004AA372
    movzx edx, word ptr [edi + 0x3a]                     # 004AA378
    shl edx, 7                                           # 004AA37C
    add_offset edx, _things                              # 004AA37F
    mov bx, word ptr [edi + 0x36]                        # 004AA385
    cmp bx, word ptr [edx + 0x36]                        # 004AA389
    jne .L4AA3F1                                         # 004AA38D
    mov bx, word ptr [edi + 0x2e]                        # 004AA38F
    cmp bx, word ptr [edx + 0x2e]                        # 004AA393
    jne .L4AA3F1                                         # 004AA397
    mov ax, 0xa0                                         # 004AA399
    mov cx, 0x3c0                                        # 004AA39D
    movsx ebp, byte ptr [esi + 0x35]                     # 004AA3A1
    cmp ebp, -1                                          # 004AA3A5
    je .L4AA3CF                                          # 004AA3A8
    mov ebp, dword ptr [ebp*4 + _roadObjects]            # 004AA3AA
    test word ptr [ebp + 0x12], 0x40                     # 004AA3B1
    jne .L4AA3CF                                         # 004AA3B7
    mov cx, 0xb40                                        # 004AA3B9
    test word ptr [edi + 0x2c], 0x80                     # 004AA3BD
    je .L4AA3CD                                          # 004AA3C3
    mov ax, 0x40                                         # 004AA3C5
    mov cx, 0x80                                         # 004AA3C9
.L4AA3CD:
    jmp .L4AA3DF                                         # 004AA3CD
.L4AA3CF:
    test word ptr [edi + 0x2c], 0x80                     # 004AA3CF
    je .L4AA3DF                                          # 004AA3D5
    mov ax, 0x80                                         # 004AA3D7
    mov cx, 0x220                                        # 004AA3DB
.L4AA3DF:
    inc word ptr [edi + 0x46]                            # 004AA3DF
    cmp word ptr [edi + 0x46], ax                        # 004AA3E3
    je .L4AA3FB                                          # 004AA3E7
    cmp word ptr [edi + 0x46], cx                        # 004AA3E9
    je .L4AA3FF                                          # 004AA3ED
    jmp .L4AA3F7                                         # 004AA3EF
.L4AA3F1:
    mov word ptr [edi + 0x46], 0                         # 004AA3F1
.L4AA3F7:
    popal                                                # 004AA3F7
    msvc_xor bl, bl                                      # 004AA3F8
    ret                                                  # 004AA3FA
.L4AA3FB:
    popal                                                # 004AA3FB
    mov bl, 1                                            # 004AA3FC
    ret                                                  # 004AA3FE
.L4AA3FF:
    popal                                                # 004AA3FF
    mov bl, 2                                            # 004AA400
    mov byte ptr [esi + 0x5c], 0x28                      # 004AA402
    ret                                                  # 004AA406

    .global _sub_4AA407
_sub_4AA407:
    mov cx, word ptr [esi + 0xe]                         # 004AA407
    mov dx, word ptr [esi + 0x10]                        # 004AA40B
    mov bp, word ptr [esi + 0x12]                        # 004AA40F
    add bp, 0x16                                         # 004AA413
    push eax                                             # 004AA417
    push ebx                                             # 004AA418
    push ecx                                             # 004AA419
    push edx                                             # 004AA41A
    mov ebx, 0x8001                                      # 004AA41B
    mov eax, 6                                           # 004AA420
    call _sub_489CB5                                     # 004AA425
    pop edx                                              # 004AA42A
    pop ecx                                              # 004AA42B
    pop ebx                                              # 004AA42C
    pop eax                                              # 004AA42D
    mov ax, word ptr [esi + 0xe]                         # 004AA42E
    mov cx, word ptr [esi + 0x10]                        # 004AA432
    mov dx, word ptr [esi + 0x12]                        # 004AA436
    add dx, 0x16                                         # 004AA43A
    call _sub_440C13                                     # 004AA43E
    mov bx, word ptr [esi + 0x24]                        # 004AA443
    movzx bp, byte ptr [esi + 0x14]                      # 004AA447
    shr bp, 2                                            # 004AA44C
    cmp bp, 7                                            # 004AA450
    jae .L4AA45A                                         # 004AA454
    mov bp, 7                                            # 004AA456
.L4AA45A:
    call _sub_440B0A                                     # 004AA45A
    dec bp                                               # 004AA45F
    jne .L4AA45A                                         # 004AA461
    ret                                                  # 004AA463

    .global _sub_4AA464
_sub_4AA464:
    push esi                                             # 004AA464
    movzx esi, word ptr [esi + 0x26]                     # 004AA465
    shl esi, 7                                           # 004AA469
    add_offset esi, _things                              # 004AA46C
    cmp byte ptr [esi + 0x5d], 8                         # 004AA472
    je .L4AA4A6                                          # 004AA476
    cmp byte ptr [esi + 0x5d], 9                         # 004AA478
    je .L4AA4A6                                          # 004AA47C
    mov byte ptr [esi + 0x5d], 8                         # 004AA47E
    mov byte ptr [esi + 0x6d], 0                         # 004AA482
    mov al, byte ptr [esi + 0x21]                        # 004AA486
    cmp al, byte ptr [_scenarioChunk3+36]                # 004AA489
    jne .L4AA4A6                                         # 004AA48F
    msvc_mov ah, al                                      # 004AA491
    mov al, 0x1b                                         # 004AA493
    mov bx, word ptr [esi + 0xa]                         # 004AA495
    mov cx, 0xffff                                       # 004AA499
    mov dx, 0xffff                                       # 004AA49D
    call _sub_4285BA                                     # 004AA4A1
.L4AA4A6:
    movzx edi, word ptr [esi + 0x3a]                     # 004AA4A6
    shl edi, 7                                           # 004AA4AA
    add_offset edi, _things                              # 004AA4AD
    movzx edi, word ptr [edi + 0x3a]                     # 004AA4B3
    shl edi, 7                                           # 004AA4B7
    add_offset edi, _things                              # 004AA4BA
.L4AA4C0:
    movzx edi, word ptr [edi + 0x3a]                     # 004AA4C0
    shl edi, 7                                           # 004AA4C4
    add_offset edi, _things                              # 004AA4C7
    cmp byte ptr [edi + 1], 6                            # 004AA4CD
    je .L4AA4DC                                          # 004AA4D1
    mov dword ptr [edi + 0x62], 0                        # 004AA4D3
    jmp .L4AA4C0                                         # 004AA4DA
.L4AA4DC:
    mov dword ptr [esi + 0x69], 0                        # 004AA4DC
    movzx edi, word ptr [esi + 0x3a]                     # 004AA4E3
    shl edi, 7                                           # 004AA4E7
    add_offset edi, _things                              # 004AA4EA
    movzx edi, word ptr [edi + 0x3a]                     # 004AA4F0
    shl edi, 7                                           # 004AA4F4
    add_offset edi, _things                              # 004AA4F7
    mov eax, dword ptr [edi + 0x56]                      # 004AA4FD
    mov byte ptr [edi + 0x5a], 0                         # 004AA500
    movzx edi, word ptr [edi + 0x3a]                     # 004AA504
    shl edi, 7                                           # 004AA508
    add_offset edi, _things                              # 004AA50B
.L4AA511:
    cmp byte ptr [edi + 1], 6                            # 004AA511
    je .L4AA546                                          # 004AA515
    mov dword ptr [edi + 0x5a], eax                      # 004AA517
    movzx edi, word ptr [edi + 0x3a]                     # 004AA51A
    shl edi, 7                                           # 004AA51E
    add_offset edi, _things                              # 004AA521
    mov dword ptr [edi + 0x5a], eax                      # 004AA527
    movzx edi, word ptr [edi + 0x3a]                     # 004AA52A
    shl edi, 7                                           # 004AA52E
    add_offset edi, _things                              # 004AA531
    movzx edi, word ptr [edi + 0x3a]                     # 004AA537
    shl edi, 7                                           # 004AA53B
    add_offset edi, _things                              # 004AA53E
    jmp .L4AA511                                         # 004AA544
.L4AA546:
    mov esi, dword ptr [esp]                             # 004AA546
    cmp byte ptr [esi + 1], 2                            # 004AA549
    je .L4AA5BA                                          # 004AA54D
    cmp byte ptr [esi + 1], 3                            # 004AA54F
    je .L4AA59F                                          # 004AA553
    cmp byte ptr [esi + 1], 6                            # 004AA555
    je .L4AA5E8                                          # 004AA559
    movzx edi, word ptr [esi + 0x26]                     # 004AA55F
    shl edi, 7                                           # 004AA563
    add_offset edi, _things                              # 004AA566
.L4AA56C:
    msvc_mov ebx, ebp                                    # 004AA56C
    msvc_mov ebp, edi                                    # 004AA56E
    movzx edi, word ptr [edi + 0x3a]                     # 004AA570
    shl edi, 7                                           # 004AA574
    add_offset edi, _things                              # 004AA577
    msvc_cmp edi, esi                                    # 004AA57D
    jne .L4AA56C                                         # 004AA57F
    or dword ptr [ebx + 0x5a], 0x80000000                # 004AA581
    mov word ptr [ebx + 0x30], 0                         # 004AA588
    mov word ptr [ebx + 0x32], 0                         # 004AA58E
    mov word ptr [ebx + 0x34], 0                         # 004AA594
    msvc_jmp .L4AA623                                    # 004AA59A
.L4AA59F:
    or dword ptr [esi + 0x5a], 0x80000000                # 004AA59F
    mov word ptr [esi + 0x30], 0                         # 004AA5A6
    mov word ptr [esi + 0x32], 0                         # 004AA5AC
    mov word ptr [esi + 0x34], 0                         # 004AA5B2
    jmp .L4AA623                                         # 004AA5B8
.L4AA5BA:
    movzx edi, word ptr [esi + 0x3a]                     # 004AA5BA
    shl edi, 7                                           # 004AA5BE
    add_offset edi, _things                              # 004AA5C1
    cmp byte ptr [edi + 1], 6                            # 004AA5C7
    je .L4AA623                                          # 004AA5CB
    or dword ptr [edi + 0x5a], 0x80000000                # 004AA5CD
    mov word ptr [edi + 0x30], 0                         # 004AA5D4
    mov word ptr [edi + 0x32], 0                         # 004AA5DA
    mov word ptr [edi + 0x34], 0                         # 004AA5E0
    jmp .L4AA623                                         # 004AA5E6
.L4AA5E8:
    movzx edi, word ptr [esi + 0x26]                     # 004AA5E8
    shl edi, 7                                           # 004AA5EC
    add_offset edi, _things                              # 004AA5EF
.L4AA5F5:
    msvc_mov ebx, ebp                                    # 004AA5F5
    msvc_mov ebp, edi                                    # 004AA5F7
    movzx edi, word ptr [edi + 0x3a]                     # 004AA5F9
    shl edi, 7                                           # 004AA5FD
    add_offset edi, _things                              # 004AA600
    msvc_cmp edi, esi                                    # 004AA606
    jne .L4AA5F5                                         # 004AA608
    or dword ptr [ebx + 0x5a], 0x80000000                # 004AA60A
    mov word ptr [ebx + 0x30], 0                         # 004AA611
    mov word ptr [ebx + 0x32], 0                         # 004AA617
    mov word ptr [ebx + 0x34], 0                         # 004AA61D
.L4AA623:
    pop esi                                              # 004AA623
    ret                                                  # 004AA624

    .global _sub_4AA625
_sub_4AA625:
    push esi                                             # 004AA625
.L4AA626:
    movzx ebp, byte ptr [esi + 1]                        # 004AA626
    call dword ptr [ebp*4 + __500338]                    # 004AA62A
    mov si, word ptr [esi + 0x3a]                        # 004AA631
    cmp si, -1                                           # 004AA635
    je .L4AA649                                          # 004AA639
    movzx esi, si                                        # 004AA63B
    shl esi, 7                                           # 004AA63E
    add_offset esi, _things                              # 004AA641
    jmp .L4AA626                                         # 004AA647
.L4AA649:
    pop esi                                              # 004AA649
    ret                                                  # 004AA64A

    .global _sub_4AA64B
_sub_4AA64B:
    mov dword ptr [__1136118], esi                       # 004AA64B
    mov dword ptr [__1136124], 0xffffffff                # 004AA651
    mov dword ptr [__1136128], 0xffffffff                # 004AA65B
    movzx edi, word ptr [esi + 0x3a]                     # 004AA665
    shl edi, 7                                           # 004AA669
    add_offset edi, _things                              # 004AA66C
    mov dword ptr [__113611C], edi                       # 004AA672
    movzx edi, word ptr [edi + 0x3a]                     # 004AA678
    shl edi, 7                                           # 004AA67C
    add_offset edi, _things                              # 004AA67F
    mov dword ptr [__1136120], edi                       # 004AA685
    ret                                                  # 004AA68B

    .global _sub_4AA68C
_sub_4AA68C:
    ret                                                  # 004AA68C

    .global _sub_4AA68D
_sub_4AA68D:
    ret                                                  # 004AA68D

    .global _sub_4AA68E
_sub_4AA68E:
    msvc_mov eax, esi                                    # 004AA68E
    xchg dword ptr [__1136128], eax                      # 004AA690
    mov dword ptr [__1136124], eax                       # 004AA696
    mov eax, dword ptr [esi + 0x5a]                      # 004AA69B
    msvc_mov ebx, eax                                    # 004AA69E
    and eax, 0x7fffffff                                  # 004AA6A0
    and ebx, 0x80000000                                  # 004AA6A5
    msvc_mov ecx, eax                                    # 004AA6AB
    shr ecx, 6                                           # 004AA6AD
    msvc_sub eax, ecx                                    # 004AA6B0
    cmp eax, 0x20000                                     # 004AA6B2
    ja .L4AA6BB                                          # 004AA6B7
    msvc_xor eax, eax                                    # 004AA6B9
.L4AA6BB:
    msvc_or eax, ebx                                     # 004AA6BB
    mov dword ptr [esi + 0x5a], eax                      # 004AA6BD
    mov eax, dword ptr [esi + 0x5a]                      # 004AA6C0
    and eax, 0x7fffffff                                  # 004AA6C3
    shr eax, 7                                           # 004AA6C8
    mov dword ptr [__113612C], eax                       # 004AA6CB
    mov dword ptr [__1136130], eax                       # 004AA6D0
    call _sub_4AAC02                                     # 004AA6D5
    test dword ptr [esi + 0x5a], 0x80000000              # 004AA6DA
    js .L4AA712                                          # 004AA6E1
    mov eax, dword ptr [__113612C]                       # 004AA6E3
    mov dword ptr [__1136114], 0                         # 004AA6E8
    cmp byte ptr [esi + 0x42], 1                         # 004AA6F2
    je .L4AA709                                          # 004AA6F6
    call _sub_4B15FF                                     # 004AA6F8
    test dword ptr [__1136114], 3                        # 004AA6FD
    jne .L4AA70A                                         # 004AA707
.L4AA709:
    ret                                                  # 004AA709
.L4AA70A:
    or dword ptr [esi + 0x5a], 0x80000000                # 004AA70A
    ret                                                  # 004AA711
.L4AA712:
    movzx ebp, byte ptr [esi + 0x1e]                     # 004AA712
    mov eax, dword ptr [esi + 0x5a]                      # 004AA716
    and eax, 0x7fffffff                                  # 004AA719
    msvc_mov ecx, eax                                    # 004AA71E
    cmp eax, 0x10000                                     # 004AA720
    jb .L4AA903                                          # 004AA725
    movsx ebx, word ptr [ebp*4 + __503B6A]               # 004AA72B
    movsx edx, word ptr [ebp*4 + __503B6C]               # 004AA733
    imul eax, ebx                                        # 004AA73B
    imul ecx, edx                                        # 004AA73E
    sar eax, 0xc                                         # 004AA741
    sar ecx, 0xc                                         # 004AA744
    msvc_mov ebx, eax                                    # 004AA747
    msvc_mov edx, ecx                                    # 004AA749
    shr eax, 0x10                                        # 004AA74B
    shr ecx, 0x10                                        # 004AA74E
    add word ptr [esi + 0x30], bx                        # 004AA751
    adc ax, word ptr [esi + 0xe]                         # 004AA755
    add word ptr [esi + 0x32], dx                        # 004AA759
    adc cx, word ptr [esi + 0x10]                        # 004AA75D
    inc word ptr [esi + 0x34]                            # 004AA761
    mov dx, word ptr [esi + 0x34]                        # 004AA765
    shr dx, 5                                            # 004AA769
    neg dx                                               # 004AA76D
    add dx, word ptr [esi + 0x12]                        # 004AA770
    push eax                                             # 004AA774
    push ecx                                             # 004AA775
    push edx                                             # 004AA776
    mov ax, word ptr [esi + 0xe]                         # 004AA777
    mov cx, word ptr [esi + 0x10]                        # 004AA77B
    mov dx, word ptr [esi + 0x12]                        # 004AA77F
    call _sub_4AA959                                     # 004AA783
    jb .L4AA82F                                          # 004AA788
    mov ax, word ptr [esp + 8]                           # 004AA78E
    mov cx, word ptr [esp + 4]                           # 004AA793
    mov dx, word ptr [esi + 0x12]                        # 004AA798
    call _sub_4AA959                                     # 004AA79C
    jae .L4AA7EB                                         # 004AA7A1
    mov ax, word ptr [esi + 0xe]                         # 004AA7A3
    mov cx, word ptr [esi + 0x10]                        # 004AA7A7
    mov word ptr [esp + 8], ax                           # 004AA7AB
    mov word ptr [esp + 4], cx                           # 004AA7B0
    cmp dword ptr [esi + 0x5a], 0x50000                  # 004AA7B5
    jb .L4AA7D8                                          # 004AA7BC
    add byte ptr [esi + 0x1e], 4                         # 004AA7BE
    and byte ptr [esi + 0x1e], 0x3f                      # 004AA7C2
    test word ptr [esi + 0xc], 0x20                      # 004AA7C6
    jne .L4AA7D8                                         # 004AA7CC
    call _sub_4AA407                                     # 004AA7CE
    or word ptr [esi + 0xc], 0x20                        # 004AA7D3
.L4AA7D8:
    mov eax, dword ptr [esi + 0x5a]                      # 004AA7D8
    and eax, 0x7fffffff                                  # 004AA7DB
    shr eax, 2                                           # 004AA7E0
    or eax, 0x80000000                                   # 004AA7E3
    mov dword ptr [esi + 0x5a], eax                      # 004AA7E8
.L4AA7EB:
    mov ax, word ptr [esp + 8]                           # 004AA7EB
    mov cx, word ptr [esp + 4]                           # 004AA7F0
    mov dx, word ptr [esp]                               # 004AA7F5
    call _sub_4AA959                                     # 004AA7F9
    jae .L4AA82F                                         # 004AA7FE
    mov dx, word ptr [esi + 0x12]                        # 004AA800
    mov word ptr [esp], dx                               # 004AA804
    cmp word ptr [esi + 0x34], 0xa                       # 004AA808
    jb .L4AA829                                          # 004AA80D
    sub byte ptr [esi + 0x1e], 4                         # 004AA80F
    and byte ptr [esi + 0x1e], 0x3f                      # 004AA813
    test word ptr [esi + 0xc], 0x20                      # 004AA817
    jne .L4AA829                                         # 004AA81D
    call _sub_4AA407                                     # 004AA81F
    or word ptr [esi + 0xc], 0x20                        # 004AA824
.L4AA829:
    mov word ptr [esi + 0x34], 0                         # 004AA829
.L4AA82F:
    mov ax, word ptr [esp + 8]                           # 004AA82F
    mov cx, word ptr [esp + 4]                           # 004AA834
    call _sub_467297                                     # 004AA839
    cmp dx, word ptr [esi + 0x12]                        # 004AA83E
    jae .L4AA858                                         # 004AA842
    cmp dx, word ptr [esp]                               # 004AA844
    jb .L4AA8A0                                          # 004AA848
    mov dx, word ptr [esi + 0x12]                        # 004AA84A
    mov word ptr [esp], dx                               # 004AA84E
    mov word ptr [esi + 0x34], 0                         # 004AA852
.L4AA858:
    mov ax, word ptr [esi + 0xe]                         # 004AA858
    mov cx, word ptr [esi + 0x10]                        # 004AA85C
    mov word ptr [esp + 8], ax                           # 004AA860
    mov word ptr [esp + 4], cx                           # 004AA865
    cmp dword ptr [esi + 0x5a], 0x50000                  # 004AA86A
    jb .L4AA88D                                          # 004AA871
    add byte ptr [esi + 0x1e], 4                         # 004AA873
    and byte ptr [esi + 0x1e], 0x3f                      # 004AA877
    test word ptr [esi + 0xc], 0x20                      # 004AA87B
    jne .L4AA88D                                         # 004AA881
    call _sub_4AA407                                     # 004AA883
    or word ptr [esi + 0xc], 0x20                        # 004AA888
.L4AA88D:
    mov eax, dword ptr [esi + 0x5a]                      # 004AA88D
    and eax, 0x7fffffff                                  # 004AA890
    shr eax, 2                                           # 004AA895
    or eax, 0x80000000                                   # 004AA898
    mov dword ptr [esi + 0x5a], eax                      # 004AA89D
.L4AA8A0:
    shr edx, 0x10                                        # 004AA8A0
    msvc_or dx, dx                                       # 004AA8A3
    je .L4AA8F6                                          # 004AA8A6
    cmp dx, word ptr [esi + 0x12]                        # 004AA8A8
    jae .L4AA8F6                                         # 004AA8AC
    cmp dx, word ptr [esp]                               # 004AA8AE
    jb .L4AA8F6                                          # 004AA8B2
    add byte ptr [esi + 0x1e], 4                         # 004AA8B4
    and byte ptr [esi + 0x1e], 0x3f                      # 004AA8B8
    test word ptr [esi + 0xc], 0x20                      # 004AA8BC
    jne .L4AA8F6                                         # 004AA8C2
    mov ax, word ptr [esi + 0xe]                         # 004AA8C4
    mov cx, word ptr [esi + 0x10]                        # 004AA8C8
    call _sub_440C6B                                     # 004AA8CC
    msvc_mov bp, dx                                      # 004AA8D1
    msvc_mov dx, cx                                      # 004AA8D4
    msvc_mov cx, ax                                      # 004AA8D7
    push eax                                             # 004AA8DA
    push ebx                                             # 004AA8DB
    push ecx                                             # 004AA8DC
    push edx                                             # 004AA8DD
    mov ebx, 0x8001                                      # 004AA8DE
    mov eax, 9                                           # 004AA8E3
    call _sub_489CB5                                     # 004AA8E8
    pop edx                                              # 004AA8ED
    pop ecx                                              # 004AA8EE
    pop ebx                                              # 004AA8EF
    pop eax                                              # 004AA8F0
    or word ptr [esi + 0xc], 0x20                        # 004AA8F1
.L4AA8F6:
    pop edx                                              # 004AA8F6
    pop ecx                                              # 004AA8F7
    pop eax                                              # 004AA8F8
    call _sub_46FC83                                     # 004AA8F9
    call _sub_4CBB01                                     # 004AA8FE
.L4AA903:
    ret                                                  # 004AA903

    .global _sub_4AA904
_sub_4AA904:
    call _sub_4CBB01                                     # 004AA904
    mov ebx, dword ptr [__1136124]                       # 004AA909
    mov edi, dword ptr [__1136128]                       # 004AA90F
    call _sub_4AC255                                     # 004AA915
    call _sub_4CBB01                                     # 004AA91A
    call _sub_4AAC4E                                     # 004AA91F
    call _sub_4AAB0B                                     # 004AA924
    test word ptr [esi + 0xc], 0x20                      # 004AA929
    jne .L4AA957                                         # 004AA92F
    mov ebx, dword ptr [__1136124]                       # 004AA931
    mov edi, dword ptr [__1136128]                       # 004AA937
    test word ptr [ebx + 0xc], 0x20                      # 004AA93D
    jne .L4AA94D                                         # 004AA943
    test word ptr [edi + 0xc], 0x20                      # 004AA945
    je .L4AA957                                          # 004AA94B
.L4AA94D:
    call _sub_4AA407                                     # 004AA94D
    or word ptr [esi + 0xc], 0x20                        # 004AA952
.L4AA957:
    ret                                                  # 004AA957

    .global _sub_4AA958
_sub_4AA958:
    ret                                                  # 004AA958

    .global _sub_4AA959
_sub_4AA959:
    push ebx                                             # 004AA959
    call _sub_462893                                     # 004AA95A
    pop ebx                                              # 004AA95F
    jb .L4AA978                                          # 004AA960
    cmp byte ptr [esi + 1], 3                            # 004AA962
    jne .L4AAA29                                         # 004AA966
    push ebp                                             # 004AA96C
    call _sub_4B1876                                     # 004AA96D
    pop ebp                                              # 004AA972
    jb .L4AA978                                          # 004AA973
    msvc_and eax, eax                                    # 004AA975
    ret                                                  # 004AA977
.L4AA978:
    stc                                                  # 004AA978
    ret                                                  # 004AA979

    .global _sub_4AA97A
_sub_4AA97A:
    cmp byte ptr [edi + 0x42], 1                         # 004AA97A
    je .L4AAA50                                          # 004AA97E
    pushal                                               # 004AA984
    movzx ebp, byte ptr [edi + 0x35]                     # 004AA985
    mov ebp, dword ptr [ebp*4 + _trackObjects]           # 004AA989
    test word ptr [ebp + 0x22], 1                        # 004AA990
    je .L4AAA4E                                          # 004AA996
    movzx ebx, word ptr [edi + 0x40]                     # 004AA99C
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004AA9A0
    test word ptr [ebx + 0xe0], 0x40                     # 004AA9A7
    je .L4AAA4A                                          # 004AA9B0
    mov ax, word ptr [edi + 0x30]                        # 004AA9B6
    mov cx, word ptr [edi + 0x32]                        # 004AA9BA
    mov dl, byte ptr [edi + 0x34]                        # 004AA9BE
    movzx ebp, word ptr [edi + 0x2c]                     # 004AA9C1
    movzx esi, cx                                        # 004AA9C5
    shl esi, 9                                           # 004AA9C8
    msvc_or si, ax                                       # 004AA9CB
    shr esi, 3                                           # 004AA9CE
    mov esi, dword ptr [esi + __E40134]                  # 004AA9D1
.L4AA9D7:
    mov al, byte ptr [esi]                               # 004AA9D7
    and al, 0x3c                                         # 004AA9D9
    cmp al, 4                                            # 004AA9DB
    jne .L4AAA02                                         # 004AA9DD
    cmp dl, byte ptr [esi + 2]                           # 004AA9DF
    jne .L4AAA02                                         # 004AA9E2
    mov al, byte ptr [esi]                               # 004AA9E4
    and al, 3                                            # 004AA9E6
    msvc_mov cx, bp                                      # 004AA9E8
    and cl, 3                                            # 004AA9EB
    cmp al, cl                                           # 004AA9EE
    jne .L4AAA02                                         # 004AA9F0
    mov al, byte ptr [esi + 4]                           # 004AA9F2
    and al, 0x3f                                         # 004AA9F5
    msvc_mov cx, bp                                      # 004AA9F7
    shr cx, 3                                            # 004AA9FA
    cmp al, cl                                           # 004AA9FE
    je .L4AAA0D                                          # 004AAA00
.L4AAA02:
    add esi, 8                                           # 004AAA02
    test byte ptr [esi - 7], 0x80                        # 004AAA05
    je .L4AA9D7                                          # 004AAA09
    jmp .L4AAA4A                                         # 004AAA0B
.L4AAA0D:
    mov cl, byte ptr [ebx + 0x118]                       # 004AAA0D
    movzx ebx, byte ptr [edi + 0x35]                     # 004AAA13
    mov ebx, dword ptr [ebx*4 + _trackObjects]           # 004AAA17
    test byte ptr [esi + 7], 0x10                        # 004AAA1E
    je .L4AAA29                                          # 004AAA22
    cmp cl, byte ptr [ebx + 0xa]                         # 004AAA24
    je .L4AAA4E                                          # 004AAA27
.L4AAA29:
    test byte ptr [esi + 7], 0x20                        # 004AAA29
    je .L4AAA34                                          # 004AAA2D
    cmp cl, byte ptr [ebx + 0xb]                         # 004AAA2F
    je .L4AAA4E                                          # 004AAA32
.L4AAA34:
    test byte ptr [esi + 7], 0x40                        # 004AAA34
    je .L4AAA3F                                          # 004AAA38
    cmp cl, byte ptr [ebx + 0xc]                         # 004AAA3A
    je .L4AAA4E                                          # 004AAA3D
.L4AAA3F:
    test byte ptr [esi + 7], 0x80                        # 004AAA3F
    je .L4AAA4A                                          # 004AAA43
    cmp cl, byte ptr [ebx + 0xd]                         # 004AAA45
    je .L4AAA4E                                          # 004AAA48
.L4AAA4A:
    popal                                                # 004AAA4A
    mov dl, 1                                            # 004AAA4B
    ret                                                  # 004AAA4D
.L4AAA4E:
    popal                                                # 004AAA4E
    ret                                                  # 004AAA4F
.L4AAA50:
    pushal                                               # 004AAA50
    movsx ebp, byte ptr [edi + 0x35]                     # 004AAA51
    cmp ebp, -1                                          # 004AAA55
    je .L4AAB09                                          # 004AAA58
    mov ebp, dword ptr [ebp*4 + _roadObjects]            # 004AAA5E
    test word ptr [ebp + 0x12], 0x20                     # 004AAA65
    je .L4AAB09                                          # 004AAA6B
    movzx ebx, word ptr [edi + 0x40]                     # 004AAA71
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004AAA75
    test word ptr [ebx + 0xe0], 0x40                     # 004AAA7C
    je .L4AAB05                                          # 004AAA85
    mov ax, word ptr [edi + 0x30]                        # 004AAA87
    mov cx, word ptr [edi + 0x32]                        # 004AAA8B
    mov dl, byte ptr [edi + 0x34]                        # 004AAA8F
    movzx ebp, word ptr [edi + 0x2c]                     # 004AAA92
    movzx esi, cx                                        # 004AAA96
    shl esi, 9                                           # 004AAA99
    msvc_or si, ax                                       # 004AAA9C
    shr esi, 3                                           # 004AAA9F
    mov esi, dword ptr [esi + __E40134]                  # 004AAAA2
.L4AAAA8:
    mov al, byte ptr [esi]                               # 004AAAA8
    and al, 0x3c                                         # 004AAAAA
    cmp al, 0x1c                                         # 004AAAAC
    jne .L4AAAD3                                         # 004AAAAE
    cmp dl, byte ptr [esi + 2]                           # 004AAAB0
    jne .L4AAAD3                                         # 004AAAB3
    mov al, byte ptr [esi]                               # 004AAAB5
    and al, 3                                            # 004AAAB7
    msvc_mov cx, bp                                      # 004AAAB9
    and cl, 3                                            # 004AAABC
    cmp al, cl                                           # 004AAABF
    jne .L4AAAD3                                         # 004AAAC1
    mov al, byte ptr [esi + 4]                           # 004AAAC3
    and al, 0xf                                          # 004AAAC6
    msvc_mov cx, bp                                      # 004AAAC8
    shr cx, 3                                            # 004AAACB
    cmp al, cl                                           # 004AAACF
    je .L4AAADE                                          # 004AAAD1
.L4AAAD3:
    add esi, 8                                           # 004AAAD3
    test byte ptr [esi - 7], 0x80                        # 004AAAD6
    je .L4AAAA8                                          # 004AAADA
    jmp .L4AAB05                                         # 004AAADC
.L4AAADE:
    mov cl, byte ptr [ebx + 0x118]                       # 004AAADE
    movzx ebx, byte ptr [edi + 0x35]                     # 004AAAE4
    mov ebx, dword ptr [ebx*4 + _roadObjects]            # 004AAAE8
    test byte ptr [esi + 7], 0x40                        # 004AAAEF
    je .L4AAAFA                                          # 004AAAF3
    cmp cl, byte ptr [ebx + 0x26]                        # 004AAAF5
    je .L4AAB09                                          # 004AAAF8
.L4AAAFA:
    test byte ptr [esi + 7], 0x80                        # 004AAAFA
    je .L4AAB05                                          # 004AAAFE
    cmp cl, byte ptr [ebx + 0x27]                        # 004AAB00
    je .L4AAB09                                          # 004AAB03
.L4AAB05:
    popal                                                # 004AAB05
    mov dl, 1                                            # 004AAB06
    ret                                                  # 004AAB08
.L4AAB09:
    popal                                                # 004AAB09
    ret                                                  # 004AAB0A

    .global _sub_4AAB0B
_sub_4AAB0B:
    mov eax, dword ptr [__1136130]                       # 004AAB0B
    shr eax, 3                                           # 004AAB10
    test byte ptr [esi + 0x38], 2                        # 004AAB13
    je .L4AAB1B                                          # 004AAB17
    neg eax                                              # 004AAB19
.L4AAB1B:
    add word ptr [esi + 0x44], ax                        # 004AAB1B
    movzx edx, byte ptr [esi + 0x39]                     # 004AAB1F
    movzx ebp, word ptr [esi + 0x40]                     # 004AAB23
    cmp dl, 0xff                                         # 004AAB27
    je .L4AAB61                                          # 004AAB2A
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AAB2C
    imul edx, edx, 0x1e                                  # 004AAB33
    test byte ptr [edx + ebp + 0x43], 0x40               # 004AAB36
    jne .L4AAB62                                         # 004AAB3B
    cmp byte ptr [edx + ebp + 0x41], 1                   # 004AAB3D
    jne .L4AAB94                                         # 004AAB42
    mov ax, word ptr [esi + 0x44]                        # 004AAB44
    shr ax, 0xc                                          # 004AAB48
    movzx ecx, byte ptr [edx + ebp + 0x3e]               # 004AAB4C
    dec ecx                                              # 004AAB51
    msvc_and eax, ecx                                    # 004AAB52
.L4AAB54:
    cmp al, byte ptr [esi + 0x46]                        # 004AAB54
    je .L4AAB61                                          # 004AAB57
    mov byte ptr [esi + 0x46], al                        # 004AAB59
    call _sub_4CBB01                                     # 004AAB5C
.L4AAB61:
    ret                                                  # 004AAB61
.L4AAB62:
    movzx eax, word ptr [ebp + 0xda]                     # 004AAB62
    movzx ecx, byte ptr [edx + ebp + 0x3e]               # 004AAB69
    push edx                                             # 004AAB6E
    msvc_xor edx, edx                                    # 004AAB6F
    div ecx                                              # 004AAB71
    mov ebx, dword ptr [__1136120]                       # 004AAB73
    msvc_mov ecx, eax                                    # 004AAB79
    mov eax, dword ptr [ebx + 0x56]                      # 004AAB7B
    shr eax, 0x10                                        # 004AAB7E
    msvc_xor edx, edx                                    # 004AAB81
    div ecx                                              # 004AAB83
    pop edx                                              # 004AAB85
    mov cl, byte ptr [edx + ebp + 0x3e]                  # 004AAB86
    dec cl                                               # 004AAB8A
    cmp al, cl                                           # 004AAB8C
    jbe .L4AAB92                                         # 004AAB8E
    msvc_mov al, cl                                      # 004AAB90
.L4AAB92:
    jmp .L4AAB54                                         # 004AAB92
.L4AAB94:
    mov edi, dword ptr [__1136124]                       # 004AAB94
    mov ebx, dword ptr [__1136120]                       # 004AAB9A
    mov al, byte ptr [esi + 0x46]                        # 004AABA0
    movzx ecx, word ptr [edi + 0x2c]                     # 004AABA3
    shr ecx, 2                                           # 004AABA7
    cmp dword ptr [ebx + 0x56], 0x230000                 # 004AABAA
    jb .L4AABF9                                          # 004AABB1
    mov ah, byte ptr [ecx + __4F865C]                    # 004AABB3
    shr ecx, 1                                           # 004AABB9
    cmp cl, 0xc                                          # 004AABBB
    je .L4AABC5                                          # 004AABBE
    cmp cl, 0xd                                          # 004AABC0
    jne .L4AABCE                                         # 004AABC3
.L4AABC5:
    cmp word ptr [edi + 0x2e], 0x30                      # 004AABC5
    jb .L4AABCE                                          # 004AABCA
    neg ah                                               # 004AABCC
.L4AABCE:
    cmp ah, 0                                            # 004AABCE
    je .L4AABF9                                          # 004AABD1
    jl .L4AABE9                                          # 004AABD3
    test byte ptr [esi + 0x38], 2                        # 004AABD5
    jne .L4AABEF                                         # 004AABD9
.L4AABDB:
    mov ah, 2                                            # 004AABDB
    msvc_or al, al                                       # 004AABDD
    je .L4AABFB                                          # 004AABDF
    cmp al, ah                                           # 004AABE1
    je .L4AABFB                                          # 004AABE3
    msvc_xor ah, ah                                      # 004AABE5
    jmp .L4AABFB                                         # 004AABE7
.L4AABE9:
    test byte ptr [esi + 0x38], 2                        # 004AABE9
    jne .L4AABDB                                         # 004AABED
.L4AABEF:
    mov ah, 1                                            # 004AABEF
    msvc_or al, al                                       # 004AABF1
    je .L4AABFB                                          # 004AABF3
    cmp al, ah                                           # 004AABF5
    je .L4AABFB                                          # 004AABF7
.L4AABF9:
    msvc_xor ah, ah                                      # 004AABF9
.L4AABFB:
    msvc_mov al, ah                                      # 004AABFB
    msvc_jmp .L4AAB54                                    # 004AABFD

    .global _sub_4AAC02
_sub_4AAC02:
    mov eax, dword ptr [__1136130]                       # 004AAC02
    shr eax, 3                                           # 004AAC07
    test byte ptr [esi + 0x38], 2                        # 004AAC0A
    je .L4AAC12                                          # 004AAC0E
    neg eax                                              # 004AAC10
.L4AAC12:
    add word ptr [esi + 0x44], ax                        # 004AAC12
    movzx edx, byte ptr [esi + 0x39]                     # 004AAC16
    movzx ebp, word ptr [esi + 0x40]                     # 004AAC1A
    cmp dl, 0xff                                         # 004AAC1E
    je .L4AAC4D                                          # 004AAC21
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AAC23
    imul edx, edx, 0x12                                  # 004AAC2A
    mov ax, word ptr [esi + 0x44]                        # 004AAC2D
    shr ax, 0xc                                          # 004AAC31
    movzx ecx, byte ptr [edx + ebp + 0xb4]               # 004AAC35
    dec ecx                                              # 004AAC3D
    msvc_and eax, ecx                                    # 004AAC3E
    cmp al, byte ptr [esi + 0x46]                        # 004AAC40
    je .L4AAC4D                                          # 004AAC43
    mov byte ptr [esi + 0x46], al                        # 004AAC45
    call _sub_4CBB01                                     # 004AAC48
.L4AAC4D:
    ret                                                  # 004AAC4D

    .global _sub_4AAC4E
_sub_4AAC4E:
    test byte ptr [esi + 0x38], 0x10                     # 004AAC4E
    jne _loc_4AC038                                      # 004AAC52
    mov edi, dword ptr [__1136118]                       # 004AAC58
    cmp byte ptr [edi + 0x5d], 8                         # 004AAC5E
    je _loc_4AC038                                       # 004AAC62
    cmp byte ptr [edi + 0x5d], 9                         # 004AAC68
    je _loc_4AC038                                       # 004AAC6C
    movzx edi, byte ptr [esi + 0x54]                     # 004AAC72
    movzx ebp, word ptr [esi + 0x40]                     # 004AAC76
    imul edi, edi, 6                                     # 004AAC7A
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AAC7D
    movzx ebx, byte ptr [edi + ebp + 0x29]               # 004AAC84
    msvc_or bl, bl                                       # 004AAC89
    je _loc_4AB655                                       # 004AAC8B
    movzx ecx, byte ptr [ebp + 0x10f]                    # 004AAC91
    sub ebx, 0x80                                        # 004AAC98
    jmp dword ptr [ecx*4 + __500354]                     # 004AAC9E
    .global _loc_4AACA5
_loc_4AACA5:
    mov edx, dword ptr [__1136124]                       # 004AACA5
    test byte ptr [edx + 0x5f], 4                        # 004AACAB
    jne _loc_4AB655                                      # 004AACAF
    mov edx, dword ptr [__1136120]                       # 004AACB5
    cmp byte ptr [edx + 0x5a], 1                         # 004AACBB
    je .L4AADC5                                          # 004AACBF
    cmp byte ptr [edx + 0x5a], 4                         # 004AACC5
    je .L4AADC5                                          # 004AACC9
    cmp byte ptr [edx + 0x5a], 0                         # 004AACCF
    je .L4AACFF                                          # 004AACD3
    cmp dword ptr [edx + 0x56], 0x10000                  # 004AACD5
    jb .L4AACFF                                          # 004AACDC
    movzx edx, word ptr [esi + 0x44]                     # 004AACDE
    test byte ptr [esi + 0x38], 2                        # 004AACE2
    je .L4AACEC                                          # 004AACE6
    neg edx                                              # 004AACE8
    neg ebx                                              # 004AACEA
.L4AACEC:
    mov eax, dword ptr [__1136130]                       # 004AACEC
    shl edx, 3                                           # 004AACF1
    msvc_add ax, dx                                      # 004AACF4
    jae _loc_4AB655                                      # 004AACF7
    jmp .L4AAD1D                                         # 004AACFD
.L4AACFF:
    movzx edx, word ptr [esi + 0x44]                     # 004AACFF
    test byte ptr [esi + 0x38], 2                        # 004AAD03
    je .L4AAD0D                                          # 004AAD07
    neg edx                                              # 004AAD09
    neg ebx                                              # 004AAD0B
.L4AAD0D:
    test dword ptr [_scenarioChunk3+326], 7              # 004AAD0D
    jne _loc_4AB655                                      # 004AAD17
.L4AAD1D:
    add ebx, 0x40                                        # 004AAD1D
    push esi                                             # 004AAD20
    mov edi, dword ptr [__1136124]                       # 004AAD21
    mov esi, dword ptr [__1136128]                       # 004AAD27
    mov ax, word ptr [esi + 0xe]                         # 004AAD2D
    mov cx, word ptr [esi + 0x10]                        # 004AAD31
    mov dx, word ptr [esi + 0x12]                        # 004AAD35
    sub ax, word ptr [edi + 0xe]                         # 004AAD39
    sub cx, word ptr [edi + 0x10]                        # 004AAD3D
    sub dx, word ptr [edi + 0x12]                        # 004AAD41
    movsx eax, ax                                        # 004AAD45
    movsx ecx, cx                                        # 004AAD48
    movsx edx, dx                                        # 004AAD4B
    imul eax, ebx                                        # 004AAD4E
    imul ecx, ebx                                        # 004AAD51
    imul edx, ebx                                        # 004AAD54
    sar eax, 7                                           # 004AAD57
    sar ecx, 7                                           # 004AAD5A
    sar edx, 7                                           # 004AAD5D
    add ax, word ptr [edi + 0xe]                         # 004AAD60
    add cx, word ptr [edi + 0x10]                        # 004AAD64
    add dx, word ptr [edi + 0x12]                        # 004AAD68
    pop esi                                              # 004AAD6C
    movzx ebx, byte ptr [esi + 0x1f]                     # 004AAD6D
    movzx di, byte ptr [ebp + 0x10e]                     # 004AAD71
    msvc_add dx, di                                      # 004AAD79
    imul di, word ptr [ebx*2 + __503B50]                 # 004AAD7C
    sar di, 8                                            # 004AAD85
    movzx ebx, byte ptr [esi + 0x1e]                     # 004AAD89
    push ebp                                             # 004AAD8D
    msvc_mov bp, di                                      # 004AAD8E
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AAD91
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AAD9A
    sar bp, 8                                            # 004AADA3
    sar di, 8                                            # 004AADA7
    msvc_add ax, bp                                      # 004AADAB
    msvc_add cx, di                                      # 004AADAE
    pop ebp                                              # 004AADB1
    mov bl, byte ptr [ebp + 0x10d]                       # 004AADB2
    or bl, 0x80                                          # 004AADB8
    call _sub_44080C                                     # 004AADBB
    msvc_jmp _loc_4AB655                                 # 004AADC0
.L4AADC5:
    movzx edx, word ptr [esi + 0x44]                     # 004AADC5
    test byte ptr [esi + 0x38], 2                        # 004AADC9
    je .L4AADD3                                          # 004AADCD
    neg edx                                              # 004AADCF
    neg ebx                                              # 004AADD1
.L4AADD3:
    mov eax, dword ptr [__1136130]                       # 004AADD3
    shl edx, 3                                           # 004AADD8
    msvc_add ax, dx                                      # 004AADDB
    jae _loc_4AB655                                      # 004AADDE
    add ebx, 0x40                                        # 004AADE4
    push esi                                             # 004AADE7
    mov edi, dword ptr [__1136124]                       # 004AADE8
    mov esi, dword ptr [__1136128]                       # 004AADEE
    mov ax, word ptr [esi + 0xe]                         # 004AADF4
    mov cx, word ptr [esi + 0x10]                        # 004AADF8
    mov dx, word ptr [esi + 0x12]                        # 004AADFC
    sub ax, word ptr [edi + 0xe]                         # 004AAE00
    sub cx, word ptr [edi + 0x10]                        # 004AAE04
    sub dx, word ptr [edi + 0x12]                        # 004AAE08
    movsx eax, ax                                        # 004AAE0C
    movsx ecx, cx                                        # 004AAE0F
    movsx edx, dx                                        # 004AAE12
    imul eax, ebx                                        # 004AAE15
    imul ecx, ebx                                        # 004AAE18
    imul edx, ebx                                        # 004AAE1B
    sar eax, 7                                           # 004AAE1E
    sar ecx, 7                                           # 004AAE21
    sar edx, 7                                           # 004AAE24
    add ax, word ptr [edi + 0xe]                         # 004AAE27
    add cx, word ptr [edi + 0x10]                        # 004AAE2B
    add dx, word ptr [edi + 0x12]                        # 004AAE2F
    pop esi                                              # 004AAE33
    movzx ebx, byte ptr [esi + 0x1f]                     # 004AAE34
    movzx di, byte ptr [ebp + 0x10e]                     # 004AAE38
    msvc_add dx, di                                      # 004AAE40
    imul di, word ptr [ebx*2 + __503B50]                 # 004AAE43
    sar di, 8                                            # 004AAE4C
    movzx ebx, byte ptr [esi + 0x1e]                     # 004AAE50
    push ebp                                             # 004AAE54
    msvc_mov bp, di                                      # 004AAE55
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AAE58
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AAE61
    sar bp, 8                                            # 004AAE6A
    sar di, 8                                            # 004AAE6E
    msvc_add ax, bp                                      # 004AAE72
    msvc_add cx, di                                      # 004AAE75
    pop ebp                                              # 004AAE78
    mov bl, byte ptr [ebp + 0x10d]                       # 004AAE79
    call _sub_44080C                                     # 004AAE7F
    inc byte ptr [esi + 0x55]                            # 004AAE84
    mov bl, byte ptr [ebp + 0x10f]                       # 004AAE87
    movzx edi, byte ptr [ebp + 0x10d]                    # 004AAE8D
    sub bl, 0xff                                         # 004AAE94
    mov edi, dword ptr [edi*4 + _steamObjects]           # 004AAE97
    cmp bl, byte ptr [esi + 0x55]                        # 004AAE9E
    ja .L4AAEA7                                          # 004AAEA1
    mov byte ptr [esi + 0x55], 0                         # 004AAEA3
.L4AAEA7:
    msvc_mov bp, dx                                      # 004AAEA7
    msvc_mov dx, cx                                      # 004AAEAA
    msvc_mov cx, ax                                      # 004AAEAD
    movzx eax, byte ptr [esi + 0x55]                     # 004AAEB0
    test word ptr [edi + 8], 4                           # 004AAEB4
    je .L4AAF81                                          # 004AAEBA
    pushal                                               # 004AAEC0
    mov esi, dword ptr [__1136124]                       # 004AAEC1
    mov ax, word ptr [esi + 0x30]                        # 004AAEC7
    mov cx, word ptr [esi + 0x32]                        # 004AAECB
    mov dl, byte ptr [esi + 0x34]                        # 004AAECF
    movzx ebp, word ptr [esi + 0x2c]                     # 004AAED2
    movzx esi, cx                                        # 004AAED6
    shl esi, 9                                           # 004AAED9
    msvc_or si, ax                                       # 004AAEDC
    shr esi, 3                                           # 004AAEDF
    mov esi, dword ptr [esi + __E40134]                  # 004AAEE2
.L4AAEE8:
    mov al, byte ptr [esi]                               # 004AAEE8
    and al, 0x3c                                         # 004AAEEA
    cmp al, 4                                            # 004AAEEC
    jne .L4AAF13                                         # 004AAEEE
    cmp dl, byte ptr [esi + 2]                           # 004AAEF0
    jne .L4AAF13                                         # 004AAEF3
    mov al, byte ptr [esi]                               # 004AAEF5
    and al, 3                                            # 004AAEF7
    msvc_mov cx, bp                                      # 004AAEF9
    and cl, 3                                            # 004AAEFC
    cmp al, cl                                           # 004AAEFF
    jne .L4AAF13                                         # 004AAF01
    mov al, byte ptr [esi + 4]                           # 004AAF03
    and al, 0x3f                                         # 004AAF06
    msvc_mov cx, bp                                      # 004AAF08
    shr cx, 3                                            # 004AAF0B
    cmp al, cl                                           # 004AAF0F
    je .L4AAF1F                                          # 004AAF11
.L4AAF13:
    add esi, 8                                           # 004AAF13
    test byte ptr [esi - 7], 0x80                        # 004AAF16
    je .L4AAEE8                                          # 004AAF1A
.L4AAF1C:
    popal                                                # 004AAF1C
    jmp .L4AAF81                                         # 004AAF1D
.L4AAF1F:
    test byte ptr [esi], 0x80                            # 004AAF1F
    je .L4AAF1C                                          # 004AAF22
    test byte ptr [esi + 9], 0x30                        # 004AAF24
    jne .L4AAF1C                                         # 004AAF28
    popal                                                # 004AAF2A
    push ebx                                             # 004AAF2B
    movzx ebx, byte ptr [edi + 0x1e]                     # 004AAF2C
    shr ebx, 1                                           # 004AAF30
    msvc_add eax, ebx                                    # 004AAF32
    pop ebx                                              # 004AAF34
    movzx eax, byte ptr [eax + edi + 0x1f]               # 004AAF35
    or eax, 0x8000                                       # 004AAF3A
    mov edi, dword ptr [__1136120]                       # 004AAF3F
    mov edi, dword ptr [edi + 0x56]                      # 004AAF45
    cmp edi, 0xf0000                                     # 004AAF48
    ja .L4AAFF5                                          # 004AAF4E
    shr edi, 9                                           # 004AAF54
    neg edi                                              # 004AAF57
    push eax                                             # 004AAF59
    push ecx                                             # 004AAF5A
    push edx                                             # 004AAF5B
    msvc_mov ax, cx                                      # 004AAF5C
    msvc_mov cx, dx                                      # 004AAF5F
    call _sub_467297                                     # 004AAF62
    msvc_cmp bp, dx                                      # 004AAF67
    pop edx                                              # 004AAF6A
    pop ecx                                              # 004AAF6B
    pop eax                                              # 004AAF6C
    jae .L4AAF75                                         # 004AAF6D
    sub edi, 0x5dc                                       # 004AAF6F
.L4AAF75:
    mov ebx, 0x5622                                      # 004AAF75
    call _sub_489F1B                                     # 004AAF7A
    jmp .L4AAFF5                                         # 004AAF7F
.L4AAF81:
    movzx ebx, byte ptr [edi + 0x1e]                     # 004AAF81
    shr ebx, 1                                           # 004AAF85
    test word ptr [edi + 8], 4                           # 004AAF87
    jne .L4AAF91                                         # 004AAF8D
    msvc_xor ebx, ebx                                    # 004AAF8F
.L4AAF91:
    msvc_add ebx, eax                                    # 004AAF91
    movzx ebx, byte ptr [ebx + edi + 0x1f]               # 004AAF93
    movzx eax, byte ptr [eax + edi + 0x1f]               # 004AAF98
    or ebx, 0x8000                                       # 004AAF9D
    or eax, 0x8000                                       # 004AAFA3
    mov edi, dword ptr [__1136120]                       # 004AAFA8
    mov edi, dword ptr [edi + 0x56]                      # 004AAFAE
    cmp edi, 0xf0000                                     # 004AAFB1
    ja .L4AAFF5                                          # 004AAFB7
    shr edi, 9                                           # 004AAFB9
    neg edi                                              # 004AAFBC
    push eax                                             # 004AAFBE
    push ebx                                             # 004AAFBF
    push ecx                                             # 004AAFC0
    push edx                                             # 004AAFC1
    msvc_mov ax, cx                                      # 004AAFC2
    msvc_mov cx, dx                                      # 004AAFC5
    call _sub_467297                                     # 004AAFC8
    msvc_cmp bp, dx                                      # 004AAFCD
    pop edx                                              # 004AAFD0
    pop ecx                                              # 004AAFD1
    pop ebx                                              # 004AAFD2
    pop eax                                              # 004AAFD3
    jae .L4AAFDE                                         # 004AAFD4
    sub edi, 0x5dc                                       # 004AAFD6
    msvc_mov eax, ebx                                    # 004AAFDC
.L4AAFDE:
    mov ebx, 0x5622                                      # 004AAFDE
    cmp edi, 0xfffffe70                                  # 004AAFE3
    jle .L4AAFF0                                         # 004AAFE9
    mov edi, 0xfffffe70                                  # 004AAFEB
.L4AAFF0:
    call _sub_489F1B                                     # 004AAFF0
.L4AAFF5:
    msvc_jmp _loc_4AB655                                 # 004AAFF5
    .global _loc_4AAFFA
_loc_4AAFFA:
    mov edx, dword ptr [__1136124]                       # 004AAFFA
    test byte ptr [edx + 0x5f], 4                        # 004AB000
    jne _loc_4AB655                                      # 004AB004
    mov edx, dword ptr [__1136118]                       # 004AB00A
    cmp byte ptr [edx + 0x5e], 5                         # 004AB010
    je .L4AB0F1                                          # 004AB014
    mov edx, dword ptr [__1136120]                       # 004AB01A
    cmp byte ptr [edx + 0x5a], 1                         # 004AB020
    jne _loc_4AB655                                      # 004AB024
    test byte ptr [esi + 0x38], 2                        # 004AB02A
    je .L4AB032                                          # 004AB02E
    neg ebx                                              # 004AB030
.L4AB032:
    test dword ptr [_scenarioChunk3+326], 3              # 004AB032
    jne _loc_4AB655                                      # 004AB03C
    cmp byte ptr [esi + 0x5e], 0                         # 004AB042
    jne _loc_4AB655                                      # 004AB046
    add ebx, 0x40                                        # 004AB04C
    push esi                                             # 004AB04F
    mov edi, dword ptr [__1136124]                       # 004AB050
    mov esi, dword ptr [__1136128]                       # 004AB056
    mov ax, word ptr [esi + 0xe]                         # 004AB05C
    mov cx, word ptr [esi + 0x10]                        # 004AB060
    mov dx, word ptr [esi + 0x12]                        # 004AB064
    sub ax, word ptr [edi + 0xe]                         # 004AB068
    sub cx, word ptr [edi + 0x10]                        # 004AB06C
    sub dx, word ptr [edi + 0x12]                        # 004AB070
    movsx eax, ax                                        # 004AB074
    movsx ecx, cx                                        # 004AB077
    movsx edx, dx                                        # 004AB07A
    imul eax, ebx                                        # 004AB07D
    imul ecx, ebx                                        # 004AB080
    imul edx, ebx                                        # 004AB083
    sar eax, 7                                           # 004AB086
    sar ecx, 7                                           # 004AB089
    sar edx, 7                                           # 004AB08C
    add ax, word ptr [edi + 0xe]                         # 004AB08F
    add cx, word ptr [edi + 0x10]                        # 004AB093
    add dx, word ptr [edi + 0x12]                        # 004AB097
    pop esi                                              # 004AB09B
    movzx ebx, byte ptr [esi + 0x1f]                     # 004AB09C
    movzx di, byte ptr [ebp + 0x10e]                     # 004AB0A0
    msvc_add dx, di                                      # 004AB0A8
    imul di, word ptr [ebx*2 + __503B50]                 # 004AB0AB
    sar di, 8                                            # 004AB0B4
    movzx ebx, byte ptr [esi + 0x1e]                     # 004AB0B8
    push ebp                                             # 004AB0BC
    msvc_mov bp, di                                      # 004AB0BD
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AB0C0
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AB0C9
    sar bp, 8                                            # 004AB0D2
    sar di, 8                                            # 004AB0D6
    msvc_add ax, bp                                      # 004AB0DA
    msvc_add cx, di                                      # 004AB0DD
    pop ebp                                              # 004AB0E0
    mov bl, byte ptr [ebp + 0x10d]                       # 004AB0E1
    call _sub_44080C                                     # 004AB0E7
    msvc_jmp _loc_4AB655                                 # 004AB0EC
.L4AB0F1:
    mov edx, dword ptr [__1136120]                       # 004AB0F1
    cmp dword ptr [edx + 0x56], 0                        # 004AB0F7
    je _loc_4AB655                                       # 004AB0FB
    test byte ptr [esi + 0x38], 2                        # 004AB101
    je .L4AB109                                          # 004AB105
    neg ebx                                              # 004AB107
.L4AB109:
    test dword ptr [_scenarioChunk3+326], 3              # 004AB109
    jne _loc_4AB655                                      # 004AB113
    movzx dx, byte ptr [ebp + 0x42]                      # 004AB119
    imul dx, bx                                          # 004AB11E
    sar dx, 8                                            # 004AB122
    movzx ecx, byte ptr [esi + 0x1e]                     # 004AB126
    xor ecx, 0x20                                        # 004AB12A
    msvc_mov di, dx                                      # 004AB12D
    imul dx, word ptr [ecx*4 + __503B6A]                 # 004AB130
    imul di, word ptr [ecx*4 + __503B6C]                 # 004AB139
    sar dx, 9                                            # 004AB142
    sar di, 9                                            # 004AB146
    mov ax, word ptr [esi + 0xe]                         # 004AB14A
    mov cx, word ptr [esi + 0x10]                        # 004AB14E
    msvc_add ax, dx                                      # 004AB152
    msvc_add cx, di                                      # 004AB155
    mov dx, word ptr [esi + 0x12]                        # 004AB158
    movzx di, byte ptr [ebp + 0x10e]                     # 004AB15C
    msvc_add dx, di                                      # 004AB164
    mov bl, byte ptr [ebp + 0x10d]                       # 004AB167
    call _sub_44080C                                     # 004AB16D
    msvc_jmp _loc_4AB655                                 # 004AB172
    .global _loc_4AB177
_loc_4AB177:
    mov edx, dword ptr [__1136124]                       # 004AB177
    test byte ptr [edx + 0x5f], 4                        # 004AB17D
    jne _loc_4AB655                                      # 004AB181
    mov edx, dword ptr [__1136120]                       # 004AB187
    cmp byte ptr [edx + 0x5a], 1                         # 004AB18D
    jne _loc_4AB655                                      # 004AB191
    cmp dword ptr [edx + 0x56], 0xe0000                  # 004AB197
    ja _loc_4AB655                                       # 004AB19E
    movzx edx, word ptr [esi + 0x44]                     # 004AB1A4
    test byte ptr [esi + 0x38], 2                        # 004AB1A8
    je .L4AB1B2                                          # 004AB1AC
    neg edx                                              # 004AB1AE
    neg ebx                                              # 004AB1B0
.L4AB1B2:
    test dword ptr [_scenarioChunk3+326], 7              # 004AB1B2
    jne _loc_4AB655                                      # 004AB1BC
    add ebx, 0x40                                        # 004AB1C2
    push esi                                             # 004AB1C5
    mov edi, dword ptr [__1136124]                       # 004AB1C6
    mov esi, dword ptr [__1136128]                       # 004AB1CC
    mov ax, word ptr [esi + 0xe]                         # 004AB1D2
    mov cx, word ptr [esi + 0x10]                        # 004AB1D6
    mov dx, word ptr [esi + 0x12]                        # 004AB1DA
    sub ax, word ptr [edi + 0xe]                         # 004AB1DE
    sub cx, word ptr [edi + 0x10]                        # 004AB1E2
    sub dx, word ptr [edi + 0x12]                        # 004AB1E6
    movsx eax, ax                                        # 004AB1EA
    movsx ecx, cx                                        # 004AB1ED
    movsx edx, dx                                        # 004AB1F0
    imul eax, ebx                                        # 004AB1F3
    imul ecx, ebx                                        # 004AB1F6
    imul edx, ebx                                        # 004AB1F9
    sar eax, 7                                           # 004AB1FC
    sar ecx, 7                                           # 004AB1FF
    sar edx, 7                                           # 004AB202
    add ax, word ptr [edi + 0xe]                         # 004AB205
    add cx, word ptr [edi + 0x10]                        # 004AB209
    add dx, word ptr [edi + 0x12]                        # 004AB20D
    pop esi                                              # 004AB211
    movzx ebx, byte ptr [esi + 0x1f]                     # 004AB212
    movzx di, byte ptr [ebp + 0x10e]                     # 004AB216
    msvc_add dx, di                                      # 004AB21E
    imul di, word ptr [ebx*2 + __503B50]                 # 004AB221
    sar di, 8                                            # 004AB22A
    movzx ebx, byte ptr [esi + 0x1e]                     # 004AB22E
    push ebp                                             # 004AB232
    msvc_mov bp, di                                      # 004AB233
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AB236
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AB23F
    sar bp, 8                                            # 004AB248
    sar di, 8                                            # 004AB24C
    msvc_add ax, bp                                      # 004AB250
    msvc_add cx, di                                      # 004AB253
    pop ebp                                              # 004AB256
    mov bl, byte ptr [esi + 0x1e]                        # 004AB257
    add ebx, 0x10                                        # 004AB25A
    and ebx, 0x3f                                        # 004AB25D
    push ebp                                             # 004AB260
    push esi                                             # 004AB261
    mov bp, 5                                            # 004AB262
    cmp byte ptr [_scenarioChunk3+406], 0                # 004AB266
    je .L4AB272                                          # 004AB26D
    neg bp                                               # 004AB26F
.L4AB272:
    msvc_mov di, bp                                      # 004AB272
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AB275
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AB27E
    sar bp, 8                                            # 004AB287
    sar di, 8                                            # 004AB28B
    msvc_add ax, bp                                      # 004AB28F
    msvc_add cx, di                                      # 004AB292
    pop esi                                              # 004AB295
    pop ebp                                              # 004AB296
    mov bl, byte ptr [ebp + 0x10d]                       # 004AB297
    call _sub_44080C                                     # 004AB29D
    msvc_jmp _loc_4AB655                                 # 004AB2A2
    .global _loc_4AB2A7
_loc_4AB2A7:
    mov edx, dword ptr [__1136120]                       # 004AB2A7
    cmp byte ptr [edx + 0x5a], 0                         # 004AB2AD
    je _loc_4AB655                                       # 004AB2B1
    cmp dword ptr [edx + 0x56], 0x60000                  # 004AB2B7
    jb _loc_4AB655                                       # 004AB2BE
    mov eax, 0x1f                                        # 004AB2C4
    cmp dword ptr [edx + 0x56], 0x90000                  # 004AB2C9
    jb .L4AB2F3                                          # 004AB2D0
    mov eax, 0xf                                         # 004AB2D2
    cmp dword ptr [edx + 0x56], 0xd0000                  # 004AB2D7
    jb .L4AB2F3                                          # 004AB2DE
    mov eax, 7                                           # 004AB2E0
    cmp dword ptr [edx + 0x56], 0x190000                 # 004AB2E5
    jb .L4AB2F3                                          # 004AB2EC
    mov eax, 3                                           # 004AB2EE
.L4AB2F3:
    test dword ptr [_scenarioChunk3+326], eax            # 004AB2F3
    jne _loc_4AB655                                      # 004AB2F9
    movzx edi, byte ptr [esi + 0x1e]                     # 004AB2FF
    xor edi, 0x20                                        # 004AB303
    movsx eax, word ptr [edi*4 + __503B6A]               # 004AB306
    movsx ecx, word ptr [edi*4 + __503B6C]               # 004AB30E
    movzx edx, byte ptr [ebp + 0x42]                     # 004AB316
    imul eax, edx                                        # 004AB31A
    imul ecx, edx                                        # 004AB31D
    sar eax, 0xa                                         # 004AB320
    sar ecx, 0xa                                         # 004AB323
    add ax, word ptr [esi + 0xe]                         # 004AB326
    add cx, word ptr [esi + 0x10]                        # 004AB32A
    mov dx, word ptr [esi + 0x12]                        # 004AB32E
    push eax                                             # 004AB332
    push ecx                                             # 004AB333
    movzx edi, byte ptr [esi + 0x1e]                     # 004AB334
    add edi, 0x10                                        # 004AB338
    and edi, 0x3f                                        # 004AB33B
    movsx eax, word ptr [edi*4 + __503B6A]               # 004AB33E
    movsx ecx, word ptr [edi*4 + __503B6C]               # 004AB346
    movzx ebx, byte ptr [ebp + 0x113]                    # 004AB34E
    imul eax, ebx                                        # 004AB355
    imul ecx, ebx                                        # 004AB358
    sar eax, 9                                           # 004AB35B
    sar ecx, 9                                           # 004AB35E
    add ax, word ptr [esp + 4]                           # 004AB361
    add cx, word ptr [esp]                               # 004AB366
    mov bl, byte ptr [ebp + 0x10d]                       # 004AB36A
    call _sub_44080C                                     # 004AB370
    pop ecx                                              # 004AB375
    pop eax                                              # 004AB376
    cmp byte ptr [ebp + 0x113], 0                        # 004AB377
    je .L4AB3C5                                          # 004AB37E
    push eax                                             # 004AB380
    push ecx                                             # 004AB381
    movzx edi, byte ptr [esi + 0x1e]                     # 004AB382
    sub edi, 0x10                                        # 004AB386
    and edi, 0x3f                                        # 004AB389
    movsx eax, word ptr [edi*4 + __503B6A]               # 004AB38C
    movsx ecx, word ptr [edi*4 + __503B6C]               # 004AB394
    movzx ebx, byte ptr [ebp + 0x113]                    # 004AB39C
    imul eax, ebx                                        # 004AB3A3
    imul ecx, ebx                                        # 004AB3A6
    sar eax, 9                                           # 004AB3A9
    sar ecx, 9                                           # 004AB3AC
    add ax, word ptr [esp + 4]                           # 004AB3AF
    add cx, word ptr [esp]                               # 004AB3B4
    mov bl, byte ptr [ebp + 0x10d]                       # 004AB3B8
    call _sub_44080C                                     # 004AB3BE
    pop ecx                                              # 004AB3C3
    pop eax                                              # 004AB3C4
.L4AB3C5:
    msvc_jmp _loc_4AB655                                 # 004AB3C5
    .global _loc_4AB3CA
_loc_4AB3CA:
    mov edx, dword ptr [__1136124]                       # 004AB3CA
    test byte ptr [edx + 0x5f], 4                        # 004AB3D0
    jne _loc_4AB655                                      # 004AB3D4
    mov edx, dword ptr [__1136120]                       # 004AB3DA
    cmp byte ptr [edx + 0x5a], 2                         # 004AB3E0
    je .L4AB3F0                                          # 004AB3E4
    cmp byte ptr [edx + 0x5a], 1                         # 004AB3E6
    jne _loc_4AB655                                      # 004AB3EA
.L4AB3F0:
    movzx edx, word ptr [esi + 0x44]                     # 004AB3F0
    test byte ptr [esi + 0x38], 2                        # 004AB3F4
    je .L4AB3FE                                          # 004AB3F8
    neg edx                                              # 004AB3FA
    neg ebx                                              # 004AB3FC
.L4AB3FE:
    mov eax, dword ptr [__1136130]                       # 004AB3FE
    shl edx, 3                                           # 004AB403
    msvc_add ax, dx                                      # 004AB406
    jae _loc_4AB655                                      # 004AB409
    add ebx, 0x40                                        # 004AB40F
    mov eax, dword ptr [_scenarioChunk3]                 # 004AB412
    mov edx, dword ptr [_scenarioChunk3+4]               # 004AB417
    ror eax, 3                                           # 004AB41D
    xor edx, 0x1234567f                                  # 004AB420
    mov dword ptr [_scenarioChunk3+4], eax               # 004AB426
    ror edx, 7                                           # 004AB42B
    add dword ptr [_scenarioChunk3], edx                 # 004AB42E
    cmp ax, 0x333                                        # 004AB434
    ja _loc_4AB655                                       # 004AB438
    push esi                                             # 004AB43E
    mov edi, dword ptr [__1136124]                       # 004AB43F
    mov esi, dword ptr [__1136128]                       # 004AB445
    mov ax, word ptr [esi + 0xe]                         # 004AB44B
    mov cx, word ptr [esi + 0x10]                        # 004AB44F
    mov dx, word ptr [esi + 0x12]                        # 004AB453
    sub ax, word ptr [edi + 0xe]                         # 004AB457
    sub cx, word ptr [edi + 0x10]                        # 004AB45B
    sub dx, word ptr [edi + 0x12]                        # 004AB45F
    movsx eax, ax                                        # 004AB463
    movsx ecx, cx                                        # 004AB466
    movsx edx, dx                                        # 004AB469
    imul eax, ebx                                        # 004AB46C
    imul ecx, ebx                                        # 004AB46F
    imul edx, ebx                                        # 004AB472
    sar eax, 7                                           # 004AB475
    sar ecx, 7                                           # 004AB478
    sar edx, 7                                           # 004AB47B
    add ax, word ptr [edi + 0xe]                         # 004AB47E
    add cx, word ptr [edi + 0x10]                        # 004AB482
    add dx, word ptr [edi + 0x12]                        # 004AB486
    pop esi                                              # 004AB48A
    movzx ebx, byte ptr [esi + 0x1f]                     # 004AB48B
    movzx di, byte ptr [ebp + 0x10e]                     # 004AB48F
    msvc_add dx, di                                      # 004AB497
    imul di, word ptr [ebx*2 + __503B50]                 # 004AB49A
    sar di, 8                                            # 004AB4A3
    movzx ebx, byte ptr [esi + 0x1e]                     # 004AB4A7
    push ebp                                             # 004AB4AB
    msvc_mov bp, di                                      # 004AB4AC
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AB4AF
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AB4B8
    sar bp, 8                                            # 004AB4C1
    sar di, 8                                            # 004AB4C5
    msvc_add ax, bp                                      # 004AB4C9
    msvc_add cx, di                                      # 004AB4CC
    pop ebp                                              # 004AB4CF
    mov bl, byte ptr [ebp + 0x10d]                       # 004AB4D0
    call _sub_44080C                                     # 004AB4D6
    msvc_jmp _loc_4AB655                                 # 004AB4DB
    .global _loc_4AB4E0
_loc_4AB4E0:
    mov edx, dword ptr [__1136124]                       # 004AB4E0
    test byte ptr [edx + 0x5f], 4                        # 004AB4E6
    jne _loc_4AB655                                      # 004AB4EA
    mov edx, dword ptr [__1136120]                       # 004AB4F0
    cmp byte ptr [edx + 0x5a], 2                         # 004AB4F6
    je .L4AB506                                          # 004AB4FA
    cmp byte ptr [edx + 0x5a], 1                         # 004AB4FC
    jne _loc_4AB655                                      # 004AB500
.L4AB506:
    movzx edx, word ptr [esi + 0x44]                     # 004AB506
    test byte ptr [esi + 0x38], 2                        # 004AB50A
    je .L4AB514                                          # 004AB50E
    neg edx                                              # 004AB510
    neg ebx                                              # 004AB512
.L4AB514:
    mov eax, dword ptr [__1136130]                       # 004AB514
    shl edx, 3                                           # 004AB519
    msvc_add ax, dx                                      # 004AB51C
    jae _loc_4AB655                                      # 004AB51F
    add ebx, 0x40                                        # 004AB525
    mov eax, dword ptr [_scenarioChunk3]                 # 004AB528
    mov edx, dword ptr [_scenarioChunk3+4]               # 004AB52D
    ror eax, 3                                           # 004AB533
    xor edx, 0x1234567f                                  # 004AB536
    mov dword ptr [_scenarioChunk3+4], eax               # 004AB53C
    ror edx, 7                                           # 004AB541
    add dword ptr [_scenarioChunk3], edx                 # 004AB544
    cmp ax, 0x3a8                                        # 004AB54A
    ja _loc_4AB655                                       # 004AB54E
    push esi                                             # 004AB554
    mov edi, dword ptr [__1136124]                       # 004AB555
    mov esi, dword ptr [__1136128]                       # 004AB55B
    mov ax, word ptr [esi + 0xe]                         # 004AB561
    mov cx, word ptr [esi + 0x10]                        # 004AB565
    mov dx, word ptr [esi + 0x12]                        # 004AB569
    sub ax, word ptr [edi + 0xe]                         # 004AB56D
    sub cx, word ptr [edi + 0x10]                        # 004AB571
    sub dx, word ptr [edi + 0x12]                        # 004AB575
    movsx eax, ax                                        # 004AB579
    movsx ecx, cx                                        # 004AB57C
    movsx edx, dx                                        # 004AB57F
    imul eax, ebx                                        # 004AB582
    imul ecx, ebx                                        # 004AB585
    imul edx, ebx                                        # 004AB588
    sar eax, 7                                           # 004AB58B
    sar ecx, 7                                           # 004AB58E
    sar edx, 7                                           # 004AB591
    add ax, word ptr [edi + 0xe]                         # 004AB594
    add cx, word ptr [edi + 0x10]                        # 004AB598
    add dx, word ptr [edi + 0x12]                        # 004AB59C
    pop esi                                              # 004AB5A0
    movzx ebx, byte ptr [esi + 0x1f]                     # 004AB5A1
    movzx di, byte ptr [ebp + 0x10e]                     # 004AB5A5
    msvc_add dx, di                                      # 004AB5AD
    imul di, word ptr [ebx*2 + __503B50]                 # 004AB5B0
    sar di, 8                                            # 004AB5B9
    movzx ebx, byte ptr [esi + 0x1e]                     # 004AB5BD
    push ebp                                             # 004AB5C1
    msvc_mov bp, di                                      # 004AB5C2
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AB5C5
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AB5CE
    sar bp, 8                                            # 004AB5D7
    sar di, 8                                            # 004AB5DB
    msvc_add ax, bp                                      # 004AB5DF
    msvc_add cx, di                                      # 004AB5E2
    pop ebp                                              # 004AB5E5
    mov bl, byte ptr [esi + 0x1e]                        # 004AB5E6
    add ebx, 0x10                                        # 004AB5E9
    and ebx, 0x3f                                        # 004AB5EC
    push ebp                                             # 004AB5EF
    push esi                                             # 004AB5F0
    test byte ptr [esi + 0x38], 2                        # 004AB5F1
    mov esi, dword ptr [__1136124]                       # 004AB5F5
    je .L4AB603                                          # 004AB5FB
    mov esi, dword ptr [__1136128]                       # 004AB5FD
.L4AB603:
    movzx edi, word ptr [esi + 0x2c]                     # 004AB603
    shr edi, 3                                           # 004AB607
    mov bp, 5                                            # 004AB60A
    test byte ptr [edi + __4F8A7C], 1                    # 004AB60E
    jne .L4AB61A                                         # 004AB615
    neg bp                                               # 004AB617
.L4AB61A:
    test word ptr [esi + 0x2c], 4                        # 004AB61A
    je .L4AB625                                          # 004AB620
    neg bp                                               # 004AB622
.L4AB625:
    msvc_mov di, bp                                      # 004AB625
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AB628
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AB631
    sar bp, 8                                            # 004AB63A
    sar di, 8                                            # 004AB63E
    msvc_add ax, bp                                      # 004AB642
    msvc_add cx, di                                      # 004AB645
    pop esi                                              # 004AB648
    pop ebp                                              # 004AB649
    mov bl, byte ptr [ebp + 0x10d]                       # 004AB64A
    call _sub_44080C                                     # 004AB650
    .global _loc_4AB655
_loc_4AB655:
    movzx edi, byte ptr [esi + 0x54]                     # 004AB655
    movzx ebp, word ptr [esi + 0x40]                     # 004AB659
    imul edi, edi, 6                                     # 004AB65D
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AB660
    movzx ebx, byte ptr [edi + ebp + 0x29]               # 004AB667
    msvc_or bl, bl                                       # 004AB66C
    je _loc_4AC038                                       # 004AB66E
    movzx ecx, byte ptr [ebp + 0x112]                    # 004AB674
    sub ebx, 0x80                                        # 004AB67B
    jmp dword ptr [ecx*4 + __500378]                     # 004AB681
    .global _loc_4AB688
_loc_4AB688:
    mov edx, dword ptr [__1136124]                       # 004AB688
    test byte ptr [edx + 0x5f], 4                        # 004AB68E
    jne _loc_4AC038                                      # 004AB692
    mov edx, dword ptr [__1136120]                       # 004AB698
    cmp byte ptr [edx + 0x5a], 1                         # 004AB69E
    je .L4AB7A8                                          # 004AB6A2
    cmp byte ptr [edx + 0x5a], 4                         # 004AB6A8
    je .L4AB7A8                                          # 004AB6AC
    cmp byte ptr [edx + 0x5a], 0                         # 004AB6B2
    je .L4AB6E2                                          # 004AB6B6
    cmp dword ptr [edx + 0x56], 0x10000                  # 004AB6B8
    jb .L4AB6E2                                          # 004AB6BF
    movzx edx, word ptr [esi + 0x44]                     # 004AB6C1
    test byte ptr [esi + 0x38], 2                        # 004AB6C5
    je .L4AB6CF                                          # 004AB6C9
    neg edx                                              # 004AB6CB
    neg ebx                                              # 004AB6CD
.L4AB6CF:
    mov eax, dword ptr [__1136130]                       # 004AB6CF
    shl edx, 3                                           # 004AB6D4
    msvc_add ax, dx                                      # 004AB6D7
    jae _loc_4AC038                                      # 004AB6DA
    jmp .L4AB700                                         # 004AB6E0
.L4AB6E2:
    movzx edx, word ptr [esi + 0x44]                     # 004AB6E2
    test byte ptr [esi + 0x38], 2                        # 004AB6E6
    je .L4AB6F0                                          # 004AB6EA
    neg edx                                              # 004AB6EC
    neg ebx                                              # 004AB6EE
.L4AB6F0:
    test dword ptr [_scenarioChunk3+326], 7              # 004AB6F0
    jne _loc_4AC038                                      # 004AB6FA
.L4AB700:
    add ebx, 0x40                                        # 004AB700
    push esi                                             # 004AB703
    mov edi, dword ptr [__1136124]                       # 004AB704
    mov esi, dword ptr [__1136128]                       # 004AB70A
    mov ax, word ptr [esi + 0xe]                         # 004AB710
    mov cx, word ptr [esi + 0x10]                        # 004AB714
    mov dx, word ptr [esi + 0x12]                        # 004AB718
    sub ax, word ptr [edi + 0xe]                         # 004AB71C
    sub cx, word ptr [edi + 0x10]                        # 004AB720
    sub dx, word ptr [edi + 0x12]                        # 004AB724
    movsx eax, ax                                        # 004AB728
    movsx ecx, cx                                        # 004AB72B
    movsx edx, dx                                        # 004AB72E
    imul eax, ebx                                        # 004AB731
    imul ecx, ebx                                        # 004AB734
    imul edx, ebx                                        # 004AB737
    sar eax, 7                                           # 004AB73A
    sar ecx, 7                                           # 004AB73D
    sar edx, 7                                           # 004AB740
    add ax, word ptr [edi + 0xe]                         # 004AB743
    add cx, word ptr [edi + 0x10]                        # 004AB747
    add dx, word ptr [edi + 0x12]                        # 004AB74B
    pop esi                                              # 004AB74F
    movzx ebx, byte ptr [esi + 0x1f]                     # 004AB750
    movzx di, byte ptr [ebp + 0x111]                     # 004AB754
    msvc_add dx, di                                      # 004AB75C
    imul di, word ptr [ebx*2 + __503B50]                 # 004AB75F
    sar di, 8                                            # 004AB768
    movzx ebx, byte ptr [esi + 0x1e]                     # 004AB76C
    push ebp                                             # 004AB770
    msvc_mov bp, di                                      # 004AB771
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AB774
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AB77D
    sar bp, 8                                            # 004AB786
    sar di, 8                                            # 004AB78A
    msvc_add ax, bp                                      # 004AB78E
    msvc_add cx, di                                      # 004AB791
    pop ebp                                              # 004AB794
    mov bl, byte ptr [ebp + 0x110]                       # 004AB795
    or bl, 0x80                                          # 004AB79B
    call _sub_44080C                                     # 004AB79E
    msvc_jmp _loc_4AC038                                 # 004AB7A3
.L4AB7A8:
    movzx edx, word ptr [esi + 0x44]                     # 004AB7A8
    test byte ptr [esi + 0x38], 2                        # 004AB7AC
    je .L4AB7B6                                          # 004AB7B0
    neg edx                                              # 004AB7B2
    neg ebx                                              # 004AB7B4
.L4AB7B6:
    mov eax, dword ptr [__1136130]                       # 004AB7B6
    shl edx, 3                                           # 004AB7BB
    msvc_add ax, dx                                      # 004AB7BE
    jae _loc_4AC038                                      # 004AB7C1
    add ebx, 0x40                                        # 004AB7C7
    push esi                                             # 004AB7CA
    mov edi, dword ptr [__1136124]                       # 004AB7CB
    mov esi, dword ptr [__1136128]                       # 004AB7D1
    mov ax, word ptr [esi + 0xe]                         # 004AB7D7
    mov cx, word ptr [esi + 0x10]                        # 004AB7DB
    mov dx, word ptr [esi + 0x12]                        # 004AB7DF
    sub ax, word ptr [edi + 0xe]                         # 004AB7E3
    sub cx, word ptr [edi + 0x10]                        # 004AB7E7
    sub dx, word ptr [edi + 0x12]                        # 004AB7EB
    movsx eax, ax                                        # 004AB7EF
    movsx ecx, cx                                        # 004AB7F2
    movsx edx, dx                                        # 004AB7F5
    imul eax, ebx                                        # 004AB7F8
    imul ecx, ebx                                        # 004AB7FB
    imul edx, ebx                                        # 004AB7FE
    sar eax, 7                                           # 004AB801
    sar ecx, 7                                           # 004AB804
    sar edx, 7                                           # 004AB807
    add ax, word ptr [edi + 0xe]                         # 004AB80A
    add cx, word ptr [edi + 0x10]                        # 004AB80E
    add dx, word ptr [edi + 0x12]                        # 004AB812
    pop esi                                              # 004AB816
    movzx ebx, byte ptr [esi + 0x1f]                     # 004AB817
    movzx di, byte ptr [ebp + 0x111]                     # 004AB81B
    msvc_add dx, di                                      # 004AB823
    imul di, word ptr [ebx*2 + __503B50]                 # 004AB826
    sar di, 8                                            # 004AB82F
    movzx ebx, byte ptr [esi + 0x1e]                     # 004AB833
    push ebp                                             # 004AB837
    msvc_mov bp, di                                      # 004AB838
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AB83B
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AB844
    sar bp, 8                                            # 004AB84D
    sar di, 8                                            # 004AB851
    msvc_add ax, bp                                      # 004AB855
    msvc_add cx, di                                      # 004AB858
    pop ebp                                              # 004AB85B
    mov bl, byte ptr [ebp + 0x110]                       # 004AB85C
    call _sub_44080C                                     # 004AB862
    inc byte ptr [esi + 0x55]                            # 004AB867
    mov bl, byte ptr [ebp + 0x112]                       # 004AB86A
    movzx edi, byte ptr [ebp + 0x110]                    # 004AB870
    sub bl, 0xff                                         # 004AB877
    mov edi, dword ptr [edi*4 + _steamObjects]           # 004AB87A
    cmp bl, byte ptr [esi + 0x55]                        # 004AB881
    ja .L4AB88A                                          # 004AB884
    mov byte ptr [esi + 0x55], 0                         # 004AB886
.L4AB88A:
    msvc_mov bp, dx                                      # 004AB88A
    msvc_mov dx, cx                                      # 004AB88D
    msvc_mov cx, ax                                      # 004AB890
    movzx eax, byte ptr [esi + 0x55]                     # 004AB893
    test word ptr [edi + 8], 4                           # 004AB897
    je .L4AB964                                          # 004AB89D
    pushal                                               # 004AB8A3
    mov esi, dword ptr [__1136124]                       # 004AB8A4
    mov ax, word ptr [esi + 0x30]                        # 004AB8AA
    mov cx, word ptr [esi + 0x32]                        # 004AB8AE
    mov dl, byte ptr [esi + 0x34]                        # 004AB8B2
    movzx ebp, word ptr [esi + 0x2c]                     # 004AB8B5
    movzx esi, cx                                        # 004AB8B9
    shl esi, 9                                           # 004AB8BC
    msvc_or si, ax                                       # 004AB8BF
    shr esi, 3                                           # 004AB8C2
    mov esi, dword ptr [esi + __E40134]                  # 004AB8C5
.L4AB8CB:
    mov al, byte ptr [esi]                               # 004AB8CB
    and al, 0x3c                                         # 004AB8CD
    cmp al, 4                                            # 004AB8CF
    jne .L4AB8F6                                         # 004AB8D1
    cmp dl, byte ptr [esi + 2]                           # 004AB8D3
    jne .L4AB8F6                                         # 004AB8D6
    mov al, byte ptr [esi]                               # 004AB8D8
    and al, 3                                            # 004AB8DA
    msvc_mov cx, bp                                      # 004AB8DC
    and cl, 3                                            # 004AB8DF
    cmp al, cl                                           # 004AB8E2
    jne .L4AB8F6                                         # 004AB8E4
    mov al, byte ptr [esi + 4]                           # 004AB8E6
    and al, 0x3f                                         # 004AB8E9
    msvc_mov cx, bp                                      # 004AB8EB
    shr cx, 3                                            # 004AB8EE
    cmp al, cl                                           # 004AB8F2
    je .L4AB902                                          # 004AB8F4
.L4AB8F6:
    add esi, 8                                           # 004AB8F6
    test byte ptr [esi - 7], 0x80                        # 004AB8F9
    je .L4AB8CB                                          # 004AB8FD
.L4AB8FF:
    popal                                                # 004AB8FF
    jmp .L4AB964                                         # 004AB900
.L4AB902:
    test byte ptr [esi], 0x80                            # 004AB902
    je .L4AB8FF                                          # 004AB905
    test byte ptr [esi + 9], 0x30                        # 004AB907
    jne .L4AB8FF                                         # 004AB90B
    popal                                                # 004AB90D
    push ebx                                             # 004AB90E
    movzx ebx, byte ptr [edi + 0x1e]                     # 004AB90F
    shr ebx, 1                                           # 004AB913
    msvc_add eax, ebx                                    # 004AB915
    pop ebx                                              # 004AB917
    movzx eax, byte ptr [eax + edi + 0x1f]               # 004AB918
    or eax, 0x8000                                       # 004AB91D
    mov edi, dword ptr [__1136120]                       # 004AB922
    mov edi, dword ptr [edi + 0x56]                      # 004AB928
    cmp edi, 0xf0000                                     # 004AB92B
    ja .L4AB9D8                                          # 004AB931
    shr edi, 9                                           # 004AB937
    neg edi                                              # 004AB93A
    push eax                                             # 004AB93C
    push ecx                                             # 004AB93D
    push edx                                             # 004AB93E
    msvc_mov ax, cx                                      # 004AB93F
    msvc_mov cx, dx                                      # 004AB942
    call _sub_467297                                     # 004AB945
    msvc_cmp bp, dx                                      # 004AB94A
    pop edx                                              # 004AB94D
    pop ecx                                              # 004AB94E
    pop eax                                              # 004AB94F
    jae .L4AB958                                         # 004AB950
    sub edi, 0x5dc                                       # 004AB952
.L4AB958:
    mov ebx, 0x5622                                      # 004AB958
    call _sub_489F1B                                     # 004AB95D
    jmp .L4AB9D8                                         # 004AB962
.L4AB964:
    movzx ebx, byte ptr [edi + 0x1e]                     # 004AB964
    shr ebx, 1                                           # 004AB968
    test word ptr [edi + 8], 4                           # 004AB96A
    jne .L4AB974                                         # 004AB970
    msvc_xor ebx, ebx                                    # 004AB972
.L4AB974:
    msvc_add ebx, eax                                    # 004AB974
    movzx ebx, byte ptr [ebx + edi + 0x1f]               # 004AB976
    movzx eax, byte ptr [eax + edi + 0x1f]               # 004AB97B
    or ebx, 0x8000                                       # 004AB980
    or eax, 0x8000                                       # 004AB986
    mov edi, dword ptr [__1136120]                       # 004AB98B
    mov edi, dword ptr [edi + 0x56]                      # 004AB991
    cmp edi, 0xf0000                                     # 004AB994
    ja .L4AB9D8                                          # 004AB99A
    shr edi, 9                                           # 004AB99C
    neg edi                                              # 004AB99F
    push eax                                             # 004AB9A1
    push ebx                                             # 004AB9A2
    push ecx                                             # 004AB9A3
    push edx                                             # 004AB9A4
    msvc_mov ax, cx                                      # 004AB9A5
    msvc_mov cx, dx                                      # 004AB9A8
    call _sub_467297                                     # 004AB9AB
    msvc_cmp bp, dx                                      # 004AB9B0
    pop edx                                              # 004AB9B3
    pop ecx                                              # 004AB9B4
    pop ebx                                              # 004AB9B5
    pop eax                                              # 004AB9B6
    jae .L4AB9C1                                         # 004AB9B7
    sub edi, 0x5dc                                       # 004AB9B9
    msvc_mov eax, ebx                                    # 004AB9BF
.L4AB9C1:
    mov ebx, 0x5622                                      # 004AB9C1
    cmp edi, 0xfffffe70                                  # 004AB9C6
    jle .L4AB9D3                                         # 004AB9CC
    mov edi, 0xfffffe70                                  # 004AB9CE
.L4AB9D3:
    call _sub_489F1B                                     # 004AB9D3
.L4AB9D8:
    msvc_jmp _loc_4AC038                                 # 004AB9D8
    .global _loc_4AB9DD
_loc_4AB9DD:
    mov edx, dword ptr [__1136124]                       # 004AB9DD
    test byte ptr [edx + 0x5f], 4                        # 004AB9E3
    jne _loc_4AC038                                      # 004AB9E7
    mov edx, dword ptr [__1136118]                       # 004AB9ED
    cmp byte ptr [edx + 0x5e], 5                         # 004AB9F3
    je .L4ABAD4                                          # 004AB9F7
    mov edx, dword ptr [__1136120]                       # 004AB9FD
    cmp byte ptr [edx + 0x5a], 1                         # 004ABA03
    jne _loc_4AC038                                      # 004ABA07
    test byte ptr [esi + 0x38], 2                        # 004ABA0D
    je .L4ABA15                                          # 004ABA11
    neg ebx                                              # 004ABA13
.L4ABA15:
    test dword ptr [_scenarioChunk3+326], 3              # 004ABA15
    jne _loc_4AC038                                      # 004ABA1F
    cmp byte ptr [esi + 0x5e], 0                         # 004ABA25
    jne _loc_4AC038                                      # 004ABA29
    add ebx, 0x40                                        # 004ABA2F
    push esi                                             # 004ABA32
    mov edi, dword ptr [__1136124]                       # 004ABA33
    mov esi, dword ptr [__1136128]                       # 004ABA39
    mov ax, word ptr [esi + 0xe]                         # 004ABA3F
    mov cx, word ptr [esi + 0x10]                        # 004ABA43
    mov dx, word ptr [esi + 0x12]                        # 004ABA47
    sub ax, word ptr [edi + 0xe]                         # 004ABA4B
    sub cx, word ptr [edi + 0x10]                        # 004ABA4F
    sub dx, word ptr [edi + 0x12]                        # 004ABA53
    movsx eax, ax                                        # 004ABA57
    movsx ecx, cx                                        # 004ABA5A
    movsx edx, dx                                        # 004ABA5D
    imul eax, ebx                                        # 004ABA60
    imul ecx, ebx                                        # 004ABA63
    imul edx, ebx                                        # 004ABA66
    sar eax, 7                                           # 004ABA69
    sar ecx, 7                                           # 004ABA6C
    sar edx, 7                                           # 004ABA6F
    add ax, word ptr [edi + 0xe]                         # 004ABA72
    add cx, word ptr [edi + 0x10]                        # 004ABA76
    add dx, word ptr [edi + 0x12]                        # 004ABA7A
    pop esi                                              # 004ABA7E
    movzx ebx, byte ptr [esi + 0x1f]                     # 004ABA7F
    movzx di, byte ptr [ebp + 0x111]                     # 004ABA83
    msvc_add dx, di                                      # 004ABA8B
    imul di, word ptr [ebx*2 + __503B50]                 # 004ABA8E
    sar di, 8                                            # 004ABA97
    movzx ebx, byte ptr [esi + 0x1e]                     # 004ABA9B
    push ebp                                             # 004ABA9F
    msvc_mov bp, di                                      # 004ABAA0
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004ABAA3
    imul di, word ptr [ebx*4 + __503B6C]                 # 004ABAAC
    sar bp, 8                                            # 004ABAB5
    sar di, 8                                            # 004ABAB9
    msvc_add ax, bp                                      # 004ABABD
    msvc_add cx, di                                      # 004ABAC0
    pop ebp                                              # 004ABAC3
    mov bl, byte ptr [ebp + 0x110]                       # 004ABAC4
    call _sub_44080C                                     # 004ABACA
    msvc_jmp _loc_4AC038                                 # 004ABACF
.L4ABAD4:
    mov edx, dword ptr [__1136120]                       # 004ABAD4
    cmp dword ptr [edx + 0x56], 0                        # 004ABADA
    je _loc_4AC038                                       # 004ABADE
    test byte ptr [esi + 0x38], 2                        # 004ABAE4
    je .L4ABAEC                                          # 004ABAE8
    neg ebx                                              # 004ABAEA
.L4ABAEC:
    test dword ptr [_scenarioChunk3+326], 3              # 004ABAEC
    jne _loc_4AC038                                      # 004ABAF6
    movzx dx, byte ptr [ebp + 0x42]                      # 004ABAFC
    imul dx, bx                                          # 004ABB01
    sar dx, 8                                            # 004ABB05
    movzx ecx, byte ptr [esi + 0x1e]                     # 004ABB09
    xor ecx, 0x20                                        # 004ABB0D
    msvc_mov di, dx                                      # 004ABB10
    imul dx, word ptr [ecx*4 + __503B6A]                 # 004ABB13
    imul di, word ptr [ecx*4 + __503B6C]                 # 004ABB1C
    sar dx, 9                                            # 004ABB25
    sar di, 9                                            # 004ABB29
    mov ax, word ptr [esi + 0xe]                         # 004ABB2D
    mov cx, word ptr [esi + 0x10]                        # 004ABB31
    msvc_add ax, dx                                      # 004ABB35
    msvc_add cx, di                                      # 004ABB38
    mov dx, word ptr [esi + 0x12]                        # 004ABB3B
    movzx di, byte ptr [ebp + 0x111]                     # 004ABB3F
    msvc_add dx, di                                      # 004ABB47
    mov bl, byte ptr [ebp + 0x110]                       # 004ABB4A
    call _sub_44080C                                     # 004ABB50
    msvc_jmp _loc_4AC038                                 # 004ABB55
    .global _loc_4ABB5A
_loc_4ABB5A:
    mov edx, dword ptr [__1136124]                       # 004ABB5A
    test byte ptr [edx + 0x5f], 4                        # 004ABB60
    jne _loc_4AC038                                      # 004ABB64
    mov edx, dword ptr [__1136120]                       # 004ABB6A
    cmp byte ptr [edx + 0x5a], 1                         # 004ABB70
    jne _loc_4AC038                                      # 004ABB74
    cmp dword ptr [edx + 0x56], 0xe0000                  # 004ABB7A
    ja _loc_4AC038                                       # 004ABB81
    movzx edx, word ptr [esi + 0x44]                     # 004ABB87
    test byte ptr [esi + 0x38], 2                        # 004ABB8B
    je .L4ABB95                                          # 004ABB8F
    neg edx                                              # 004ABB91
    neg ebx                                              # 004ABB93
.L4ABB95:
    test dword ptr [_scenarioChunk3+326], 7              # 004ABB95
    jne _loc_4AC038                                      # 004ABB9F
    add ebx, 0x40                                        # 004ABBA5
    push esi                                             # 004ABBA8
    mov edi, dword ptr [__1136124]                       # 004ABBA9
    mov esi, dword ptr [__1136128]                       # 004ABBAF
    mov ax, word ptr [esi + 0xe]                         # 004ABBB5
    mov cx, word ptr [esi + 0x10]                        # 004ABBB9
    mov dx, word ptr [esi + 0x12]                        # 004ABBBD
    sub ax, word ptr [edi + 0xe]                         # 004ABBC1
    sub cx, word ptr [edi + 0x10]                        # 004ABBC5
    sub dx, word ptr [edi + 0x12]                        # 004ABBC9
    movsx eax, ax                                        # 004ABBCD
    movsx ecx, cx                                        # 004ABBD0
    movsx edx, dx                                        # 004ABBD3
    imul eax, ebx                                        # 004ABBD6
    imul ecx, ebx                                        # 004ABBD9
    imul edx, ebx                                        # 004ABBDC
    sar eax, 7                                           # 004ABBDF
    sar ecx, 7                                           # 004ABBE2
    sar edx, 7                                           # 004ABBE5
    add ax, word ptr [edi + 0xe]                         # 004ABBE8
    add cx, word ptr [edi + 0x10]                        # 004ABBEC
    add dx, word ptr [edi + 0x12]                        # 004ABBF0
    pop esi                                              # 004ABBF4
    movzx ebx, byte ptr [esi + 0x1f]                     # 004ABBF5
    movzx di, byte ptr [ebp + 0x111]                     # 004ABBF9
    msvc_add dx, di                                      # 004ABC01
    imul di, word ptr [ebx*2 + __503B50]                 # 004ABC04
    sar di, 8                                            # 004ABC0D
    movzx ebx, byte ptr [esi + 0x1e]                     # 004ABC11
    push ebp                                             # 004ABC15
    msvc_mov bp, di                                      # 004ABC16
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004ABC19
    imul di, word ptr [ebx*4 + __503B6C]                 # 004ABC22
    sar bp, 8                                            # 004ABC2B
    sar di, 8                                            # 004ABC2F
    msvc_add ax, bp                                      # 004ABC33
    msvc_add cx, di                                      # 004ABC36
    pop ebp                                              # 004ABC39
    mov bl, byte ptr [esi + 0x1e]                        # 004ABC3A
    add ebx, 0x10                                        # 004ABC3D
    and ebx, 0x3f                                        # 004ABC40
    push ebp                                             # 004ABC43
    push esi                                             # 004ABC44
    mov bp, 5                                            # 004ABC45
    cmp byte ptr [_scenarioChunk3+406], 0                # 004ABC49
    je .L4ABC55                                          # 004ABC50
    neg bp                                               # 004ABC52
.L4ABC55:
    msvc_mov di, bp                                      # 004ABC55
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004ABC58
    imul di, word ptr [ebx*4 + __503B6C]                 # 004ABC61
    sar bp, 8                                            # 004ABC6A
    sar di, 8                                            # 004ABC6E
    msvc_add ax, bp                                      # 004ABC72
    msvc_add cx, di                                      # 004ABC75
    pop esi                                              # 004ABC78
    pop ebp                                              # 004ABC79
    mov bl, byte ptr [ebp + 0x110]                       # 004ABC7A
    call _sub_44080C                                     # 004ABC80
    msvc_jmp _loc_4AC038                                 # 004ABC85
    .global _loc_4ABC8A
_loc_4ABC8A:
    mov edx, dword ptr [__1136120]                       # 004ABC8A
    cmp byte ptr [edx + 0x5a], 0                         # 004ABC90
    je _loc_4AC038                                       # 004ABC94
    cmp dword ptr [edx + 0x56], 0x60000                  # 004ABC9A
    jb _loc_4AC038                                       # 004ABCA1
    mov eax, 0x1f                                        # 004ABCA7
    cmp dword ptr [edx + 0x56], 0x90000                  # 004ABCAC
    jb .L4ABCD6                                          # 004ABCB3
    mov eax, 0xf                                         # 004ABCB5
    cmp dword ptr [edx + 0x56], 0xd0000                  # 004ABCBA
    jb .L4ABCD6                                          # 004ABCC1
    mov eax, 7                                           # 004ABCC3
    cmp dword ptr [edx + 0x56], 0x190000                 # 004ABCC8
    jb .L4ABCD6                                          # 004ABCCF
    mov eax, 3                                           # 004ABCD1
.L4ABCD6:
    test dword ptr [_scenarioChunk3+326], eax            # 004ABCD6
    jne _loc_4AC038                                      # 004ABCDC
    movzx edi, byte ptr [esi + 0x1e]                     # 004ABCE2
    xor edi, 0x20                                        # 004ABCE6
    movsx eax, word ptr [edi*4 + __503B6A]               # 004ABCE9
    movsx ecx, word ptr [edi*4 + __503B6C]               # 004ABCF1
    movzx edx, byte ptr [ebp + 0x42]                     # 004ABCF9
    imul eax, edx                                        # 004ABCFD
    imul ecx, edx                                        # 004ABD00
    sar eax, 0xa                                         # 004ABD03
    sar ecx, 0xa                                         # 004ABD06
    add ax, word ptr [esi + 0xe]                         # 004ABD09
    add cx, word ptr [esi + 0x10]                        # 004ABD0D
    mov dx, word ptr [esi + 0x12]                        # 004ABD11
    push eax                                             # 004ABD15
    push ecx                                             # 004ABD16
    movzx edi, byte ptr [esi + 0x1e]                     # 004ABD17
    add edi, 0x10                                        # 004ABD1B
    and edi, 0x3f                                        # 004ABD1E
    movsx eax, word ptr [edi*4 + __503B6A]               # 004ABD21
    movsx ecx, word ptr [edi*4 + __503B6C]               # 004ABD29
    movzx ebx, byte ptr [ebp + 0x113]                    # 004ABD31
    imul eax, ebx                                        # 004ABD38
    imul ecx, ebx                                        # 004ABD3B
    sar eax, 9                                           # 004ABD3E
    sar ecx, 9                                           # 004ABD41
    add ax, word ptr [esp + 4]                           # 004ABD44
    add cx, word ptr [esp]                               # 004ABD49
    mov bl, byte ptr [ebp + 0x110]                       # 004ABD4D
    call _sub_44080C                                     # 004ABD53
    pop ecx                                              # 004ABD58
    pop eax                                              # 004ABD59
    cmp byte ptr [ebp + 0x113], 0                        # 004ABD5A
    je .L4ABDA8                                          # 004ABD61
    push eax                                             # 004ABD63
    push ecx                                             # 004ABD64
    movzx edi, byte ptr [esi + 0x1e]                     # 004ABD65
    sub edi, 0x10                                        # 004ABD69
    and edi, 0x3f                                        # 004ABD6C
    movsx eax, word ptr [edi*4 + __503B6A]               # 004ABD6F
    movsx ecx, word ptr [edi*4 + __503B6C]               # 004ABD77
    movzx ebx, byte ptr [ebp + 0x113]                    # 004ABD7F
    imul eax, ebx                                        # 004ABD86
    imul ecx, ebx                                        # 004ABD89
    sar eax, 9                                           # 004ABD8C
    sar ecx, 9                                           # 004ABD8F
    add ax, word ptr [esp + 4]                           # 004ABD92
    add cx, word ptr [esp]                               # 004ABD97
    mov bl, byte ptr [ebp + 0x110]                       # 004ABD9B
    call _sub_44080C                                     # 004ABDA1
    pop ecx                                              # 004ABDA6
    pop eax                                              # 004ABDA7
.L4ABDA8:
    msvc_jmp _loc_4AC038                                 # 004ABDA8
    .global _loc_4ABDAD
_loc_4ABDAD:
    mov edx, dword ptr [__1136124]                       # 004ABDAD
    test byte ptr [edx + 0x5f], 4                        # 004ABDB3
    jne _loc_4AC038                                      # 004ABDB7
    mov edx, dword ptr [__1136120]                       # 004ABDBD
    cmp byte ptr [edx + 0x5a], 2                         # 004ABDC3
    je .L4ABDD3                                          # 004ABDC7
    cmp byte ptr [edx + 0x5a], 1                         # 004ABDC9
    jne _loc_4AC038                                      # 004ABDCD
.L4ABDD3:
    movzx edx, word ptr [esi + 0x44]                     # 004ABDD3
    test byte ptr [esi + 0x38], 2                        # 004ABDD7
    je .L4ABDE1                                          # 004ABDDB
    neg edx                                              # 004ABDDD
    neg ebx                                              # 004ABDDF
.L4ABDE1:
    mov eax, dword ptr [__1136130]                       # 004ABDE1
    shl edx, 3                                           # 004ABDE6
    msvc_add ax, dx                                      # 004ABDE9
    jae _loc_4AC038                                      # 004ABDEC
    add ebx, 0x40                                        # 004ABDF2
    mov eax, dword ptr [_scenarioChunk3]                 # 004ABDF5
    mov edx, dword ptr [_scenarioChunk3+4]               # 004ABDFA
    ror eax, 3                                           # 004ABE00
    xor edx, 0x1234567f                                  # 004ABE03
    mov dword ptr [_scenarioChunk3+4], eax               # 004ABE09
    ror edx, 7                                           # 004ABE0E
    add dword ptr [_scenarioChunk3], edx                 # 004ABE11
    cmp ax, 0x333                                        # 004ABE17
    ja _loc_4AC038                                       # 004ABE1B
    push esi                                             # 004ABE21
    mov edi, dword ptr [__1136124]                       # 004ABE22
    mov esi, dword ptr [__1136128]                       # 004ABE28
    mov ax, word ptr [esi + 0xe]                         # 004ABE2E
    mov cx, word ptr [esi + 0x10]                        # 004ABE32
    mov dx, word ptr [esi + 0x12]                        # 004ABE36
    sub ax, word ptr [edi + 0xe]                         # 004ABE3A
    sub cx, word ptr [edi + 0x10]                        # 004ABE3E
    sub dx, word ptr [edi + 0x12]                        # 004ABE42
    movsx eax, ax                                        # 004ABE46
    movsx ecx, cx                                        # 004ABE49
    movsx edx, dx                                        # 004ABE4C
    imul eax, ebx                                        # 004ABE4F
    imul ecx, ebx                                        # 004ABE52
    imul edx, ebx                                        # 004ABE55
    sar eax, 7                                           # 004ABE58
    sar ecx, 7                                           # 004ABE5B
    sar edx, 7                                           # 004ABE5E
    add ax, word ptr [edi + 0xe]                         # 004ABE61
    add cx, word ptr [edi + 0x10]                        # 004ABE65
    add dx, word ptr [edi + 0x12]                        # 004ABE69
    pop esi                                              # 004ABE6D
    movzx ebx, byte ptr [esi + 0x1f]                     # 004ABE6E
    movzx di, byte ptr [ebp + 0x111]                     # 004ABE72
    msvc_add dx, di                                      # 004ABE7A
    imul di, word ptr [ebx*2 + __503B50]                 # 004ABE7D
    sar di, 8                                            # 004ABE86
    movzx ebx, byte ptr [esi + 0x1e]                     # 004ABE8A
    push ebp                                             # 004ABE8E
    msvc_mov bp, di                                      # 004ABE8F
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004ABE92
    imul di, word ptr [ebx*4 + __503B6C]                 # 004ABE9B
    sar bp, 8                                            # 004ABEA4
    sar di, 8                                            # 004ABEA8
    msvc_add ax, bp                                      # 004ABEAC
    msvc_add cx, di                                      # 004ABEAF
    pop ebp                                              # 004ABEB2
    mov bl, byte ptr [ebp + 0x110]                       # 004ABEB3
    call _sub_44080C                                     # 004ABEB9
    msvc_jmp _loc_4AC038                                 # 004ABEBE
    .global _loc_4ABEC3
_loc_4ABEC3:
    mov edx, dword ptr [__1136124]                       # 004ABEC3
    test byte ptr [edx + 0x5f], 4                        # 004ABEC9
    jne _loc_4AC038                                      # 004ABECD
    mov edx, dword ptr [__1136120]                       # 004ABED3
    cmp byte ptr [edx + 0x5a], 2                         # 004ABED9
    je .L4ABEE9                                          # 004ABEDD
    cmp byte ptr [edx + 0x5a], 1                         # 004ABEDF
    jne _loc_4AC038                                      # 004ABEE3
.L4ABEE9:
    movzx edx, word ptr [esi + 0x44]                     # 004ABEE9
    test byte ptr [esi + 0x38], 2                        # 004ABEED
    je .L4ABEF7                                          # 004ABEF1
    neg edx                                              # 004ABEF3
    neg ebx                                              # 004ABEF5
.L4ABEF7:
    mov eax, dword ptr [__1136130]                       # 004ABEF7
    shl edx, 3                                           # 004ABEFC
    msvc_add ax, dx                                      # 004ABEFF
    jae _loc_4AC038                                      # 004ABF02
    add ebx, 0x40                                        # 004ABF08
    mov eax, dword ptr [_scenarioChunk3]                 # 004ABF0B
    mov edx, dword ptr [_scenarioChunk3+4]               # 004ABF10
    ror eax, 3                                           # 004ABF16
    xor edx, 0x1234567f                                  # 004ABF19
    mov dword ptr [_scenarioChunk3+4], eax               # 004ABF1F
    ror edx, 7                                           # 004ABF24
    add dword ptr [_scenarioChunk3], edx                 # 004ABF27
    cmp ax, 0x3a8                                        # 004ABF2D
    ja _loc_4AC038                                       # 004ABF31
    push esi                                             # 004ABF37
    mov edi, dword ptr [__1136124]                       # 004ABF38
    mov esi, dword ptr [__1136128]                       # 004ABF3E
    mov ax, word ptr [esi + 0xe]                         # 004ABF44
    mov cx, word ptr [esi + 0x10]                        # 004ABF48
    mov dx, word ptr [esi + 0x12]                        # 004ABF4C
    sub ax, word ptr [edi + 0xe]                         # 004ABF50
    sub cx, word ptr [edi + 0x10]                        # 004ABF54
    sub dx, word ptr [edi + 0x12]                        # 004ABF58
    movsx eax, ax                                        # 004ABF5C
    movsx ecx, cx                                        # 004ABF5F
    movsx edx, dx                                        # 004ABF62
    imul eax, ebx                                        # 004ABF65
    imul ecx, ebx                                        # 004ABF68
    imul edx, ebx                                        # 004ABF6B
    sar eax, 7                                           # 004ABF6E
    sar ecx, 7                                           # 004ABF71
    sar edx, 7                                           # 004ABF74
    add ax, word ptr [edi + 0xe]                         # 004ABF77
    add cx, word ptr [edi + 0x10]                        # 004ABF7B
    add dx, word ptr [edi + 0x12]                        # 004ABF7F
    pop esi                                              # 004ABF83
    movzx ebx, byte ptr [esi + 0x1f]                     # 004ABF84
    movzx di, byte ptr [ebp + 0x111]                     # 004ABF88
    msvc_add dx, di                                      # 004ABF90
    imul di, word ptr [ebx*2 + __503B50]                 # 004ABF93
    sar di, 8                                            # 004ABF9C
    movzx ebx, byte ptr [esi + 0x1e]                     # 004ABFA0
    push ebp                                             # 004ABFA4
    msvc_mov bp, di                                      # 004ABFA5
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004ABFA8
    imul di, word ptr [ebx*4 + __503B6C]                 # 004ABFB1
    sar bp, 8                                            # 004ABFBA
    sar di, 8                                            # 004ABFBE
    msvc_add ax, bp                                      # 004ABFC2
    msvc_add cx, di                                      # 004ABFC5
    pop ebp                                              # 004ABFC8
    mov bl, byte ptr [esi + 0x1e]                        # 004ABFC9
    add ebx, 0x10                                        # 004ABFCC
    and ebx, 0x3f                                        # 004ABFCF
    push ebp                                             # 004ABFD2
    push esi                                             # 004ABFD3
    test byte ptr [esi + 0x38], 2                        # 004ABFD4
    mov esi, dword ptr [__1136124]                       # 004ABFD8
    je .L4ABFE6                                          # 004ABFDE
    mov esi, dword ptr [__1136128]                       # 004ABFE0
.L4ABFE6:
    movzx edi, word ptr [esi + 0x2c]                     # 004ABFE6
    shr edi, 3                                           # 004ABFEA
    mov bp, 5                                            # 004ABFED
    test byte ptr [edi + __4F8A7C], 1                    # 004ABFF1
    jne .L4ABFFD                                         # 004ABFF8
    neg bp                                               # 004ABFFA
.L4ABFFD:
    test word ptr [esi + 0x2c], 4                        # 004ABFFD
    je .L4AC008                                          # 004AC003
    neg bp                                               # 004AC005
.L4AC008:
    msvc_mov di, bp                                      # 004AC008
    imul bp, word ptr [ebx*4 + __503B6A]                 # 004AC00B
    imul di, word ptr [ebx*4 + __503B6C]                 # 004AC014
    sar bp, 8                                            # 004AC01D
    sar di, 8                                            # 004AC021
    msvc_add ax, bp                                      # 004AC025
    msvc_add cx, di                                      # 004AC028
    pop esi                                              # 004AC02B
    pop ebp                                              # 004AC02C
    mov bl, byte ptr [ebp + 0x110]                       # 004AC02D
    call _sub_44080C                                     # 004AC033
    .global _loc_4AC038
_loc_4AC038:
    ret                                                  # 004AC038

    .global _sub_4AC039
_sub_4AC039:
    cmp byte ptr [esi + 1], 3                            # 004AC039
    je .L4AC0A2                                          # 004AC03D
    movzx ebx, byte ptr [esi + 0x39]                     # 004AC03F
    cmp bl, 0xff                                         # 004AC043
    je .L4AC0A2                                          # 004AC046
    cmp byte ptr [esi + 0x4d], 0                         # 004AC048
    je .L4AC0A2                                          # 004AC04C
    movzx ebp, word ptr [esi + 0x40]                     # 004AC04E
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AC052
    imul ebx, ebx, 0x1e                                  # 004AC059
    movzx ax, byte ptr [esi + 0x51]                      # 004AC05C
    shl ax, 8                                            # 004AC061
    msvc_xor dx, dx                                      # 004AC065
    movzx cx, byte ptr [esi + 0x4d]                      # 004AC068
    div cx                                               # 004AC06D
    cmp ax, 0xff                                         # 004AC070
    jbe .L4AC07A                                         # 004AC074
    mov ax, 0xff                                         # 004AC076
.L4AC07A:
    mul byte ptr [ebx + ebp + 0x3f]                      # 004AC07A
    shr ax, 8                                            # 004AC07E
    msvc_or al, al                                       # 004AC082
    je .L4AC091                                          # 004AC084
    movzx ecx, byte ptr [esi + 0x4c]                     # 004AC086
    add al, byte ptr [ecx + ebp + 0xec]                  # 004AC08A
.L4AC091:
    mul byte ptr [ebx + ebp + 0x3e]                      # 004AC091
    cmp al, byte ptr [esi + 0x47]                        # 004AC095
    je .L4AC0A2                                          # 004AC098
    mov byte ptr [esi + 0x47], al                        # 004AC09A
    call _sub_4CBB01                                     # 004AC09D
.L4AC0A2:
    ret                                                  # 004AC0A2

    .global _sub_4AC0A3
_sub_4AC0A3:
    mov word ptr [__113601A], 0                          # 004AC0A3
    mov ax, word ptr [esi + 0x30]                        # 004AC0AC
    mov cx, word ptr [esi + 0x32]                        # 004AC0B0
    movzx dx, byte ptr [esi + 0x34]                      # 004AC0B4
    shl dx, 2                                            # 004AC0B9
    movzx ebp, word ptr [esi + 0x2c]                     # 004AC0BD
    mov bl, byte ptr [esi + 0x21]                        # 004AC0C1
    mov bh, byte ptr [esi + 0x35]                        # 004AC0C4
    mov_offset edi, __11360A0                            # 004AC0C7
    call _sub_4A2604                                     # 004AC0CC
    cmp dword ptr [__113609C], 1                         # 004AC0D1
    jne .L4AC1B7                                         # 004AC0D8
    mov bp, word ptr [__11360A0]                         # 004AC0DE
    and ebp, 0x1ff                                       # 004AC0E5
    mov_offset edi, __11360A0                            # 004AC0EB
    call _sub_4A2604                                     # 004AC0F0
    cmp dword ptr [__113609C], 0                         # 004AC0F5
    je .L4AC1B7                                          # 004AC0FC
    mov_offset edi, __11360A0                            # 004AC102
.L4AC107:
    push eax                                             # 004AC107
    push ecx                                             # 004AC108
    push edx                                             # 004AC109
    push edi                                             # 004AC10A
    mov bx, word ptr [edi]                               # 004AC10B
    and ebx, 0x1ff                                       # 004AC10E
    add ax, word ptr [ebx*8 + __4F7B5E]                  # 004AC114
    add cx, word ptr [ebx*8 + __4F7B60]                  # 004AC11C
    movzx edi, byte ptr [ebx*8 + __4F7B5D]               # 004AC124
    cmp di, 0xc                                          # 004AC12C
    jae .L4AC142                                         # 004AC130
    sub ax, word ptr [edi*4 + __503C6C]                  # 004AC132
    sub cx, word ptr [edi*4 + __503C6E]                  # 004AC13A
.L4AC142:
    add dx, word ptr [ebx*8 + __4F7B62]                  # 004AC142
    xor bx, 4                                            # 004AC14A
    shr dx, 2                                            # 004AC14E
    push esi                                             # 004AC152
    mov si, word ptr [_scenarioChunk3+42]                # 004AC153
.L4AC15A:
    cmp si, -1                                           # 004AC15A
    je .L4AC1A3                                          # 004AC15E
    movzx esi, si                                        # 004AC160
    shl esi, 7                                           # 004AC163
    add_offset esi, _things                              # 004AC166
    push dword ptr [esi + 4]                             # 004AC16C
    movzx esi, word ptr [esi + 0x3a]                     # 004AC16F
    shl esi, 7                                           # 004AC173
    add_offset esi, _things                              # 004AC176
    movzx esi, word ptr [esi + 0x3a]                     # 004AC17C
    shl esi, 7                                           # 004AC180
    add_offset esi, _things                              # 004AC183
    cmp ax, word ptr [esi + 0x30]                        # 004AC189
    jne .L4AC1A0                                         # 004AC18D
    cmp cx, word ptr [esi + 0x32]                        # 004AC18F
    jne .L4AC1A0                                         # 004AC193
    cmp dl, byte ptr [esi + 0x34]                        # 004AC195
    jne .L4AC1A0                                         # 004AC198
    cmp bx, word ptr [esi + 0x2c]                        # 004AC19A
    je .L4AC1BA                                          # 004AC19E
.L4AC1A0:
    pop esi                                              # 004AC1A0
    jmp .L4AC15A                                         # 004AC1A1
.L4AC1A3:
    pop esi                                              # 004AC1A3
    pop edi                                              # 004AC1A4
    pop edx                                              # 004AC1A5
    pop ecx                                              # 004AC1A6
    pop eax                                              # 004AC1A7
    add edi, 2                                           # 004AC1A8
    dec dword ptr [__113609C]                            # 004AC1AB
    jne .L4AC107                                         # 004AC1B1
.L4AC1B7:
    msvc_and eax, eax                                    # 004AC1B7
    ret                                                  # 004AC1B9
.L4AC1BA:
    pop esi                                              # 004AC1BA
    pop esi                                              # 004AC1BB
    pop edi                                              # 004AC1BC
    pop edx                                              # 004AC1BD
    pop ecx                                              # 004AC1BE
    pop eax                                              # 004AC1BF
    stc                                                  # 004AC1C0
    ret                                                  # 004AC1C1

    .global _sub_4AC1C2
_sub_4AC1C2:
    mov word ptr [__113601A], 0                          # 004AC1C2
    mov ax, word ptr [esi + 0x30]                        # 004AC1CB
    mov cx, word ptr [esi + 0x32]                        # 004AC1CF
    movzx dx, byte ptr [esi + 0x34]                      # 004AC1D3
    shl dx, 2                                            # 004AC1D8
    movzx ebp, word ptr [esi + 0x2c]                     # 004AC1DC
    mov bl, byte ptr [esi + 0x21]                        # 004AC1E0
    mov bh, byte ptr [esi + 0x35]                        # 004AC1E3
    mov_offset edi, __11360A0                            # 004AC1E6
    call _sub_4A2604                                     # 004AC1EB
    cmp dword ptr [__113609C], 1                         # 004AC1F0
    jne .L4AC213                                         # 004AC1F7
    mov bp, word ptr [__11360A0]                         # 004AC1F9
    push esi                                             # 004AC200
    and ebp, 0x81ff                                      # 004AC201
    call _sub_4A2A58                                     # 004AC207
    pop esi                                              # 004AC20C
    test ax, 2                                           # 004AC20D
    jne .L4AC215                                         # 004AC211
.L4AC213:
    clc                                                  # 004AC213
    ret                                                  # 004AC214
.L4AC215:
    stc                                                  # 004AC215
    ret                                                  # 004AC216

    .global _sub_4AC217
_sub_4AC217:
    test ebp, 0x8000                                     # 004AC217
    je .L4AC233                                          # 004AC21D
    push ebp                                             # 004AC21F
    and ebp, 0x1ff                                       # 004AC220
    mov edi, 0x80000008                                  # 004AC226
    call _sub_48963F                                     # 004AC22B
    pop ebp                                              # 004AC230
    stc                                                  # 004AC231
    ret                                                  # 004AC232
.L4AC233:
    msvc_and eax, eax                                    # 004AC233
    ret                                                  # 004AC235

    .global _sub_4AC236
_sub_4AC236:
    test ebp, 0x8000                                     # 004AC236
    je .L4AC252                                          # 004AC23C
    push ebp                                             # 004AC23E
    and ebp, 0x1ff                                       # 004AC23F
    mov edi, 0x80000009                                  # 004AC245
    call _sub_48963F                                     # 004AC24A
    pop ebp                                              # 004AC24F
    stc                                                  # 004AC250
    ret                                                  # 004AC251
.L4AC252:
    msvc_and eax, eax                                    # 004AC252
    ret                                                  # 004AC254

    .global _sub_4AC255
_sub_4AC255:
    mov ax, word ptr [ebx + 0xe]                         # 004AC255
    mov cx, word ptr [ebx + 0x10]                        # 004AC259
    mov dx, word ptr [ebx + 0x12]                        # 004AC25D
    add ax, word ptr [edi + 0xe]                         # 004AC261
    add cx, word ptr [edi + 0x10]                        # 004AC265
    add dx, word ptr [edi + 0x12]                        # 004AC269
    sar ax, 1                                            # 004AC26D
    sar cx, 1                                            # 004AC270
    shr dx, 1                                            # 004AC273
    call _sub_46FC83                                     # 004AC276
    movzx edx, byte ptr [esi + 0x39]                     # 004AC27B
    movzx ebp, word ptr [esi + 0x40]                     # 004AC27F
    cmp dl, 0xff                                         # 004AC283
    je .L4AC2FF                                          # 004AC286
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AC288
    imul edx, edx, 0x1e                                  # 004AC28F
    mov ax, word ptr [ebx + 0xe]                         # 004AC292
    mov cx, word ptr [ebx + 0x10]                        # 004AC296
    sub ax, word ptr [edi + 0xe]                         # 004AC29A
    sub cx, word ptr [edi + 0x10]                        # 004AC29E
    movsx eax, ax                                        # 004AC2A2
    movsx ecx, cx                                        # 004AC2A5
    imul eax, eax                                        # 004AC2A8
    imul ecx, ecx                                        # 004AC2AB
    msvc_add eax, ecx                                    # 004AC2AE
    call _sub_4BE368                                     # 004AC2B0
    push ebp                                             # 004AC2B5
    test byte ptr [edx + ebp + 0x43], 0x10               # 004AC2B6
    mov_offset ebp, _sub_4BF49D                          # 004AC2BB
    je .L4AC2C7                                          # 004AC2C0
    mov_offset ebp, _sub_4BF4DA                          # 004AC2C2
.L4AC2C7:
    msvc_mov cx, ax                                      # 004AC2C7
    mov ax, word ptr [ebx + 0x12]                        # 004AC2CA
    sub ax, word ptr [edi + 0x12]                        # 004AC2CE
    call ebp                                             # 004AC2D2
    mov byte ptr [esi + 0x1f], al                        # 004AC2D4
    pop ebp                                              # 004AC2D7
    push ebp                                             # 004AC2D8
    cmp al, 0                                            # 004AC2D9
    jne .L4AC300                                         # 004AC2DB
    movzx ebp, byte ptr [edx + ebp + 0x47]               # 004AC2DD
    mov ebp, dword ptr [ebp*4 + __503EF8]                # 004AC2E2
    mov ax, word ptr [ebx + 0xe]                         # 004AC2E9
    mov cx, word ptr [ebx + 0x10]                        # 004AC2ED
    sub ax, word ptr [edi + 0xe]                         # 004AC2F1
    sub cx, word ptr [edi + 0x10]                        # 004AC2F5
    call ebp                                             # 004AC2F9
    mov byte ptr [esi + 0x1e], al                        # 004AC2FB
    pop ebp                                              # 004AC2FE
.L4AC2FF:
    ret                                                  # 004AC2FF
.L4AC300:
    cmp al, 1                                            # 004AC300
    je .L4AC333                                          # 004AC302
    cmp al, 3                                            # 004AC304
    je .L4AC333                                          # 004AC306
    cmp al, 5                                            # 004AC308
    je .L4AC333                                          # 004AC30A
    cmp al, 7                                            # 004AC30C
    je .L4AC333                                          # 004AC30E
    movzx ebp, byte ptr [edx + ebp + 0x48]               # 004AC310
    mov ebp, dword ptr [ebp*4 + __503EF8]                # 004AC315
    mov ax, word ptr [ebx + 0xe]                         # 004AC31C
    mov cx, word ptr [ebx + 0x10]                        # 004AC320
    sub ax, word ptr [edi + 0xe]                         # 004AC324
    sub cx, word ptr [edi + 0x10]                        # 004AC328
    call ebp                                             # 004AC32C
    mov byte ptr [esi + 0x1e], al                        # 004AC32E
    pop ebp                                              # 004AC331
    ret                                                  # 004AC332
.L4AC333:
    mov ax, word ptr [ebx + 0xe]                         # 004AC333
    mov cx, word ptr [ebx + 0x10]                        # 004AC337
    sub ax, word ptr [edi + 0xe]                         # 004AC33B
    sub cx, word ptr [edi + 0x10]                        # 004AC33F
    call _sub_4BF5B3                                     # 004AC343
    mov byte ptr [esi + 0x1e], al                        # 004AC348
    pop ebp                                              # 004AC34B
    ret                                                  # 004AC34C

    .global _sub_4AC34D
_sub_4AC34D:
    push esi                                             # 004AC34D
    mov bl, byte ptr [esi + 0x21]                        # 004AC34E
    mov bh, byte ptr [esi + 0x35]                        # 004AC351
    mov word ptr [__113642C], 0                          # 004AC354
    mov dword ptr [__1136430], 0                         # 004AC35D
    sub esp, 0x58                                        # 004AC367
    msvc_xor esi, esi                                    # 004AC36A
.L4AC36C:
    cmp esi, dword ptr [__113609C]                       # 004AC36C
    jae .L4AC3A7                                         # 004AC372
    mov dword ptr [__1136434], 0                         # 004AC374
    mov bp, word ptr [esi*2 + __11360A0]                 # 004AC37E
    push eax                                             # 004AC386
    push ebx                                             # 004AC387
    push ecx                                             # 004AC388
    push edx                                             # 004AC389
    push esi                                             # 004AC38A
    and ebp, 0x81ff                                      # 004AC38B
    call _sub_4ACBFF                                     # 004AC391
    pop esi                                              # 004AC396
    pop edx                                              # 004AC397
    pop ecx                                              # 004AC398
    pop ebx                                              # 004AC399
    pop eax                                              # 004AC39A
    mov ebp, dword ptr [__1136434]                       # 004AC39B
    mov dword ptr [esp + esi*4], ebp                     # 004AC3A1
    inc esi                                              # 004AC3A4
    jmp .L4AC36C                                         # 004AC3A5
.L4AC3A7:
    mov esi, 1                                           # 004AC3A7
    msvc_xor ebp, ebp                                    # 004AC3AC
    mov ebx, dword ptr [esp]                             # 004AC3AE
.L4AC3B1:
    cmp esi, dword ptr [__113609C]                       # 004AC3B1
    jae .L4AC3C6                                         # 004AC3B7
    cmp ebx, dword ptr [esp + esi*4]                     # 004AC3B9
    ja .L4AC3C3                                          # 004AC3BC
    mov ebx, dword ptr [esp + esi*4]                     # 004AC3BE
    msvc_mov ebp, esi                                    # 004AC3C1
.L4AC3C3:
    inc esi                                              # 004AC3C3
    jmp .L4AC3B1                                         # 004AC3C4
.L4AC3C6:
    movzx ebx, word ptr [ebp*2 + __11360A0]              # 004AC3C6
    add esp, 0x58                                        # 004AC3CE
    pop esi                                              # 004AC3D1
    ret                                                  # 004AC3D2

    .global _sub_4AC3D3
_sub_4AC3D3:
    DebugStamp 0x30011248
    btr dx, 0xf                                          # 004AC3D3
    jb .L4AC3E4                                          # 004AC3D8
    mov dword ptr [__1136450], 0xfffffffe                # 004AC3DA
.L4AC3E4:
    msvc_xor ebx, ebx                                    # 004AC3E4
    cmp byte ptr [__508F19], 0                           # 004AC3E6
    jne .L4AC413                                         # 004AC3ED
    mov ebx, dword ptr [_scenarioChunk3]                 # 004AC3EF
    mov ebp, dword ptr [_scenarioChunk3+4]               # 004AC3F5
    ror ebx, 3                                           # 004AC3FB
    xor ebp, 0x1234567f                                  # 004AC3FE
    mov dword ptr [_scenarioChunk3+4], ebx               # 004AC404
    ror ebp, 7                                           # 004AC40A
    add dword ptr [_scenarioChunk3], ebp                 # 004AC40D
.L4AC413:
    mov dword ptr [__1136438], ebx                       # 004AC413
    push esi                                             # 004AC419
    movzx ebp, word ptr [esi + 0x4a]                     # 004AC41A
    add ebp, dword ptr [esi + 0x46]                      # 004AC41E
    mov bl, byte ptr [ebp + __987C5C]                    # 004AC421
    and ebx, 7                                           # 004AC427
    cmp bl, 3                                            # 004AC42A
    je .L4AC441                                          # 004AC42D
    test byte ptr [ebx + __4FE088], 8                    # 004AC42F
    jne .L4AC504                                         # 004AC436
    msvc_jmp .L4AC550                                    # 004AC43C
.L4AC441:
    mov word ptr [__113644A], 0xffff                     # 004AC441
    push eax                                             # 004AC44A
    push ecx                                             # 004AC44B
    push edx                                             # 004AC44C
    mov al, byte ptr [ebp + __987C5C+1]                  # 004AC44D
    mov cl, byte ptr [ebp + __987C5C+3]                  # 004AC453
    mov ah, byte ptr [ebp + __987C5C]                    # 004AC459
    mov ch, byte ptr [ebp + __987C5C+2]                  # 004AC45F
    shr ah, 7                                            # 004AC465
    shr ch, 7                                            # 004AC468
    mov dl, byte ptr [ebp + __987C5C+2]                  # 004AC46B
    shl ax, 5                                            # 004AC471
    and dx, 0x7f                                         # 004AC475
    shl cx, 5                                            # 004AC479
    shl dx, 3                                            # 004AC47D
    movzx ebp, word ptr [ebp + __987C5C+4]               # 004AC481
    mov word ptr [__113645A], ax                         # 004AC488
    mov word ptr [__113645C], cx                         # 004AC48E
    mov word ptr [__113645E], dx                         # 004AC495
    mov word ptr [__1136460], bp                         # 004AC49C
    and ebp, 0x1ff                                       # 004AC4A3
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AC4A9
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AC4B1
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AC4B9
    movzx ebx, byte ptr [ebp*8 + __4F7B5D]               # 004AC4C1
    cmp bl, 0xc                                          # 004AC4C9
    jae .L4AC4DE                                         # 004AC4CC
    sub ax, word ptr [ebx*4 + __503C6C]                  # 004AC4CE
    sub cx, word ptr [ebx*4 + __503C6E]                  # 004AC4D6
.L4AC4DE:
    xor ebp, 4                                           # 004AC4DE
    mov word ptr [__1136462], ax                         # 004AC4E1
    mov word ptr [__1136464], cx                         # 004AC4E7
    mov word ptr [__1136466], dx                         # 004AC4EE
    mov word ptr [__1136468], bp                         # 004AC4F5
    pop edx                                              # 004AC4FC
    pop ecx                                              # 004AC4FD
    pop eax                                              # 004AC4FE
    msvc_jmp .L4AC5F5                                    # 004AC4FF
.L4AC504:
    movzx ebx, byte ptr [ebp + __987C5C+1]               # 004AC504
    mov bh, byte ptr [ebp + __987C5C]                    # 004AC50B
    shr bh, 6                                            # 004AC511
    mov word ptr [__113644A], bx                         # 004AC514
    imul ebx, ebx, 0x3d2                                 # 004AC51B
    mov di, word ptr [ebx + _stations+2]                 # 004AC521
    mov bp, word ptr [ebx + _stations+4]                 # 004AC528
    mov word ptr [__113645A], di                         # 004AC52F
    mov word ptr [__113645C], bp                         # 004AC536
    mov di, word ptr [ebx + _stations+6]                 # 004AC53D
    mov word ptr [__113645E], di                         # 004AC544
    msvc_jmp .L4AC5F5                                    # 004AC54B
.L4AC550:
    mov bl, byte ptr [esi + 0x21]                        # 004AC550
    mov bh, byte ptr [esi + 0x35]                        # 004AC553
    mov word ptr [__113642C], 0                          # 004AC556
    mov dword ptr [__1136430], 0                         # 004AC55F
    sub esp, 0x58                                        # 004AC569
    msvc_xor esi, esi                                    # 004AC56C
.L4AC56E:
    cmp esi, dword ptr [__113609C]                       # 004AC56E
    jae .L4AC5C6                                         # 004AC574
    mov word ptr [__113642E], 0                          # 004AC576
    mov bp, word ptr [esi*2 + __11360A0]                 # 004AC57F
    push eax                                             # 004AC587
    push ebx                                             # 004AC588
    push ecx                                             # 004AC589
    push edx                                             # 004AC58A
    push esi                                             # 004AC58B
    and ebp, 0x81ff                                      # 004AC58C
    call _sub_4AC884                                     # 004AC592
    pop esi                                              # 004AC597
    pop edx                                              # 004AC598
    pop ecx                                              # 004AC599
    pop ebx                                              # 004AC59A
    pop eax                                              # 004AC59B
    movzx ebp, word ptr [__113642E]                      # 004AC59C
    mov bp, word ptr [ebp*2 + __500234]                  # 004AC5A3
    mov word ptr [esp + esi*4], bp                       # 004AC5AB
    mov ebp, dword ptr [__1136438]                       # 004AC5AF
    and ebp, 7                                           # 004AC5B5
    add word ptr [esp + esi*4], bp                       # 004AC5B8
    ror dword ptr [__1136438], 3                         # 004AC5BC
    inc esi                                              # 004AC5C3
    jmp .L4AC56E                                         # 004AC5C4
.L4AC5C6:
    mov esi, 1                                           # 004AC5C6
    msvc_xor ebp, ebp                                    # 004AC5CB
    mov bx, word ptr [esp]                               # 004AC5CD
.L4AC5D1:
    cmp esi, dword ptr [__113609C]                       # 004AC5D1
    jae .L4AC5E8                                         # 004AC5D7
    cmp bx, word ptr [esp + esi*4]                       # 004AC5D9
    ja .L4AC5E5                                          # 004AC5DD
    mov bx, word ptr [esp + esi*4]                       # 004AC5DF
    msvc_mov ebp, esi                                    # 004AC5E3
.L4AC5E5:
    inc esi                                              # 004AC5E5
    jmp .L4AC5D1                                         # 004AC5E6
.L4AC5E8:
    movzx ebx, word ptr [ebp*2 + __11360A0]              # 004AC5E8
    add esp, 0x58                                        # 004AC5F0
    pop esi                                              # 004AC5F3
    ret                                                  # 004AC5F4
.L4AC5F5:
    mov bl, byte ptr [esi + 0x21]                        # 004AC5F5
    mov bh, byte ptr [esi + 0x35]                        # 004AC5F8
    mov word ptr [__113642C], 0                          # 004AC5FB
    mov dword ptr [__1136430], 0                         # 004AC604
    msvc_xor esi, esi                                    # 004AC60E
.L4AC610:
    cmp esi, dword ptr [__113609C]                       # 004AC610
    jae .L4AC844                                         # 004AC616
    mov bp, word ptr [esi*2 + __11360A0]                 # 004AC61C
    cmp word ptr [__113644A], -1                         # 004AC624
    jne .L4AC68E                                         # 004AC62C
    cmp ax, word ptr [__113645A]                         # 004AC62E
    jne .L4AC65E                                         # 004AC635
    cmp cx, word ptr [__113645C]                         # 004AC637
    jne .L4AC65E                                         # 004AC63E
    cmp dx, word ptr [__113645E]                         # 004AC640
    jne .L4AC65E                                         # 004AC647
    msvc_mov di, bp                                      # 004AC649
    and di, 0x1ff                                        # 004AC64C
    cmp di, word ptr [__1136460]                         # 004AC651
    je .L4AC854                                          # 004AC658
.L4AC65E:
    cmp ax, word ptr [__1136462]                         # 004AC65E
    jne .L4AC68E                                         # 004AC665
    cmp cx, word ptr [__1136464]                         # 004AC667
    jne .L4AC68E                                         # 004AC66E
    cmp dx, word ptr [__1136466]                         # 004AC670
    jne .L4AC68E                                         # 004AC677
    msvc_mov di, bp                                      # 004AC679
    and di, 0x1ff                                        # 004AC67C
    cmp di, word ptr [__1136468]                         # 004AC681
    je .L4AC854                                          # 004AC688
.L4AC68E:
    mov dword ptr [__113644C], 0xffffffff                # 004AC68E
    mov word ptr [__1136448], 0xffff                     # 004AC698
    mov dword ptr [__1136444], 0xffffffff                # 004AC6A1
    mov word ptr [__1135FAE], 0xffff                     # 004AC6AB
    push eax                                             # 004AC6B4
    push ebx                                             # 004AC6B5
    push ecx                                             # 004AC6B6
    push edx                                             # 004AC6B7
    push esi                                             # 004AC6B8
    and ebp, 0x81ff                                      # 004AC6B9
    call _sub_4AC94F                                     # 004AC6BF
    pop esi                                              # 004AC6C4
    pop edx                                              # 004AC6C5
    pop ecx                                              # 004AC6C6
    cmp dword ptr [__113644C], -1                        # 004AC6C7
    jne .L4AC6DA                                         # 004AC6CE
    mov dword ptr [__113644C], 2                         # 004AC6D0
.L4AC6DA:
    cmp dword ptr [__1136450], -2                        # 004AC6DA
    je .L4AC807                                          # 004AC6E1
    mov eax, dword ptr [__113644C]                       # 004AC6E7
    mov ebx, dword ptr [__1136450]                       # 004AC6EC
    cmp word ptr [__1136448], 0                          # 004AC6F2
    je .L4AC701                                          # 004AC6FA
    add eax, 0x100                                       # 004AC6FC
.L4AC701:
    cmp word ptr [__1136456], 0                          # 004AC701
    je .L4AC711                                          # 004AC709
    add ebx, 0x100                                       # 004AC70B
.L4AC711:
    cmp eax, 3                                           # 004AC711
    jne .L4AC73F                                         # 004AC714
    cmp ebx, 2                                           # 004AC716
    ja .L4AC73F                                          # 004AC719
    mov ebp, dword ptr [__1136444]                       # 004AC727
    imul ebp, ebp, 5                                     # 004AC72D
    shr ebp, 2                                           # 004AC730
    cmp ebp, dword ptr [__113643C]                       # 004AC733
    jbe .L4AC807                                         # 004AC739
.L4AC73F:
    cmp ebx, 3                                           # 004AC73F
    jne .L4AC76D                                         # 004AC742
    cmp eax, 2                                           # 004AC744
    ja .L4AC76D                                          # 004AC747
    mov ebp, dword ptr [__113643C]                       # 004AC755
    imul ebp, ebp, 5                                     # 004AC75B
    shr ebp, 2                                           # 004AC75E
    cmp ebp, dword ptr [__1136444]                       # 004AC761
    jbe .L4AC83C                                         # 004AC767
.L4AC76D:
    cmp eax, 0x103                                       # 004AC76D
    jne .L4AC7A7                                         # 004AC772
    cmp ebx, 0x102                                       # 004AC774
    jne .L4AC7A7                                         # 004AC77A
    movzx ebp, word ptr [__1136448]                      # 004AC77C
    imul ebp, ebp, 5                                     # 004AC783
    shr ebp, 2                                           # 004AC786
    cmp bp, word ptr [__1136456]                         # 004AC789
    jbe .L4AC807                                         # 004AC790
    mov bp, word ptr [__1136448]                         # 004AC792
    add bp, 0x140                                        # 004AC799
    cmp bp, word ptr [__1136456]                         # 004AC79E
    jbe .L4AC807                                         # 004AC7A5
.L4AC7A7:
    cmp ebx, 0x103                                       # 004AC7A7
    jne .L4AC7E1                                         # 004AC7AD
    cmp eax, 0x102                                       # 004AC7AF
    jne .L4AC7E1                                         # 004AC7B4
    movzx ebp, word ptr [__1136456]                      # 004AC7B6
    imul ebp, ebp, 5                                     # 004AC7BD
    shr ebp, 2                                           # 004AC7C0
    cmp bp, word ptr [__1136448]                         # 004AC7C3
    jbe .L4AC83C                                         # 004AC7CA
    mov bp, word ptr [__1136456]                         # 004AC7CC
    add bp, 0x140                                        # 004AC7D3
    cmp bp, word ptr [__1136448]                         # 004AC7D8
    jbe .L4AC83C                                         # 004AC7DF
.L4AC7E1:
    msvc_cmp eax, ebx                                    # 004AC7E1
    jb .L4AC807                                          # 004AC7E3
    ja .L4AC83C                                          # 004AC7E5
    mov bp, word ptr [__1136448]                         # 004AC7E7
    cmp bp, word ptr [__1136456]                         # 004AC7EE
    jb .L4AC807                                          # 004AC7F5
    ja .L4AC83C                                          # 004AC7F7
    mov ebp, dword ptr [__1136444]                       # 004AC7F9
    cmp ebp, dword ptr [__113643C]                       # 004AC7FF
    ja .L4AC83C                                          # 004AC805
.L4AC807:
    mov ebp, dword ptr [__113644C]                       # 004AC807
    mov dword ptr [__1136450], ebp                       # 004AC80D
    mov bp, word ptr [__1136448]                         # 004AC813
    mov word ptr [__1136456], bp                         # 004AC81A
    mov ebp, dword ptr [__1136444]                       # 004AC821
    mov dword ptr [__113643C], ebp                       # 004AC827
    mov dword ptr [__1136440], esi                       # 004AC82D
    mov word ptr [__1136458], 1                          # 004AC833
.L4AC83C:
    pop ebx                                              # 004AC83C
    pop eax                                              # 004AC83D
    inc esi                                              # 004AC83E
    msvc_jmp .L4AC610                                    # 004AC83F
.L4AC844:
    mov ebp, dword ptr [__1136440]                       # 004AC844
    movzx ebx, word ptr [ebp*2 + __11360A0]              # 004AC84A
    pop esi                                              # 004AC852
    ret                                                  # 004AC853
.L4AC854:
    movzx ebx, word ptr [esi*2 + __11360A0]              # 004AC854
    mov dword ptr [__1136450], 1                         # 004AC85C
    mov word ptr [__1136456], 0                          # 004AC866
    mov dword ptr [__113643C], 0                         # 004AC86F
    mov word ptr [__1136458], 1                          # 004AC879
    pop esi                                              # 004AC882
    ret                                                  # 004AC883

    .global _sub_4AC884
_sub_4AC884:
    cmp word ptr [__113642C], 5                          # 004AC884
    jae .L4AC94E                                         # 004AC88C
    inc word ptr [__113642C]                             # 004AC892
    push dword ptr [__1136430]                           # 004AC899
    sub esp, 0x30                                        # 004AC89F
.L4AC8A2:
    test bp, 0x8000                                      # 004AC8A2
    je .L4AC8E0                                          # 004AC8A7
    push eax                                             # 004AC8A9
    and bp, 0x7fff                                       # 004AC8AA
    mov edi, 0xa                                         # 004AC8AF
    call _sub_48963F                                     # 004AC8B4
    test al, 2                                           # 004AC8B9
    je .L4AC8C8                                          # 004AC8BB
    or word ptr [__113642E], 1                           # 004AC8BD
    pop eax                                              # 004AC8C5
    jmp .L4AC93E                                         # 004AC8C6
.L4AC8C8:
    test al, 1                                           # 004AC8C8
    je .L4AC8D7                                          # 004AC8CA
    or word ptr [__113642E], 4                           # 004AC8CC
    pop eax                                              # 004AC8D4
    jmp .L4AC93E                                         # 004AC8D5
.L4AC8D7:
    or word ptr [__113642E], 2                           # 004AC8D7
    pop eax                                              # 004AC8DF
.L4AC8E0:
    msvc_mov edi, ebp                                    # 004AC8E0
    shr edi, 3                                           # 004AC8E2
    mov edi, dword ptr [edi*4 + __4F89CC]                # 004AC8E5
    add dword ptr [__1136430], edi                       # 004AC8EC
    cmp dword ptr [__1136430], 0x500                     # 004AC8F2
    ja .L4AC93E                                          # 004AC8FC
    lea edi, [esp + 4]                                   # 004AC8FE
    call _sub_4A2604                                     # 004AC902
    mov bp, word ptr [esp + 4]                           # 004AC907
    and ebp, 0x81ff                                      # 004AC90C
    cmp dword ptr [esp], 1                               # 004AC912
    jb .L4AC93E                                          # 004AC916
    je .L4AC8A2                                          # 004AC918
    msvc_xor esi, esi                                    # 004AC91A
.L4AC91C:
    cmp esi, dword ptr [esp]                             # 004AC91C
    jae .L4AC93E                                         # 004AC91F
    mov bp, word ptr [esp + esi*2 + 4]                   # 004AC921
    push eax                                             # 004AC926
    push ebx                                             # 004AC927
    push ecx                                             # 004AC928
    push edx                                             # 004AC929
    push esi                                             # 004AC92A
    and ebp, 0x81ff                                      # 004AC92B
    call _sub_4AC884                                     # 004AC931
    pop esi                                              # 004AC936
    pop edx                                              # 004AC937
    pop ecx                                              # 004AC938
    pop ebx                                              # 004AC939
    pop eax                                              # 004AC93A
    inc esi                                              # 004AC93B
    jmp .L4AC91C                                         # 004AC93C
.L4AC93E:
    add esp, 0x30                                        # 004AC93E
    pop dword ptr [__1136430]                            # 004AC941
    dec word ptr [__113642C]                             # 004AC947
.L4AC94E:
    ret                                                  # 004AC94E

    .global _sub_4AC94F
_sub_4AC94F:
    cmp word ptr [__113642C], 5                          # 004AC94F
    jae .L4ACBFE                                         # 004AC957
    inc word ptr [__113642C]                             # 004AC95D
    push dword ptr [__1136430]                           # 004AC964
    sub esp, 0x30                                        # 004AC96A
.L4AC96D:
    cmp word ptr [__113644A], -1                         # 004AC96D
    je .L4ACA40                                          # 004AC975
    mov di, word ptr [__1135FAE]                         # 004AC97B
    cmp di, word ptr [__113644A]                         # 004AC982
    je .L4AC9FD                                          # 004AC989
.L4AC98B:
    mov si, word ptr [__113645A]                         # 004AC98B
    mov di, word ptr [__113645C]                         # 004AC992
    msvc_sub si, ax                                      # 004AC999
    jns .L4AC9A1                                         # 004AC99C
    neg si                                               # 004AC99E
.L4AC9A1:
    msvc_sub di, cx                                      # 004AC9A1
    jns .L4AC9A9                                         # 004AC9A4
    neg di                                               # 004AC9A6
.L4AC9A9:
    msvc_cmp si, di                                      # 004AC9A9
    jae .L4AC9B1                                         # 004AC9AC
    msvc_xchg di, si                                     # 004AC9AE
.L4AC9B1:
    shr di, 2                                            # 004AC9B1
    msvc_add si, di                                      # 004AC9B5
    mov di, word ptr [__113645E]                         # 004AC9B8
    msvc_sub di, dx                                      # 004AC9BF
    jns .L4AC9C7                                         # 004AC9C2
    neg di                                               # 004AC9C4
.L4AC9C7:
    msvc_add si, di                                      # 004AC9C7
    cmp si, word ptr [__1136448]                         # 004AC9CA
    ja .L4ACAAD                                          # 004AC9D1
    mov edi, dword ptr [__1136430]                       # 004AC9D7
    jb .L4AC9EB                                          # 004AC9DD
    cmp edi, dword ptr [__1136444]                       # 004AC9DF
    ja .L4ACAAD                                          # 004AC9E5
.L4AC9EB:
    mov word ptr [__1136448], si                         # 004AC9EB
    mov dword ptr [__1136444], edi                       # 004AC9F2
    msvc_jmp .L4ACAAD                                    # 004AC9F8
.L4AC9FD:
    mov edi, dword ptr [__1136430]                       # 004AC9FD
    cmp word ptr [__1136448], 0                          # 004ACA03
    jne .L4ACA19                                         # 004ACA0B
    cmp edi, dword ptr [__1136444]                       # 004ACA0D
    ja .L4ACAAD                                          # 004ACA13
.L4ACA19:
    mov word ptr [__1136448], 0                          # 004ACA19
    mov dword ptr [__1136444], edi                       # 004ACA22
    cmp dword ptr [__113644C], -1                        # 004ACA28
    jne .L4ACA3B                                         # 004ACA2F
    mov dword ptr [__113644C], 1                         # 004ACA31
.L4ACA3B:
    msvc_jmp .L4ACBEE                                    # 004ACA3B
.L4ACA40:
    cmp ax, word ptr [__113645A]                         # 004ACA40
    jne .L4ACA6C                                         # 004ACA47
    cmp cx, word ptr [__113645C]                         # 004ACA49
    jne .L4ACA6C                                         # 004ACA50
    cmp dx, word ptr [__113645E]                         # 004ACA52
    jne .L4ACA6C                                         # 004ACA59
    msvc_mov di, bp                                      # 004ACA5B
    and di, 0x1ff                                        # 004ACA5E
    cmp di, word ptr [__1136460]                         # 004ACA63
    je .L4AC9FD                                          # 004ACA6A
.L4ACA6C:
    cmp ax, word ptr [__1136462]                         # 004ACA6C
    jne .L4AC98B                                         # 004ACA73
    cmp cx, word ptr [__1136464]                         # 004ACA79
    jne .L4AC98B                                         # 004ACA80
    cmp dx, word ptr [__1136466]                         # 004ACA86
    jne .L4AC98B                                         # 004ACA8D
    msvc_mov di, bp                                      # 004ACA93
    and di, 0x1ff                                        # 004ACA96
    cmp di, word ptr [__1136468]                         # 004ACA9B
    je .L4AC9FD                                          # 004ACAA2
    msvc_jmp .L4AC98B                                    # 004ACAA8
.L4ACAAD:
    test bp, 0x8000                                      # 004ACAAD
    je .L4ACAE8                                          # 004ACAB2
    push eax                                             # 004ACAB4
    and bp, 0x7fff                                       # 004ACAB5
    mov edi, 0xa                                         # 004ACABA
    call _sub_48963F                                     # 004ACABF
    test al, 2                                           # 004ACAC4
    jne .L4ACB95                                         # 004ACAC6
    test al, 1                                           # 004ACACC
    jne .L4ACBAB                                         # 004ACACE
    cmp dword ptr [__113644C], -1                        # 004ACAD4
    jne .L4ACAE7                                         # 004ACADB
    mov dword ptr [__113644C], 2                         # 004ACADD
.L4ACAE7:
    pop eax                                              # 004ACAE7
.L4ACAE8:
    msvc_mov edi, ebp                                    # 004ACAE8
    shr edi, 3                                           # 004ACAEA
    mov edi, dword ptr [edi*4 + __4F89CC]                # 004ACAED
    add dword ptr [__1136430], edi                       # 004ACAF4
    cmp dword ptr [__1136430], 0x500                     # 004ACAFA
    ja .L4ACBEE                                          # 004ACB04
    lea edi, [esp + 4]                                   # 004ACB0A
    call _sub_4A2604                                     # 004ACB0E
    mov bp, word ptr [esp + 4]                           # 004ACB13
    and ebp, 0x81ff                                      # 004ACB18
    cmp dword ptr [esp], 1                               # 004ACB1E
    jb .L4ACBEE                                          # 004ACB22
    je .L4AC96D                                          # 004ACB28
    msvc_xor esi, esi                                    # 004ACB3A
.L4ACB3C:
    cmp esi, dword ptr [esp]                             # 004ACB3C
    jae .L4ACBD9                                         # 004ACB3F
    mov bp, word ptr [esp + esi*2 + 4]                   # 004ACB45
    push eax                                             # 004ACB4A
    push ebx                                             # 004ACB4B
    push ecx                                             # 004ACB4C
    push edx                                             # 004ACB4D
    push esi                                             # 004ACB4E
    and ebp, 0x81ff                                      # 004ACB4F
    push dword ptr [__113644C]                           # 004ACB55
    call _sub_4AC94F                                     # 004ACB6A
    pop eax
    cmp eax, dword ptr [__113644C]                       # 004ACB7A
    jae .L4ACB87                                         # 004ACB80
    mov dword ptr [__113644C], eax                       # 004ACB82
.L4ACB87:
    pop esi                                              # 004ACB8D
    pop edx                                              # 004ACB8E
    pop ecx                                              # 004ACB8F
    pop ebx                                              # 004ACB90
    pop eax                                              # 004ACB91
    inc esi                                              # 004ACB92
    jmp .L4ACB3C                                         # 004ACB93
.L4ACB95:
    cmp dword ptr [__113644C], -1                        # 004ACB95
    jne .L4ACBA8                                         # 004ACB9C
    mov dword ptr [__113644C], 6                         # 004ACB9E
.L4ACBA8:
    pop eax                                              # 004ACBA8
    jmp .L4ACBEE                                         # 004ACBA9
.L4ACBAB:
    cmp dword ptr [__113644C], -1                        # 004ACBAB
    jne .L4ACAE7                                         # 004ACBB2
    mov dword ptr [__113644C], 4                         # 004ACBB8
    test al, 4                                           # 004ACBC2
    je .L4ACAE7                                          # 004ACBC4
    mov dword ptr [__113644C], 3                         # 004ACBCA
    msvc_jmp .L4ACAE7                                    # 004ACBD4
.L4ACBD9:
    mov word ptr [__1135FAE], 0xffff                     # 004ACBE5
.L4ACBEE:
    add esp, 0x30                                        # 004ACBEE
    pop dword ptr [__1136430]                            # 004ACBF1
    dec word ptr [__113642C]                             # 004ACBF7
.L4ACBFE:
    ret                                                  # 004ACBFE

    .global _sub_4ACBFF
_sub_4ACBFF:
    cmp word ptr [__113642C], 5                          # 004ACBFF
    jae .L4ACCDB                                         # 004ACC07
    inc word ptr [__113642C]                             # 004ACC0D
    push dword ptr [__1136430]                           # 004ACC14
    sub esp, 0x30                                        # 004ACC1A
.L4ACC1D:
    test bp, 0x8000                                      # 004ACC1D
    je .L4ACC4D                                          # 004ACC22
    push eax                                             # 004ACC24
    and bp, 0x7fff                                       # 004ACC25
    mov edi, 0xa                                         # 004ACC2A
    call _sub_48963F                                     # 004ACC2F
    test al, 1                                           # 004ACC34
    jne .L4ACCBF                                         # 004ACC36
    pop eax                                              # 004ACC3C
    push eax                                             # 004ACC3D
    mov edi, 0x8000000a                                  # 004ACC3E
    call _sub_48963F                                     # 004ACC43
    test al, 2                                           # 004ACC48
    jne .L4ACCBF                                         # 004ACC4A
    pop eax                                              # 004ACC4C
.L4ACC4D:
    msvc_mov edi, ebp                                    # 004ACC4D
    shr edi, 3                                           # 004ACC4F
    mov edi, dword ptr [edi*4 + __4F89CC]                # 004ACC52
    add dword ptr [__1136430], edi                       # 004ACC59
    cmp dword ptr [__1136430], 0x500                     # 004ACC5F
    ja .L4ACCCB                                          # 004ACC69
    mov edi, dword ptr [__1136430]                       # 004ACC6B
    cmp edi, dword ptr [__1136434]                       # 004ACC71
    jbe .L4ACC7F                                         # 004ACC77
    mov dword ptr [__1136434], edi                       # 004ACC79
.L4ACC7F:
    lea edi, [esp + 4]                                   # 004ACC7F
    call _sub_4A2604                                     # 004ACC83
    mov bp, word ptr [esp + 4]                           # 004ACC88
    and ebp, 0x81ff                                      # 004ACC8D
    cmp dword ptr [esp], 1                               # 004ACC93
    jb .L4ACCCB                                          # 004ACC97
    je .L4ACC1D                                          # 004ACC99
    msvc_xor esi, esi                                    # 004ACC9B
.L4ACC9D:
    cmp esi, dword ptr [esp]                             # 004ACC9D
    jae .L4ACCC2                                         # 004ACCA0
    mov bp, word ptr [esp + esi*2 + 4]                   # 004ACCA2
    push eax                                             # 004ACCA7
    push ebx                                             # 004ACCA8
    push ecx                                             # 004ACCA9
    push edx                                             # 004ACCAA
    push esi                                             # 004ACCAB
    and ebp, 0x81ff                                      # 004ACCAC
    call _sub_4ACBFF                                     # 004ACCB2
    pop esi                                              # 004ACCB7
    pop edx                                              # 004ACCB8
    pop ecx                                              # 004ACCB9
    pop ebx                                              # 004ACCBA
    pop eax                                              # 004ACCBB
    inc esi                                              # 004ACCBC
    jmp .L4ACC9D                                         # 004ACCBD
.L4ACCBF:
    pop eax                                              # 004ACCBF
    jmp .L4ACCCB                                         # 004ACCC0
.L4ACCC2:
    mov word ptr [__1135FAE], 0xffff                     # 004ACCC2
.L4ACCCB:
    add esp, 0x30                                        # 004ACCCB
    pop dword ptr [__1136430]                            # 004ACCCE
    dec word ptr [__113642C]                             # 004ACCD4
.L4ACCDB:
    ret                                                  # 004ACCDB

    .global _sub_4ACCDC
_sub_4ACCDC:
    cmp byte ptr [esi + 0x42], 1                         # 004ACCDC
    je .L4ACDE0                                          # 004ACCE0
    DebugStamp 0x16071644
    mov al, byte ptr [esi + 0x53]                        # 004ACCE6
    movzx ebp, word ptr [esi + 0x3a]                     # 004ACCE9
    shl ebp, 7                                           # 004ACCED
    add_offset ebp, _things                              # 004ACCF0
    mov ah, byte ptr [ebp + 0x49]                        # 004ACCF6
    mov word ptr [__113601A], ax                         # 004ACCF9
    mov ax, word ptr [esi + 0x30]                        # 004ACCFF
    mov cx, word ptr [esi + 0x32]                        # 004ACD03
    movzx dx, byte ptr [esi + 0x34]                      # 004ACD07
    shl dx, 2                                            # 004ACD0C
    movzx ebp, word ptr [esi + 0x2c]                     # 004ACD10
    mov bl, byte ptr [esi + 0x21]                        # 004ACD14
    mov bh, byte ptr [esi + 0x35]                        # 004ACD17
    mov_offset edi, __11360A0                            # 004ACD1A
    call _sub_4A2604                                     # 004ACD1F
    cmp dword ptr [__113609C], 0                         # 004ACD24
    je .L4ACDDB                                          # 004ACD2B
    call _sub_4AC3D3                                     # 004ACD31
    movzx edi, word ptr [esi + 0x3a]                     # 004ACD36
    shl edi, 7                                           # 004ACD3A
    add_offset edi, _things                              # 004ACD3D
.L4ACD43:
    movzx edi, word ptr [edi + 0x3a]                     # 004ACD43
    shl edi, 7                                           # 004ACD47
    add_offset edi, _things                              # 004ACD4A
    cmp byte ptr [edi + 1], 6                            # 004ACD50
    jne .L4ACD43                                         # 004ACD54
    movzx ebp, word ptr [edi + 0x2c]                     # 004ACD56
    mov ax, word ptr [edi + 0x30]                        # 004ACD5A
    mov cx, word ptr [edi + 0x32]                        # 004ACD5E
    movzx dx, byte ptr [edi + 0x34]                      # 004ACD62
    shl dx, 2                                            # 004ACD67
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004ACD6B
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004ACD73
    movzx ebx, byte ptr [ebp*8 + __4F7B5D]               # 004ACD7B
    cmp bx, 0xc                                          # 004ACD83
    jae .L4ACD99                                         # 004ACD87
    sub ax, word ptr [ebx*4 + __503C6C]                  # 004ACD89
    sub cx, word ptr [ebx*4 + __503C6E]                  # 004ACD91
.L4ACD99:
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004ACD99
    xor bp, 4                                            # 004ACDA1
    mov bl, byte ptr [esi + 0x21]                        # 004ACDA5
    mov bh, byte ptr [esi + 0x35]                        # 004ACDA8
    mov_offset edi, __11360A0                            # 004ACDAB
    call _sub_4A2604                                     # 004ACDB0
    cmp dword ptr [__113609C], 0                         # 004ACDB5
    je .L4ACDDB                                          # 004ACDBC
    or dx, 0x8000                                        # 004ACDBE
    mov word ptr [__1136458], 0                          # 004ACDC3
    call _sub_4AC3D3                                     # 004ACDCC
    cmp word ptr [__1136458], 0                          # 004ACDD1
    jne .L4ACDDE                                         # 004ACDD9
.L4ACDDB:
    msvc_and eax, eax                                    # 004ACDDB
    ret                                                  # 004ACDDD
.L4ACDDE:
    stc                                                  # 004ACDDE
    ret                                                  # 004ACDDF
.L4ACDE0:
    DebugStamp 0x16071645
    movzx ebx, byte ptr [esi + 0x35]                     # 004ACDE0
    cmp bl, 0xff                                         # 004ACDE4
    je .L4ACDF8                                          # 004ACDE7
    mov ebx, dword ptr [ebx*4 + _roadObjects]            # 004ACDE9
    test word ptr [ebx + 0x12], 0x40                     # 004ACDF0
    je .L4ACDDB                                          # 004ACDF6
.L4ACDF8:
    mov al, byte ptr [esi + 0x53]                        # 004ACDF8
    movzx ebp, word ptr [esi + 0x3a]                     # 004ACDFB
    shl ebp, 7                                           # 004ACDFF
    add_offset ebp, _things                              # 004ACE02
    mov ah, byte ptr [ebp + 0x49]                        # 004ACE08
    mov word ptr [__113601A], ax                         # 004ACE0B
    mov ax, word ptr [esi + 0x30]                        # 004ACE11
    mov cx, word ptr [esi + 0x32]                        # 004ACE15
    movzx dx, byte ptr [esi + 0x34]                      # 004ACE19
    shl dx, 2                                            # 004ACE1E
    movzx ebp, word ptr [esi + 0x2c]                     # 004ACE22
    mov bl, byte ptr [esi + 0x21]                        # 004ACE26
    mov bh, byte ptr [esi + 0x35]                        # 004ACE29
    mov_offset edi, __11360A0                            # 004ACE2C
    and ebp, 0x7f                                        # 004ACE31
    call _sub_478895                                     # 004ACE34
    cmp dword ptr [__113609C], 0                         # 004ACE39
    je .L4ACDDB                                          # 004ACE40
    call _sub_47DFD0                                     # 004ACE42
    movzx edi, word ptr [esi + 0x3a]                     # 004ACE47
    shl edi, 7                                           # 004ACE4B
    add_offset edi, _things                              # 004ACE4E
.L4ACE54:
    movzx edi, word ptr [edi + 0x3a]                     # 004ACE54
    shl edi, 7                                           # 004ACE58
    add_offset edi, _things                              # 004ACE5B
    cmp byte ptr [edi + 1], 6                            # 004ACE61
    jne .L4ACE54                                         # 004ACE65
    movzx ebp, word ptr [edi + 0x2c]                     # 004ACE67
    mov ax, word ptr [edi + 0x30]                        # 004ACE6B
    mov cx, word ptr [edi + 0x32]                        # 004ACE6F
    movzx dx, byte ptr [edi + 0x34]                      # 004ACE73
    and ebp, 0x7f                                        # 004ACE78
    shl dx, 2                                            # 004ACE7B
    add ax, word ptr [ebp*8 + __4F6F8E]                  # 004ACE7F
    add cx, word ptr [ebp*8 + __4F6F90]                  # 004ACE87
    movzx ebx, byte ptr [ebp*8 + __4F6F8D]               # 004ACE8F
    add dx, word ptr [ebp*8 + __4F6F92]                  # 004ACE97
    xor bp, 4                                            # 004ACE9F
    mov bl, byte ptr [esi + 0x21]                        # 004ACEA3
    mov bh, byte ptr [esi + 0x35]                        # 004ACEA6
    mov_offset edi, __11360A0                            # 004ACEA9
    and ebp, 0x7f                                        # 004ACEAE
    call _sub_478895                                     # 004ACEB1
    cmp dword ptr [__113609C], 0                         # 004ACEB6
    je .L4ACDDB                                          # 004ACEBD
    or dx, 0x8000                                        # 004ACEC3
    mov word ptr [__1136458], 0                          # 004ACEC8
    call _sub_47DFD0                                     # 004ACED1
    cmp word ptr [__1136458], 0                          # 004ACED6
    jne .L4ACDDE                                         # 004ACEDE
    msvc_and eax, eax                                    # 004ACEE4
    ret                                                  # 004ACEE6

    .global _sub_4ACEE7
_sub_4ACEE7:
    cmp byte ptr [esi + 0x42], 1                         # 004ACEE7
    je _sub_47DA8D                                       # 004ACEEB
    mov bp, word ptr [esi + 0x36]                        # 004ACEF1
    msvc_mov dx, bp                                      # 004ACEF5
    add bp, 2                                            # 004ACEF8
    and ebp, 0x3f                                        # 004ACEFC
    and dx, 0xffc0                                       # 004ACEFF
    msvc_or bp, dx                                       # 004ACF03
    cmp word ptr [ebp*2 + __96885C], -2                  # 004ACF06
    jne .L4AD769                                         # 004ACF0F
    inc bp                                               # 004ACF15
    and ebp, 0x3f                                        # 004ACF17
    msvc_or bp, dx                                       # 004ACF1A
    cmp word ptr [ebp*2 + __96885C], -2                  # 004ACF1D
    jne .L4AD769                                         # 004ACF26
    cmp byte ptr [esi + 0x52], 1                         # 004ACF2C
    je .L4ACF63                                          # 004ACF30
    sub eax, dword ptr [esi + 0x3c]                      # 004ACF32
    shl ebx, 2                                           # 004ACF35
    cmp ebx, 0xcc48                                      # 004ACF38
    jge .L4ACF45                                         # 004ACF3E
    mov ebx, 0xcc48                                      # 004ACF40
.L4ACF45:
    msvc_cmp eax, ebx                                    # 004ACF45
    jle .L4ACF4B                                         # 004ACF47
    msvc_mov eax, ebx                                    # 004ACF49
.L4ACF4B:
    push eax                                             # 004ACF4B
    mov dword ptr [__1136114], 0                         # 004ACF4C
    call _sub_4B15FF                                     # 004ACF56
    pop edx                                              # 004ACF5B
    msvc_sub edx, eax                                    # 004ACF5C
    add dword ptr [esi + 0x3c], edx                      # 004ACF5E
    jmp .L4ACF77                                         # 004ACF61
.L4ACF63:
    msvc_xor eax, eax                                    # 004ACF63
    mov dword ptr [__1136114], 0                         # 004ACF65
    call _sub_4B15FF                                     # 004ACF6F
    add dword ptr [esi + 0x28], eax                      # 004ACF74
.L4ACF77:
    test dword ptr [__1136114], 1                        # 004ACF77
    je .L4AD766                                          # 004ACF81
    mov ax, word ptr [esi + 0x30]                        # 004ACF87
    mov cx, word ptr [esi + 0x32]                        # 004ACF8B
    mov dl, byte ptr [esi + 0x34]                        # 004ACF8F
    movzx ebp, word ptr [esi + 0x2c]                     # 004ACF92
    push esi                                             # 004ACF96
    mov word ptr [__11361F6], 0xffff                     # 004ACF97
    movzx esi, cx                                        # 004ACFA0
    shl esi, 9                                           # 004ACFA3
    msvc_or si, ax                                       # 004ACFA6
    shr esi, 3                                           # 004ACFA9
    mov esi, dword ptr [esi + __E40134]                  # 004ACFAC
.L4ACFB2:
    mov al, byte ptr [esi]                               # 004ACFB2
    and al, 0x3c                                         # 004ACFB4
    cmp al, 4                                            # 004ACFB6
    jne .L4ACFDD                                         # 004ACFB8
    cmp dl, byte ptr [esi + 2]                           # 004ACFBA
    jne .L4ACFDD                                         # 004ACFBD
    mov al, byte ptr [esi]                               # 004ACFBF
    and al, 3                                            # 004ACFC1
    msvc_mov cx, bp                                      # 004ACFC3
    and cl, 3                                            # 004ACFC6
    cmp al, cl                                           # 004ACFC9
    jne .L4ACFDD                                         # 004ACFCB
    mov al, byte ptr [esi + 4]                           # 004ACFCD
    and al, 0x3f                                         # 004ACFD0
    msvc_mov cx, bp                                      # 004ACFD2
    shr cx, 3                                            # 004ACFD5
    cmp al, cl                                           # 004ACFD9
    je .L4ACFE8                                          # 004ACFDB
.L4ACFDD:
    add esi, 8                                           # 004ACFDD
    test byte ptr [esi - 7], 0x80                        # 004ACFE0
    je .L4ACFB2                                          # 004ACFE4
    jmp .L4AD001                                         # 004ACFE6
.L4ACFE8:
    test byte ptr [esi], 0x80                            # 004ACFE8
    je .L4AD001                                          # 004ACFEB
    test byte ptr [esi + 9], 0x30                        # 004ACFED
    jne .L4AD001                                         # 004ACFF1
    mov ax, word ptr [esi + 0xe]                         # 004ACFF3
    and ax, 0x3ff                                        # 004ACFF7
    mov word ptr [__11361F6], ax                         # 004ACFFB
.L4AD001:
    pop esi                                              # 004AD001
    mov al, byte ptr [esi + 0x53]                        # 004AD002
    movzx ebp, word ptr [esi + 0x3a]                     # 004AD005
    shl ebp, 7                                           # 004AD009
    add_offset ebp, _things                              # 004AD00C
    mov ah, byte ptr [ebp + 0x49]                        # 004AD012
    mov word ptr [__113601A], ax                         # 004AD015
    mov ax, word ptr [esi + 0x30]                        # 004AD01B
    mov cx, word ptr [esi + 0x32]                        # 004AD01F
    movzx dx, byte ptr [esi + 0x34]                      # 004AD023
    shl dx, 2                                            # 004AD028
    movzx ebp, word ptr [esi + 0x2c]                     # 004AD02C
    mov bl, byte ptr [esi + 0x21]                        # 004AD030
    mov bh, byte ptr [esi + 0x35]                        # 004AD033
    mov_offset edi, __11360A0                            # 004AD036
    call _sub_4A2604                                     # 004AD03B
    cmp byte ptr [esi + 0x52], 1                         # 004AD040
    je .L4AD13C                                          # 004AD044
    cmp word ptr [__11361F6], -1                         # 004AD04A
    je .L4AD13C                                          # 004AD052
    mov bx, word ptr [__11361F6]                         # 004AD058
    cmp bx, word ptr [__1135FAE]                         # 004AD05F
    je .L4AD13C                                          # 004AD066
    push eax                                             # 004AD06C
    push ebx                                             # 004AD06D
    push ecx                                             # 004AD06E
    push edi                                             # 004AD06F
    movzx edi, word ptr [esi + 0x3a]                     # 004AD070
    shl edi, 7                                           # 004AD074
    add_offset edi, _things                              # 004AD077
    mov ebp, dword ptr [esi + 0x46]                      # 004AD07D
    movzx ecx, word ptr [esi + 0x4a]                     # 004AD080
    mov al, byte ptr [ecx + ebp + __987C5C]              # 004AD084
    and al, 7                                            # 004AD08B
    cmp al, 1                                            # 004AD08D
    je .L4AD0AE                                          # 004AD08F
    cmp al, 2                                            # 004AD091
    je .L4AD0DA                                          # 004AD093
    cmp bx, word ptr [esi + 0x54]                        # 004AD095
    je .L4AD138                                          # 004AD099
    test byte ptr [edi + 0x48], 2                        # 004AD09F
    je .L4AD12A                                          # 004AD0A3
    msvc_jmp .L4AD138                                    # 004AD0A9
.L4AD0AE:
    mov al, byte ptr [ecx + ebp + __987C5C+1]            # 004AD0AE
    mov ah, byte ptr [ecx + ebp + __987C5C]              # 004AD0B5
    shr ah, 6                                            # 004AD0BC
    msvc_cmp ax, bx                                      # 004AD0BF
    je .L4AD0D0                                          # 004AD0C2
    test byte ptr [edi + 0x48], 2                        # 004AD0C4
    jne .L4AD138                                         # 004AD0C8
    cmp bx, word ptr [esi + 0x54]                        # 004AD0CA
    je .L4AD138                                          # 004AD0CE
.L4AD0D0:
    test word ptr [esi + 0xc], 0x40                      # 004AD0D0
    jne .L4AD138                                         # 004AD0D6
    jmp .L4AD12A                                         # 004AD0D8
.L4AD0DA:
    mov al, byte ptr [ecx + ebp + __987C5C+1]            # 004AD0DA
    mov ah, byte ptr [ecx + ebp + __987C5C]              # 004AD0E1
    shr ah, 6                                            # 004AD0E8
    msvc_cmp ax, bx                                      # 004AD0EB
    je .L4AD0FE                                          # 004AD0EE
    test byte ptr [edi + 0x48], 2                        # 004AD0F0
    jne .L4AD138                                         # 004AD0F4
    cmp bx, word ptr [esi + 0x54]                        # 004AD0F6
    je .L4AD138                                          # 004AD0FA
    jmp .L4AD12A                                         # 004AD0FC
.L4AD0FE:
    mov al, byte ptr [ecx + ebp + __987C5C]              # 004AD0FE
    and eax, 7                                           # 004AD105
    add ecx, dword ptr [eax*4 + __4FE070]                # 004AD108
    cmp byte ptr [ecx + ebp + __987C5C], 0               # 004AD10F
    jne .L4AD11B                                         # 004AD117
    msvc_xor ecx, ecx                                    # 004AD119
.L4AD11B:
    mov word ptr [esi + 0x4a], cx                        # 004AD11B
    mov bx, word ptr [esi + 0xa]                         # 004AD11F
    call _sub_4B93A5                                     # 004AD123
    jmp .L4AD138                                         # 004AD128
.L4AD12A:
    pop edi                                              # 004AD12A
    pop ecx                                              # 004AD12B
    pop ebx                                              # 004AD12C
    pop eax                                              # 004AD12D
    mov bp, word ptr [__11361F6]                         # 004AD12E
    mov al, 4                                            # 004AD135
    ret                                                  # 004AD137
.L4AD138:
    pop edi                                              # 004AD138
    pop ecx                                              # 004AD139
    pop ebx                                              # 004AD13A
    pop eax                                              # 004AD13B
.L4AD13C:
    cmp dword ptr [__113609C], 0                         # 004AD13C
    je .L4AD76C                                          # 004AD143
    movzx ebx, word ptr [__11360A0]                      # 004AD149
    cmp dword ptr [__113609C], 1                         # 004AD150
    je .L4AD347                                          # 004AD157
    movzx ebx, byte ptr [esi + 0x52]                     # 004AD15D
    call dword ptr [ebx*4 + __50039C]                    # 004AD161
    msvc_mov eax, ebx                                    # 004AD168
    or ax, 0x4000                                        # 004AD16A
    pushal                                               # 004AD16E
    push eax                                             # 004AD16F
    mov ax, word ptr [esi + 0x30]                        # 004AD170
    mov cx, word ptr [esi + 0x32]                        # 004AD174
    movzx dx, byte ptr [esi + 0x34]                      # 004AD178
    shl dx, 2                                            # 004AD17D
    movzx ebp, word ptr [esi + 0x2c]                     # 004AD181
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AD185
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AD18D
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AD195
    pop ebp                                              # 004AD19D
    and ebp, 0x1ff                                       # 004AD19E
    mov bl, byte ptr [esi + 0x21]                        # 004AD1A4
    mov bh, byte ptr [esi + 0x35]                        # 004AD1A7
    call _sub_4A3EF6                                     # 004AD1AA
    popal                                                # 004AD1AF
    pushal                                               # 004AD1B0
    push eax                                             # 004AD1B1
    mov ax, word ptr [esi + 0x30]                        # 004AD1B2
    mov cx, word ptr [esi + 0x32]                        # 004AD1B6
    movzx dx, byte ptr [esi + 0x34]                      # 004AD1BA
    shl dx, 2                                            # 004AD1BF
    movzx ebp, word ptr [esi + 0x36]                     # 004AD1C3
    mov byte ptr [__1136234], 0                          # 004AD1C7
    movzx ebx, word ptr [ebp*2 + __96885C]               # 004AD1CE
    cmp bx, -2                                           # 004AD1D6
    je .L4AD246                                          # 004AD1DA
    test bx, 0x8000                                      # 004AD1DC
    jne .L4AD24C                                         # 004AD1E1
    test bx, 0x4000                                      # 004AD1E3
    jne .L4AD246                                         # 004AD1E8
.L4AD1EA:
    inc byte ptr [__1136234]                             # 004AD1EA
    cmp byte ptr [__1136234], 5                          # 004AD1F0
    jae .L4AD246                                         # 004AD1F7
    msvc_mov ebx, ebp                                    # 004AD1F9
    dec ebp                                              # 004AD1FB
    and ebp, 0x3f                                        # 004AD1FC
    and ebx, 0xffffffc0                                  # 004AD1FF
    msvc_or ebp, ebx                                     # 004AD202
    movzx ebx, word ptr [ebp*2 + __96885C]               # 004AD204
    cmp bx, -2                                           # 004AD20C
    je .L4AD246                                          # 004AD210
    and ebx, 0x1ff                                       # 004AD212
    sub ax, word ptr [ebx*8 + __4F7B5E]                  # 004AD218
    sub cx, word ptr [ebx*8 + __4F7B60]                  # 004AD220
    sub dx, word ptr [ebx*8 + __4F7B62]                  # 004AD228
    movzx ebx, word ptr [ebp*2 + __96885C]               # 004AD230
    test bx, 0x8000                                      # 004AD238
    jne .L4AD24C                                         # 004AD23D
    test bx, 0x4000                                      # 004AD23F
    je .L4AD1EA                                          # 004AD244
.L4AD246:
    pop eax                                              # 004AD246
    msvc_jmp .L4AD341                                    # 004AD247
.L4AD24C:
    and ebx, 0x1ff                                       # 004AD24C
    mov word ptr [__1136108], ax                         # 004AD252
    mov word ptr [__113610A], cx                         # 004AD258
    mov word ptr [__113610C], dx                         # 004AD25F
    mov dword ptr [__1136110], ebx                       # 004AD266
    pop eax                                              # 004AD26C
    msvc_xor ebp, ebp                                    # 004AD26D
.L4AD26F:
    mov bx, word ptr [ebp*2 + __11360A0]                 # 004AD26F
    and ebx, 0x1ff                                       # 004AD277
    shr ebx, 2                                           # 004AD27D
    mov bl, byte ptr [ebx + __4F865C]                    # 004AD280
    mov byte ptr [ebp + __113621F], bl                   # 004AD286
    inc ebp                                              # 004AD28C
    cmp ebp, dword ptr [__113609C]                       # 004AD28D
    jb .L4AD26F                                          # 004AD293
    and eax, 0x1ff                                       # 004AD295
    shr eax, 2                                           # 004AD29A
    mov al, byte ptr [eax + __4F865C]                    # 004AD29D
    mov edi, 1                                           # 004AD2A3
    msvc_xor ebp, ebp                                    # 004AD2A8
    mov cl, byte ptr [__113621F]                         # 004AD2AA
    mov ch, byte ptr [__113621F]                         # 004AD2B0
.L4AD2B6:
    mov bl, byte ptr [edi + __113621F]                   # 004AD2B6
    cmp cl, bl                                           # 004AD2BC
    jle .L4AD2C2                                         # 004AD2BE
    msvc_mov cl, bl                                      # 004AD2C0
.L4AD2C2:
    cmp ch, bl                                           # 004AD2C2
    jge .L4AD2C8                                         # 004AD2C4
    msvc_mov ch, bl                                      # 004AD2C6
.L4AD2C8:
    msvc_or bl, bl                                       # 004AD2C8
    jns .L4AD2CE                                         # 004AD2CA
    neg bl                                               # 004AD2CC
.L4AD2CE:
    mov bh, byte ptr [ebp + __113621F]                   # 004AD2CE
    msvc_or bh, bh                                       # 004AD2D4
    jns .L4AD2DA                                         # 004AD2D6
    neg bh                                               # 004AD2D8
.L4AD2DA:
    cmp bl, bh                                           # 004AD2DA
    jae .L4AD2E0                                         # 004AD2DC
    msvc_mov ebp, edi                                    # 004AD2DE
.L4AD2E0:
    inc edi                                              # 004AD2E0
    cmp edi, dword ptr [__113609C]                       # 004AD2E1
    jb .L4AD2B6                                          # 004AD2E7
    mov ah, byte ptr [ebp + __113621F]                   # 004AD2E9
    mov edi, 0x10                                        # 004AD2EF
    cmp ah, cl                                           # 004AD2F4
    je .L4AD308                                          # 004AD2F6
    or edi, 0x40000000                                   # 004AD2F8
    cmp al, ah                                           # 004AD2FE
    jge .L4AD308                                         # 004AD300
    or edi, 0x10000000                                   # 004AD302
.L4AD308:
    cmp ah, ch                                           # 004AD308
    je .L4AD31C                                          # 004AD30A
    or edi, 0x20000000                                   # 004AD30C
    cmp al, ah                                           # 004AD312
    jle .L4AD31C                                         # 004AD314
    or edi, 0x8000000                                    # 004AD316
.L4AD31C:
    mov ax, word ptr [__1136108]                         # 004AD31C
    mov cx, word ptr [__113610A]                         # 004AD322
    mov dx, word ptr [__113610C]                         # 004AD329
    mov ebp, dword ptr [__1136110]                       # 004AD330
    mov bl, byte ptr [esi + 0x21]                        # 004AD336
    mov bh, byte ptr [esi + 0x35]                        # 004AD339
    call _sub_48963F                                     # 004AD33C
.L4AD341:
    popal                                                # 004AD341
    msvc_jmp .L4AD5F1                                    # 004AD342
.L4AD347:
    test byte ptr [__113607D], 1                         # 004AD347
    je .L4AD397                                          # 004AD34E
    pushal                                               # 004AD350
    mov ax, word ptr [esi + 0x30]                        # 004AD351
    mov cx, word ptr [esi + 0x32]                        # 004AD355
    movzx dx, byte ptr [esi + 0x34]                      # 004AD359
    shl dx, 2                                            # 004AD35E
    movzx ebp, word ptr [esi + 0x2c]                     # 004AD362
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AD366
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AD36E
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AD376
    msvc_and ebp, ebx                                    # 004AD37E
    and ebp, 0x1ff                                       # 004AD380
    mov bl, byte ptr [esi + 0x21]                        # 004AD386
    mov bh, byte ptr [esi + 0x35]                        # 004AD389
    mov edi, 8                                           # 004AD38C
    call _sub_4794BC                                     # 004AD391
    popal                                                # 004AD396
.L4AD397:
    msvc_mov eax, ebx                                    # 004AD397
    test ax, 0x8000                                      # 004AD399
    je .L4AD5F1                                          # 004AD39D
    pushal                                               # 004AD3A3
    push eax                                             # 004AD3A4
    mov ax, word ptr [esi + 0x30]                        # 004AD3A5
    mov cx, word ptr [esi + 0x32]                        # 004AD3A9
    movzx dx, byte ptr [esi + 0x34]                      # 004AD3AD
    shl dx, 2                                            # 004AD3B2
    movzx ebp, word ptr [esi + 0x2c]                     # 004AD3B6
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AD3BA
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AD3C2
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AD3CA
    pop ebp                                              # 004AD3D2
    and ebp, 0x1ff                                       # 004AD3D3
    mov bl, byte ptr [esi + 0x21]                        # 004AD3D9
    mov bh, byte ptr [esi + 0x35]                        # 004AD3DC
    mov edi, 0xa                                         # 004AD3DF
    push eax                                             # 004AD3E4
    call _sub_48963F                                     # 004AD3E5
    and al, byte ptr [__5220BC]                          # 004AD3EA
    test al, 2                                           # 004AD3F0
    jne .L4AD424                                         # 004AD3F2
    test al, 1                                           # 004AD3F4
    je .L4AD469                                          # 004AD3F6
    pop eax                                              # 004AD3F8
    mov edi, 0x8000000a                                  # 004AD3F9
    call _sub_48963F                                     # 004AD3FE
    mov byte ptr [__113623B], al                         # 004AD403
    popal                                                # 004AD408
    cmp byte ptr [esi + 0x5c], 0                         # 004AD409
    jne .L4AD4B1                                         # 004AD40D
    push edi                                             # 004AD413
    mov edi, dword ptr [__113611C]                       # 004AD414
    and byte ptr [edi + 0x48], 0xfe                      # 004AD41A
    pop edi                                              # 004AD41E
    msvc_jmp .L4AD76F                                    # 004AD41F
.L4AD424:
    pop eax                                              # 004AD424
    popal                                                # 004AD425
    msvc_jmp .L4AD76C                                    # 004AD426
.L4AD42B:
    popal                                                # 004AD42B
    pop eax                                              # 004AD42C
    mov edi, 8                                           # 004AD42D
    call _sub_48963F                                     # 004AD432
    pop eax                                              # 004AD437
    popal                                                # 004AD438
    msvc_jmp .L4AD76F                                    # 004AD439
.L4AD43E:
    or byte ptr [__113623B], 0x80                        # 004AD43E
    dec byte ptr [edi + 0x52]                            # 004AD445
    pop eax                                              # 004AD448
    popal                                                # 004AD449
    msvc_jmp .L4AD76F                                    # 004AD44A
.L4AD44F:
    or byte ptr [__113623B], 0x80                        # 004AD44F
    mov edi, dword ptr [__113611C]                       # 004AD456
    mov byte ptr [edi + 0x52], 0x37                      # 004AD45C
    popal                                                # 004AD460
    pop eax                                              # 004AD461
    pop eax                                              # 004AD462
    popal                                                # 004AD463
    msvc_jmp .L4AD76F                                    # 004AD464
.L4AD469:
    mov edi, dword ptr [__113611C]                       # 004AD469
    test byte ptr [edi + 0x48], 1                        # 004AD46F
    je .L4AD48C                                          # 004AD473
    and byte ptr [edi + 0x48], 0xfe                      # 004AD475
    push eax                                             # 004AD479
    mov eax, dword ptr [esp + 4]                         # 004AD47A
    pushal                                               # 004AD47E
    call _sub_4A2A39                                     # 004AD47F
    test ax, 1                                           # 004AD484
    jne .L4AD42B                                         # 004AD488
    popal                                                # 004AD48A
    pop eax                                              # 004AD48B
.L4AD48C:
    test al, 4                                           # 004AD48C
    je .L4AD4AF                                          # 004AD48E
    mov edi, dword ptr [__113611C]                       # 004AD490
    cmp byte ptr [edi + 0x52], 0                         # 004AD496
    jne .L4AD43E                                         # 004AD49A
    push eax                                             # 004AD49C
    mov eax, dword ptr [esp + 4]                         # 004AD49D
    pushal                                               # 004AD4A1
    call _sub_4A2A77                                     # 004AD4A2
    test ax, 3                                           # 004AD4A7
    je .L4AD44F                                          # 004AD4AB
    popal                                                # 004AD4AD
    pop eax                                              # 004AD4AE
.L4AD4AF:
    pop eax                                              # 004AD4AF
    popal                                                # 004AD4B0
.L4AD4B1:
    pushal                                               # 004AD4B1
    push eax                                             # 004AD4B2
    mov ax, word ptr [esi + 0x30]                        # 004AD4B3
    mov cx, word ptr [esi + 0x32]                        # 004AD4B7
    movzx dx, byte ptr [esi + 0x34]                      # 004AD4BB
    shl dx, 2                                            # 004AD4C0
    movzx ebp, word ptr [esi + 0x2c]                     # 004AD4C4
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AD4C8
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AD4D0
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AD4D8
    pop ebp                                              # 004AD4E0
    mov bl, byte ptr [esi + 0x21]                        # 004AD4E1
    mov bh, byte ptr [esi + 0x35]                        # 004AD4E4
    mov_offset esi, _sub_4AC217                          # 004AD4E7
    mov edi, 0xffffffff                                  # 004AD4EC
    call _sub_4A2E46                                     # 004AD4F1
    popal                                                # 004AD4F6
    cmp byte ptr [esi + 0x5c], 0                         # 004AD4F7
    jne .L4AD5F1                                         # 004AD4FB
    pushal                                               # 004AD501
    push eax                                             # 004AD502
    mov ax, word ptr [esi + 0x30]                        # 004AD503
    mov cx, word ptr [esi + 0x32]                        # 004AD507
    movzx dx, byte ptr [esi + 0x34]                      # 004AD50B
    shl dx, 2                                            # 004AD510
    movzx ebp, word ptr [esi + 0x2c]                     # 004AD514
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AD518
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AD520
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AD528
    pop ebp                                              # 004AD530
    and ebp, 0x1ff                                       # 004AD531
    mov bl, byte ptr [esi + 0x21]                        # 004AD537
    mov bh, byte ptr [esi + 0x35]                        # 004AD53A
    mov edi, 1                                           # 004AD53D
    call _sub_48963F                                     # 004AD542
    popal                                                # 004AD547
    pushal                                               # 004AD548
    mov ax, word ptr [esi + 0x30]                        # 004AD549
    mov cx, word ptr [esi + 0x32]                        # 004AD54D
    movzx dx, byte ptr [esi + 0x34]                      # 004AD551
    shl dx, 2                                            # 004AD556
    mov edi, 2                                           # 004AD55A
    movzx ebp, word ptr [esi + 0x36]                     # 004AD55F
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AD563
    test bp, 0x8000                                      # 004AD56B
    je .L4AD584                                          # 004AD570
    and ebp, 0x1ff                                       # 004AD572
    mov bl, byte ptr [esi + 0x21]                        # 004AD578
    mov bh, byte ptr [esi + 0x35]                        # 004AD57B
    call _sub_48963F                                     # 004AD57E
    inc edi                                              # 004AD583
.L4AD584:
    mov bp, word ptr [esi + 0x36]                        # 004AD584
    msvc_mov bx, bp                                      # 004AD588
    and bx, 0xffc0                                       # 004AD58B
.L4AD58F:
    dec bp                                               # 004AD58F
    and ebp, 0x3f                                        # 004AD591
    push ebx                                             # 004AD594
    push ebp                                             # 004AD595
    msvc_or bp, bx                                       # 004AD596
    movzx ebp, word ptr [ebp*2 + __96885C]               # 004AD599
    cmp bp, -2                                           # 004AD5A1
    je .L4AD5EE                                          # 004AD5A5
    push ebp                                             # 004AD5A7
    and ebp, 0x1ff                                       # 004AD5A8
    sub ax, word ptr [ebp*8 + __4F7B5E]                  # 004AD5AE
    sub cx, word ptr [ebp*8 + __4F7B60]                  # 004AD5B6
    sub dx, word ptr [ebp*8 + __4F7B62]                  # 004AD5BE
    pop ebp                                              # 004AD5C6
    test bp, 0x8000                                      # 004AD5C7
    je .L4AD5EA                                          # 004AD5CC
    and ebp, 0x1ff                                       # 004AD5CE
    mov bl, byte ptr [esi + 0x21]                        # 004AD5D4
    mov bh, byte ptr [esi + 0x35]                        # 004AD5D7
    call _sub_48963F                                     # 004AD5DA
    inc edi                                              # 004AD5DF
    cmp edi, 3                                           # 004AD5E0
    jbe .L4AD5EA                                         # 004AD5E3
    mov edi, 3                                           # 004AD5E5
.L4AD5EA:
    pop ebp                                              # 004AD5EA
    pop ebx                                              # 004AD5EB
    jmp .L4AD58F                                         # 004AD5EC
.L4AD5EE:
    pop ebp                                              # 004AD5EE
    pop ebx                                              # 004AD5EF
    popal                                                # 004AD5F0
.L4AD5F1:
    mov bp, word ptr [esi + 0x36]                        # 004AD5F1
    msvc_mov bx, bp                                      # 004AD5F5
    inc bp                                               # 004AD5F8
    and ebp, 0x3f                                        # 004AD5FA
    and bx, 0xffc0                                       # 004AD5FD
    msvc_or bp, bx                                       # 004AD601
    mov word ptr [ebp*2 + __96885C], ax                  # 004AD604
    cmp byte ptr [esi + 0x52], 1                         # 004AD60C
    je .L4AD766                                          # 004AD610
    movzx ebp, word ptr [esi + 0x4a]                     # 004AD616
    add ebp, dword ptr [esi + 0x46]                      # 004AD61A
    mov bl, byte ptr [ebp + __987C5C]                    # 004AD61D
    and ebx, 7                                           # 004AD623
    cmp bl, 3                                            # 004AD626
    jne .L4AD766                                         # 004AD629
    push eax                                             # 004AD62F
    mov ax, word ptr [esi + 0x30]                        # 004AD630
    mov cx, word ptr [esi + 0x32]                        # 004AD634
    movzx dx, byte ptr [esi + 0x34]                      # 004AD638
    shl dx, 2                                            # 004AD63D
    movzx edi, word ptr [esi + 0x2c]                     # 004AD641
    add ax, word ptr [edi*8 + __4F7B5E]                  # 004AD645
    add cx, word ptr [edi*8 + __4F7B60]                  # 004AD64D
    add dx, word ptr [edi*8 + __4F7B62]                  # 004AD655
    push eax                                             # 004AD65D
    push ecx                                             # 004AD65E
    push edx                                             # 004AD65F
    shr ax, 5                                            # 004AD660
    shr cx, 5                                            # 004AD664
    shr dx, 3                                            # 004AD668
    msvc_xchg ah, al                                     # 004AD66C
    msvc_xchg ch, cl                                     # 004AD66E
    shl al, 7                                            # 004AD670
    shl cl, 7                                            # 004AD673
    msvc_or cl, dl                                       # 004AD676
    movzx eax, ax                                        # 004AD678
    shl ecx, 0x10                                        # 004AD67B
    msvc_or eax, ecx                                     # 004AD67E
    or al, 3                                             # 004AD680
    mov cx, word ptr [esp + 0xc]                         # 004AD682
    and cx, 0x1ff                                        # 004AD687
    cmp eax, dword ptr [ebp + __987C5C]                  # 004AD68C
    jne .L4AD6A1                                         # 004AD692
    cmp cx, word ptr [ebp + __987C5C+4]                  # 004AD694
    je .L4AD731                                          # 004AD69B
.L4AD6A1:
    pop edx                                              # 004AD6A1
    pop ecx                                              # 004AD6A2
    pop eax                                              # 004AD6A3
    mov ebx, dword ptr [esp]                             # 004AD6A4
    and ebx, 0x1ff                                       # 004AD6A7
    add ax, word ptr [ebx*8 + __4F7B5E]                  # 004AD6AD
    add cx, word ptr [ebx*8 + __4F7B60]                  # 004AD6B5
    add dx, word ptr [ebx*8 + __4F7B62]                  # 004AD6BD
    movzx ebx, byte ptr [ebx*8 + __4F7B5D]               # 004AD6C5
    cmp bl, 0xc                                          # 004AD6CD
    jae .L4AD6E2                                         # 004AD6D0
    sub ax, word ptr [ebx*4 + __503C6C]                  # 004AD6D2
    sub cx, word ptr [ebx*4 + __503C6E]                  # 004AD6DA
.L4AD6E2:
    movzx ebx, byte ptr [ebx + __503CAC]                 # 004AD6E2
    shr ax, 5                                            # 004AD6E9
    shr cx, 5                                            # 004AD6ED
    shr dx, 3                                            # 004AD6F1
    msvc_xchg ah, al                                     # 004AD6F5
    msvc_xchg ch, cl                                     # 004AD6F7
    shl al, 7                                            # 004AD6F9
    shl cl, 7                                            # 004AD6FC
    msvc_or cl, dl                                       # 004AD6FF
    movzx eax, ax                                        # 004AD701
    shl ecx, 0x10                                        # 004AD704
    msvc_or eax, ecx                                     # 004AD707
    or al, 3                                             # 004AD709
    mov cx, word ptr [esp]                               # 004AD70B
    and cx, 0x1fc                                        # 004AD70F
    xor cx, 4                                            # 004AD714
    and bl, 3                                            # 004AD718
    msvc_or cl, bl                                       # 004AD71B
    cmp eax, dword ptr [ebp + __987C5C]                  # 004AD71D
    jne .L4AD72E                                         # 004AD723
    cmp cx, word ptr [ebp + __987C5C+4]                  # 004AD725
    je .L4AD734                                          # 004AD72C
.L4AD72E:
    pop eax                                              # 004AD72E
    jmp .L4AD766                                         # 004AD72F
.L4AD731:
    pop edx                                              # 004AD731
    pop ecx                                              # 004AD732
    pop eax                                              # 004AD733
.L4AD734:
    mov ebp, dword ptr [esi + 0x46]                      # 004AD734
    movzx ecx, word ptr [esi + 0x4a]                     # 004AD737
    mov al, byte ptr [ecx + ebp + __987C5C]              # 004AD73B
    and eax, 7                                           # 004AD742
    add ecx, dword ptr [eax*4 + __4FE070]                # 004AD745
    cmp byte ptr [ecx + ebp + __987C5C], 0               # 004AD74C
    jne .L4AD758                                         # 004AD754
    msvc_xor ecx, ecx                                    # 004AD756
.L4AD758:
    mov word ptr [esi + 0x4a], cx                        # 004AD758
    mov bx, word ptr [esi + 0xa]                         # 004AD75C
    call _sub_4B93A5                                     # 004AD760
    pop eax                                              # 004AD765
.L4AD766:
    msvc_xor al, al                                      # 004AD766
    ret                                                  # 004AD768
.L4AD769:
    mov al, 1                                            # 004AD769
    ret                                                  # 004AD76B
.L4AD76C:
    mov al, 2                                            # 004AD76C
    ret                                                  # 004AD76E
.L4AD76F:
    mov al, 3                                            # 004AD76F
    mov ah, byte ptr [__113623B]                         # 004AD771
    ret                                                  # 004AD777

    .global _sub_4AD778
_sub_4AD778:
    cmp byte ptr [esi + 0x42], 1                         # 004AD778
    je _sub_47C5B0                                       # 004AD77C
    push esi                                             # 004AD782
    or byte ptr [esi + 0x38], 4                          # 004AD783
    movzx esi, word ptr [esi + 0x3a]                     # 004AD787
    shl esi, 7                                           # 004AD78B
    add_offset esi, _things                              # 004AD78E
    or byte ptr [esi + 0x38], 4                          # 004AD794
    movzx esi, word ptr [esi + 0x3a]                     # 004AD798
    shl esi, 7                                           # 004AD79C
    add_offset esi, _things                              # 004AD79F
    mov ax, word ptr [esi + 0x30]                        # 004AD7A5
    mov cx, word ptr [esi + 0x32]                        # 004AD7A9
    movzx dx, byte ptr [esi + 0x34]                      # 004AD7AD
    shl dx, 2                                            # 004AD7B2
    mov bl, byte ptr [esi + 0x21]                        # 004AD7B6
    mov bh, byte ptr [esi + 0x35]                        # 004AD7B9
    movzx ebp, word ptr [esi + 0x36]                     # 004AD7BC
    push ebp                                             # 004AD7C0
.L4AD7C1:
    pushal                                               # 004AD7C1
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AD7C2
    and ebp, 0x81ff                                      # 004AD7CA
    call _sub_4A2AD7                                     # 004AD7D0
    popal                                                # 004AD7D5
    cmp ebp, dword ptr [esp]                             # 004AD7D6
    je .L4AD7FE                                          # 004AD7D9
    test word ptr [ebp*2 + __96885C], 0x8000             # 004AD7DB
    je .L4AD7FE                                          # 004AD7E5
    push ebp                                             # 004AD7E7
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AD7E8
    and ebp, 0x1ff                                       # 004AD7F0
    msvc_xor edi, edi                                    # 004AD7F6
    call _sub_48963F                                     # 004AD7F8
    pop ebp                                              # 004AD7FD
.L4AD7FE:
    cmp ebp, dword ptr [esp]                             # 004AD7FE
    je .L4AD81D                                          # 004AD801
    push ebp                                             # 004AD803
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AD804
    and ebp, 0x1ff                                       # 004AD80C
    mov edi, 9                                           # 004AD812
    call _sub_4794BC                                     # 004AD817
    pop ebp                                              # 004AD81C
.L4AD81D:
    push ebp                                             # 004AD81D
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AD81E
    and ebp, 0x1ff                                       # 004AD826
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AD82C
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AD834
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AD83C
    pop ebp                                              # 004AD844
    cmp ebp, dword ptr [esp]                             # 004AD845
    je .L4AD854                                          # 004AD848
    mov word ptr [ebp*2 + __96885C], 0xfffe              # 004AD84A
.L4AD854:
    msvc_mov edi, ebp                                    # 004AD854
    inc ebp                                              # 004AD856
    and ebp, 0x3f                                        # 004AD857
    and edi, 0xffffffc0                                  # 004AD85A
    msvc_or ebp, edi                                     # 004AD85D
    cmp word ptr [ebp*2 + __96885C], -2                  # 004AD85F
    jne .L4AD7C1                                         # 004AD868
    pop ebp                                              # 004AD86E
    pop esi                                              # 004AD86F
    movzx edi, word ptr [esi + 0x3a]                     # 004AD870
    shl edi, 7                                           # 004AD874
    add_offset edi, _things                              # 004AD877
    movzx edi, word ptr [edi + 0x3a]                     # 004AD87D
    shl edi, 7                                           # 004AD881
    add_offset edi, _things                              # 004AD884
    mov ax, word ptr [edi + 0x30]                        # 004AD88A
    mov cx, word ptr [edi + 0x32]                        # 004AD88E
    mov dl, byte ptr [edi + 0x34]                        # 004AD892
    mov word ptr [esi + 0x30], ax                        # 004AD895
    mov word ptr [esi + 0x32], cx                        # 004AD899
    mov byte ptr [esi + 0x34], dl                        # 004AD89D
    mov bp, word ptr [edi + 0x36]                        # 004AD8A0
    mov ebx, dword ptr [edi + 0x28]                      # 004AD8A4
    mov word ptr [esi + 0x36], bp                        # 004AD8A7
    mov dword ptr [esi + 0x3c], 0                        # 004AD8AB
    mov dword ptr [esi + 0x28], ebx                      # 004AD8B2
    and byte ptr [esi + 0x38], 0xfb                      # 004AD8B5
    mov ax, word ptr [edi + 0x2e]                        # 004AD8B9
    mov word ptr [esi + 0x2e], ax                        # 004AD8BD
    mov ax, word ptr [edi + 0x2c]                        # 004AD8C1
    mov word ptr [esi + 0x2c], ax                        # 004AD8C5
    mov ax, word ptr [edi + 0xe]                         # 004AD8C9
    mov cx, word ptr [edi + 0x10]                        # 004AD8CD
    mov dx, word ptr [edi + 0x12]                        # 004AD8D1
    call _sub_46FC83                                     # 004AD8D5
    push esi                                             # 004AD8DA
    movzx esi, word ptr [esi + 0x3a]                     # 004AD8DB
    shl esi, 7                                           # 004AD8DF
    add_offset esi, _things                              # 004AD8E2
    mov ax, word ptr [edi + 0x30]                        # 004AD8E8
    mov cx, word ptr [edi + 0x32]                        # 004AD8EC
    mov dl, byte ptr [edi + 0x34]                        # 004AD8F0
    mov word ptr [esi + 0x30], ax                        # 004AD8F3
    mov word ptr [esi + 0x32], cx                        # 004AD8F7
    mov byte ptr [esi + 0x34], dl                        # 004AD8FB
    mov bp, word ptr [edi + 0x36]                        # 004AD8FE
    mov ebx, dword ptr [edi + 0x28]                      # 004AD902
    mov word ptr [esi + 0x36], bp                        # 004AD905
    mov dword ptr [esi + 0x3c], 0                        # 004AD909
    mov dword ptr [esi + 0x28], ebx                      # 004AD910
    and byte ptr [esi + 0x38], 0xfb                      # 004AD913
    mov ax, word ptr [edi + 0x2e]                        # 004AD917
    mov word ptr [esi + 0x2e], ax                        # 004AD91B
    mov ax, word ptr [edi + 0x2c]                        # 004AD91F
    mov word ptr [esi + 0x2c], ax                        # 004AD923
    mov ax, word ptr [edi + 0xe]                         # 004AD927
    mov cx, word ptr [edi + 0x10]                        # 004AD92B
    mov dx, word ptr [edi + 0x12]                        # 004AD92F
    call _sub_46FC83                                     # 004AD933
    pop esi                                              # 004AD938
    ret                                                  # 004AD939

    .global _sub_4AD93A
_sub_4AD93A:
    cmp byte ptr [esi + 0x42], 1                         # 004AD93A
    je _sub_47C722                                       # 004AD93E
    push esi                                             # 004AD944
    or byte ptr [esi + 0x38], 4                          # 004AD945
    movzx esi, word ptr [esi + 0x3a]                     # 004AD949
    shl esi, 7                                           # 004AD94D
    add_offset esi, _things                              # 004AD950
    mov ax, word ptr [esi + 0x30]                        # 004AD956
    mov cx, word ptr [esi + 0x32]                        # 004AD95A
    movzx dx, byte ptr [esi + 0x34]                      # 004AD95E
    shl dx, 2                                            # 004AD963
    mov bl, byte ptr [esi + 0x21]                        # 004AD967
    mov bh, byte ptr [esi + 0x35]                        # 004AD96A
    movzx ebp, word ptr [esi + 0x36]                     # 004AD96D
    push ebp                                             # 004AD971
    mov byte ptr [__1136239], 0                          # 004AD972
.L4AD979:
    test word ptr [ebp*2 + __96885C], 0x8000             # 004AD979
    jne .L4AD98E                                         # 004AD983
    test byte ptr [__1136239], 1                         # 004AD985
    jne .L4AD9AA                                         # 004AD98C
.L4AD98E:
    pushal                                               # 004AD98E
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AD98F
    and ebp, 0x81ff                                      # 004AD997
    call _sub_4A2AD7                                     # 004AD99D
    popal                                                # 004AD9A2
    or byte ptr [__1136239], 1                           # 004AD9A3
.L4AD9AA:
    cmp ebp, dword ptr [esp]                             # 004AD9AA
    je .L4AD9D9                                          # 004AD9AD
    test word ptr [ebp*2 + __96885C], 0x8000             # 004AD9AF
    je .L4AD9D9                                          # 004AD9B9
    push ebp                                             # 004AD9BB
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AD9BC
    and ebp, 0x1ff                                       # 004AD9C4
    msvc_xor edi, edi                                    # 004AD9CA
    call _sub_48963F                                     # 004AD9CC
    pop ebp                                              # 004AD9D1
    and byte ptr [__1136239], 0xfe                       # 004AD9D2
.L4AD9D9:
    cmp ebp, dword ptr [esp]                             # 004AD9D9
    je .L4AD9F8                                          # 004AD9DC
    push ebp                                             # 004AD9DE
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AD9DF
    and ebp, 0x1ff                                       # 004AD9E7
    mov edi, 9                                           # 004AD9ED
    call _sub_4794BC                                     # 004AD9F2
    pop ebp                                              # 004AD9F7
.L4AD9F8:
    push ebp                                             # 004AD9F8
    movzx ebp, word ptr [ebp*2 + __96885C]               # 004AD9F9
    and ebp, 0x1ff                                       # 004ADA01
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004ADA07
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004ADA0F
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004ADA17
    pop ebp                                              # 004ADA1F
    cmp ebp, dword ptr [esp]                             # 004ADA20
    je .L4ADA2F                                          # 004ADA23
    mov word ptr [ebp*2 + __96885C], 0xfffe              # 004ADA25
.L4ADA2F:
    msvc_mov edi, ebp                                    # 004ADA2F
    inc ebp                                              # 004ADA31
    and ebp, 0x3f                                        # 004ADA32
    and edi, 0xffffffc0                                  # 004ADA35
    msvc_or ebp, edi                                     # 004ADA38
    cmp word ptr [ebp*2 + __96885C], -2                  # 004ADA3A
    jne .L4AD979                                         # 004ADA43
    pop ebp                                              # 004ADA49
    pop esi                                              # 004ADA4A
    movzx edi, word ptr [esi + 0x3a]                     # 004ADA4B
    shl edi, 7                                           # 004ADA4F
    add_offset edi, _things                              # 004ADA52
    mov ax, word ptr [edi + 0x30]                        # 004ADA58
    mov cx, word ptr [edi + 0x32]                        # 004ADA5C
    mov dl, byte ptr [edi + 0x34]                        # 004ADA60
    mov word ptr [esi + 0x30], ax                        # 004ADA63
    mov word ptr [esi + 0x32], cx                        # 004ADA67
    mov byte ptr [esi + 0x34], dl                        # 004ADA6B
    mov bp, word ptr [edi + 0x36]                        # 004ADA6E
    mov ebx, dword ptr [edi + 0x28]                      # 004ADA72
    mov word ptr [esi + 0x36], bp                        # 004ADA75
    mov eax, dword ptr [edi + 0x3c]                      # 004ADA79
    mov dword ptr [esi + 0x3c], eax                      # 004ADA7C
    mov dword ptr [esi + 0x28], ebx                      # 004ADA7F
    and byte ptr [esi + 0x38], 0xfb                      # 004ADA82
    mov ax, word ptr [edi + 0x2e]                        # 004ADA86
    mov word ptr [esi + 0x2e], ax                        # 004ADA8A
    mov ax, word ptr [edi + 0x2c]                        # 004ADA8E
    mov word ptr [esi + 0x2c], ax                        # 004ADA92
    mov ax, word ptr [edi + 0xe]                         # 004ADA96
    mov cx, word ptr [edi + 0x10]                        # 004ADA9A
    mov dx, word ptr [edi + 0x12]                        # 004ADA9E
    call _sub_46FC83                                     # 004ADAA2
    ret                                                  # 004ADAA7

    .global _sub_4ADAA8
_sub_4ADAA8:
    mov byte ptr [__9C68EA], 4                           # 004ADAA8
    test bl, 1                                           # 004ADAAF
    jne .L4ADB27                                         # 004ADAB2
    movzx edx, dx                                        # 004ADAB4
    shl edx, 7                                           # 004ADAB7
    add_offset edx, _things                              # 004ADABA
    mov al, byte ptr [edx + 0x21]                        # 004ADAC0
    mov esi, 0xffffffff                                  # 004ADAC3
    call _sub_431E6A                                     # 004ADAC8
    jb .L4ADB21                                          # 004ADACD
    movzx esi, word ptr [edx + 0x26]                     # 004ADACF
    shl esi, 7                                           # 004ADAD3
    add_offset esi, _things                              # 004ADAD6
    call _sub_4B0BDD                                     # 004ADADC
    jb .L4ADB21                                          # 004ADAE1
    movzx esi, word ptr [edx + 0x26]                     # 004ADAE3
    shl esi, 7                                           # 004ADAE7
    add_offset esi, _things                              # 004ADAEA
    cmp word ptr [esi + 0x30], -1                        # 004ADAF0
    je .L4ADB18                                          # 004ADAF5
    mov ax, word ptr [edi + 0xe]                         # 004ADAF7
    mov word ptr [__9C68E0], ax                          # 004ADAFB
    mov ax, word ptr [edi + 0x10]                        # 004ADB01
    mov word ptr [__9C68E2], ax                          # 004ADB05
    mov ax, word ptr [edi + 0x12]                        # 004ADB0B
    mov word ptr [__9C68E4], ax                          # 004ADB0F
    msvc_xor ebx, ebx                                    # 004ADB15
    ret                                                  # 004ADB17
.L4ADB18:
    mov word ptr [__9C68E6], 0                           # 004ADB18
.L4ADB21:
    mov ebx, 0x80000000                                  # 004ADB21
    ret                                                  # 004ADB26
.L4ADB27:
    movzx esi, dx                                        # 004ADB27
    shl esi, 7                                           # 004ADB2A
    add_offset esi, _things                              # 004ADB2D
    mov al, 1                                            # 004ADB33
    xchg byte ptr [esi + 0x52], al                       # 004ADB35
    push eax                                             # 004ADB38
    msvc_xor eax, eax                                    # 004ADB39
    call _sub_4ADB47                                     # 004ADB3B
    pop eax                                              # 004ADB40
    mov byte ptr [esi + 0x52], al                        # 004ADB41
    msvc_xor ebx, ebx                                    # 004ADB44
    ret                                                  # 004ADB46

    .global _sub_4ADB47
_sub_4ADB47:
    DebugStamp 0x27041151
    mov dword ptr [__1136142], eax                       # 004ADB47
    push esi                                             # 004ADB4C
.L4ADB4D:
    call _sub_4CBB01                                     # 004ADB4D
    mov si, word ptr [esi + 0x3a]                        # 004ADB52
    cmp si, -1                                           # 004ADB56
    je .L4ADB6A                                          # 004ADB5A
    movzx esi, si                                        # 004ADB5C
    shl esi, 7                                           # 004ADB5F
    add_offset esi, _things                              # 004ADB62
    jmp .L4ADB4D                                         # 004ADB68
.L4ADB6A:
    pop esi                                              # 004ADB6A
    call _sub_4AD778                                     # 004ADB6B
    cmp byte ptr [esi + 0x5d], 4                         # 004ADB70
    jne .L4ADB7A                                         # 004ADB74
    mov byte ptr [esi + 0x5d], 2                         # 004ADB76
.L4ADB7A:
    cmp byte ptr [esi + 0x42], 1                         # 004ADB7A
    je .L4ADC9D                                          # 004ADB7E
    push esi                                             # 004ADB84
.L4ADB85:
    movzx esi, word ptr [esi + 0x3a]                     # 004ADB85
    shl esi, 7                                           # 004ADB89
    add_offset esi, _things                              # 004ADB8C
    cmp byte ptr [esi + 1], 6                            # 004ADB92
    jne .L4ADB85                                         # 004ADB96
    movzx ebp, word ptr [esi + 0x36]                     # 004ADB98
    mov ax, word ptr [esi + 0x30]                        # 004ADB9C
    mov cx, word ptr [esi + 0x32]                        # 004ADBA0
    movzx dx, byte ptr [esi + 0x34]                      # 004ADBA4
    shl dx, 2                                            # 004ADBA9
    mov bl, byte ptr [esi + 0x21]                        # 004ADBAD
    mov bh, byte ptr [esi + 0x35]                        # 004ADBB0
.L4ADBB3:
    push ebp                                             # 004ADBB3
    movzx ebp, word ptr [ebp*2 + __96885C]               # 004ADBB4
    test ebp, 0x8000                                     # 004ADBBC
    je .L4ADBD1                                          # 004ADBC2
    and ebp, 0x1ff                                       # 004ADBC4
    msvc_xor edi, edi                                    # 004ADBCA
    call _sub_48963F                                     # 004ADBCC
.L4ADBD1:
    and ebp, 0x1ff                                       # 004ADBD1
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004ADBD7
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004ADBDF
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004ADBE7
    pop ebp                                              # 004ADBEF
    msvc_mov edi, ebp                                    # 004ADBF0
    inc ebp                                              # 004ADBF2
    and ebp, 0x3f                                        # 004ADBF3
    and edi, 0xffffffc0                                  # 004ADBF6
    msvc_or ebp, edi                                     # 004ADBF9
    cmp word ptr [ebp*2 + __96885C], -2                  # 004ADBFB
    jne .L4ADBB3                                         # 004ADC04
    pop esi                                              # 004ADC06
    push esi                                             # 004ADC07
    movzx esi, word ptr [esi + 0x3a]                     # 004ADC08
    shl esi, 7                                           # 004ADC0C
    add_offset esi, _things                              # 004ADC0F
    movzx esi, word ptr [esi + 0x3a]                     # 004ADC15
    shl esi, 7                                           # 004ADC19
    add_offset esi, _things                              # 004ADC1C
    movzx ebp, word ptr [esi + 0x36]                     # 004ADC22
.L4ADC26:
    movzx esi, word ptr [esi + 0x3a]                     # 004ADC26
    shl esi, 7                                           # 004ADC2A
    add_offset esi, _things                              # 004ADC2D
    cmp byte ptr [esi + 1], 6                            # 004ADC33
    jne .L4ADC26                                         # 004ADC37
    mov cx, word ptr [esi + 0x36]                        # 004ADC39
    and cx, 0x3f                                         # 004ADC3D
    msvc_mov ebx, ebp                                    # 004ADC41
    and ebp, 0xffffffc0                                  # 004ADC43
    shl ebp, 1                                           # 004ADC46
    add_offset ebp, __96885C                             # 004ADC48
    mov_offset edi, __1136176                            # 004ADC4E
.L4ADC53:
    and ebx, 0x3f                                        # 004ADC53
    mov ax, word ptr [ebp + ebx*2]                       # 004ADC56
    mov word ptr [edi], ax                               # 004ADC5B
    add edi, 2                                           # 004ADC5E
    msvc_cmp bx, cx                                      # 004ADC61
    je .L4ADC69                                          # 004ADC64
    dec ebx                                              # 004ADC66
    jmp .L4ADC53                                         # 004ADC67
.L4ADC69:
    msvc_xor ebx, ebx                                    # 004ADC69
    mov_offset ecx, __1136176                            # 004ADC6B
.L4ADC70:
    mov ax, word ptr [ecx]                               # 004ADC70
    xor ax, 4                                            # 004ADC73
    and ax, 0xbfff                                       # 004ADC77
    mov word ptr [ebp + ebx*2], ax                       # 004ADC7B
    inc ebx                                              # 004ADC80
    add ecx, 2                                           # 004ADC81
    msvc_cmp ecx, edi                                    # 004ADC84
    jb .L4ADC70                                          # 004ADC86
.L4ADC88:
    cmp ebx, 0x40                                        # 004ADC88
    jae .L4ADC97                                         # 004ADC8B
    mov word ptr [ebp + ebx*2], 0xfffe                   # 004ADC8D
    inc ebx                                              # 004ADC94
    jmp .L4ADC88                                         # 004ADC95
.L4ADC97:
    pop esi                                              # 004ADC97
    msvc_jmp .L4ADDBE                                    # 004ADC98
.L4ADC9D:
    push esi                                             # 004ADC9D
.L4ADC9E:
    movzx esi, word ptr [esi + 0x3a]                     # 004ADC9E
    shl esi, 7                                           # 004ADCA2
    add_offset esi, _things                              # 004ADCA5
    cmp byte ptr [esi + 1], 6                            # 004ADCAB
    jne .L4ADC9E                                         # 004ADCAF
    movzx ebp, word ptr [esi + 0x36]                     # 004ADCB1
    mov ax, word ptr [esi + 0x30]                        # 004ADCB5
    mov cx, word ptr [esi + 0x32]                        # 004ADCB9
    movzx dx, byte ptr [esi + 0x34]                      # 004ADCBD
    shl dx, 2                                            # 004ADCC2
.L4ADCC6:
    push ebp                                             # 004ADCC6
    mov bp, word ptr [ebp*2 + __96885C]                  # 004ADCC7
    and ebp, 0x1ff                                       # 004ADCCF
    push eax                                             # 004ADCD5
    push ecx                                             # 004ADCD6
    push edx                                             # 004ADCD7
    push ebp                                             # 004ADCD8
    shr dx, 2                                            # 004ADCD9
    call _sub_47D959                                     # 004ADCDD
    pop ebp                                              # 004ADCE2
    pop edx                                              # 004ADCE3
    pop ecx                                              # 004ADCE4
    pop eax                                              # 004ADCE5
    and ebp, 0x7f                                        # 004ADCE6
    add ax, word ptr [ebp*8 + __4F6F8E]                  # 004ADCE9
    add cx, word ptr [ebp*8 + __4F6F90]                  # 004ADCF1
    add dx, word ptr [ebp*8 + __4F6F92]                  # 004ADCF9
    pop ebp                                              # 004ADD01
    msvc_mov edi, ebp                                    # 004ADD02
    inc ebp                                              # 004ADD04
    and ebp, 0x3f                                        # 004ADD05
    and edi, 0xffffffc0                                  # 004ADD08
    msvc_or ebp, edi                                     # 004ADD0B
    cmp word ptr [ebp*2 + __96885C], -2                  # 004ADD0D
    jne .L4ADCC6                                         # 004ADD16
    pop esi                                              # 004ADD18
    push esi                                             # 004ADD19
    movzx esi, word ptr [esi + 0x3a]                     # 004ADD1A
    shl esi, 7                                           # 004ADD1E
    add_offset esi, _things                              # 004ADD21
    movzx esi, word ptr [esi + 0x3a]                     # 004ADD27
    shl esi, 7                                           # 004ADD2B
    add_offset esi, _things                              # 004ADD2E
    movzx ebp, word ptr [esi + 0x36]                     # 004ADD34
.L4ADD38:
    movzx esi, word ptr [esi + 0x3a]                     # 004ADD38
    shl esi, 7                                           # 004ADD3C
    add_offset esi, _things                              # 004ADD3F
    cmp byte ptr [esi + 1], 6                            # 004ADD45
    jne .L4ADD38                                         # 004ADD49
    mov cx, word ptr [esi + 0x36]                        # 004ADD4B
    and cx, 0x3f                                         # 004ADD4F
    msvc_mov ebx, ebp                                    # 004ADD53
    and ebp, 0xffffffc0                                  # 004ADD55
    shl ebp, 1                                           # 004ADD58
    add_offset ebp, __96885C                             # 004ADD5A
    mov_offset edi, __1136176                            # 004ADD60
.L4ADD65:
    and ebx, 0x3f                                        # 004ADD65
    mov ax, word ptr [ebp + ebx*2]                       # 004ADD68
    mov word ptr [edi], ax                               # 004ADD6D
    add edi, 2                                           # 004ADD70
    msvc_cmp bx, cx                                      # 004ADD73
    je .L4ADD7B                                          # 004ADD76
    dec ebx                                              # 004ADD78
    jmp .L4ADD65                                         # 004ADD79
.L4ADD7B:
    msvc_xor ebx, ebx                                    # 004ADD7B
    mov_offset ecx, __1136176                            # 004ADD7D
.L4ADD82:
    mov ax, word ptr [ecx]                               # 004ADD82
    xor ax, 0x84                                         # 004ADD85
    test ax, 0x100                                       # 004ADD89
    je .L4ADD9D                                          # 004ADD8D
    xor ax, 0x80                                         # 004ADD8F
    test ax, 0x80                                        # 004ADD93
    jne .L4ADD9D                                         # 004ADD97
    xor ax, 0x100                                        # 004ADD99
.L4ADD9D:
    and ax, 0xbfff                                       # 004ADD9D
    mov word ptr [ebp + ebx*2], ax                       # 004ADDA1
    inc ebx                                              # 004ADDA6
    add ecx, 2                                           # 004ADDA7
    msvc_cmp ecx, edi                                    # 004ADDAA
    jb .L4ADD82                                          # 004ADDAC
.L4ADDAE:
    cmp ebx, 0x40                                        # 004ADDAE
    jae .L4ADDBD                                         # 004ADDB1
    mov word ptr [ebp + ebx*2], 0xfffe                   # 004ADDB3
    inc ebx                                              # 004ADDBA
    jmp .L4ADDAE                                         # 004ADDBB
.L4ADDBD:
    pop esi                                              # 004ADDBD
.L4ADDBE:
    test dword ptr [__1136142], 1                        # 004ADDBE
    jne .L4ADE8A                                         # 004ADDC8
    test word ptr [esi + 0xc], 0x40                      # 004ADDCE
    je .L4ADDDE                                          # 004ADDD4
    test word ptr [esi + 0xc], 0x80                      # 004ADDD6
    jne .L4ADE36                                         # 004ADDDC
.L4ADDDE:
    movzx edi, word ptr [esi + 0x3a]                     # 004ADDDE
    shl edi, 7                                           # 004ADDE2
    add_offset edi, _things                              # 004ADDE5
.L4ADDEB:
    msvc_mov ebx, edi                                    # 004ADDEB
    movzx edi, word ptr [edi + 0x3a]                     # 004ADDED
    shl edi, 7                                           # 004ADDF1
    add_offset edi, _things                              # 004ADDF4
    cmp byte ptr [edi + 1], 6                            # 004ADDFA
    jne .L4ADDEB                                         # 004ADDFE
    movzx ebp, word ptr [ebx + 0x40]                     # 004ADE00
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004ADE04
    test word ptr [ebp + 0xe0], 0x100                    # 004ADE0B
    jne .L4ADE8A                                         # 004ADE14
    test word ptr [ebp + 0xe0], 2                        # 004ADE16
    jne .L4ADE36                                         # 004ADE1F
    cmp word ptr [ebp + 0xd8], 0                         # 004ADE21
    je .L4ADE8A                                          # 004ADE29
    test word ptr [ebp + 0xe0], 0x20                     # 004ADE2B
    jne .L4ADE8A                                         # 004ADE34
.L4ADE36:
    push esi                                             # 004ADE36
    msvc_mov edi, esi                                    # 004ADE37
.L4ADE39:
    movzx edi, word ptr [edi + 0x3a]                     # 004ADE39
    shl edi, 7                                           # 004ADE3D
    add_offset edi, _things                              # 004ADE40
    cmp byte ptr [edi + 1], 6                            # 004ADE46
    jne .L4ADE39                                         # 004ADE4A
    movzx esi, word ptr [esi + 0x3a]                     # 004ADE4C
    shl esi, 7                                           # 004ADE50
    add_offset esi, _things                              # 004ADE53
    movzx ebp, word ptr [esi + 0x3a]                     # 004ADE59
    shl ebp, 7                                           # 004ADE5D
    add_offset ebp, _things                              # 004ADE60
.L4ADE66:
    movzx esi, word ptr [ebp + 0x3a]                     # 004ADE66
    shl esi, 7                                           # 004ADE6A
    add_offset esi, _things                              # 004ADE6D
    msvc_cmp edi, esi                                    # 004ADE73
    je .L4ADE89                                          # 004ADE75
    push ebp                                             # 004ADE77
    push edi                                             # 004ADE78
    call _sub_4AFFF3                                     # 004ADE79
    pop edi                                              # 004ADE7E
    call _sub_4AF4D6                                     # 004ADE7F
    msvc_mov edi, esi                                    # 004ADE84
    pop ebp                                              # 004ADE86
    jmp .L4ADE66                                         # 004ADE87
.L4ADE89:
    pop esi                                              # 004ADE89
.L4ADE8A:
    call _sub_4AE2AB                                     # 004ADE8A
    cmp byte ptr [esi + 0x42], 1                         # 004ADE8F
    je .L4ADF1E                                          # 004ADE93
    push esi                                             # 004ADE99
    movzx esi, word ptr [esi + 0x3a]                     # 004ADE9A
    shl esi, 7                                           # 004ADE9E
    add_offset esi, _things                              # 004ADEA1
    movzx esi, word ptr [esi + 0x3a]                     # 004ADEA7
    shl esi, 7                                           # 004ADEAB
    add_offset esi, _things                              # 004ADEAE
    movzx ebx, word ptr [esi + 0x2c]                     # 004ADEB4
    mov ecx, dword ptr [ebx*4 + __4D9724]                # 004ADEB8
    mov bp, word ptr [ecx - 2]                           # 004ADEBF
    dec bp                                               # 004ADEC3
    sub bp, word ptr [esi + 0x2e]                        # 004ADEC5
    mov ax, word ptr [esi + 0x30]                        # 004ADEC9
    mov cx, word ptr [esi + 0x32]                        # 004ADECD
    movzx dx, byte ptr [esi + 0x34]                      # 004ADED1
    shl dx, 2                                            # 004ADED6
    add ax, word ptr [ebx*8 + __4F7B5E]                  # 004ADEDA
    add cx, word ptr [ebx*8 + __4F7B60]                  # 004ADEE2
    movzx edi, byte ptr [ebx*8 + __4F7B5D]               # 004ADEEA
    cmp di, 0xc                                          # 004ADEF2
    jae .L4ADF08                                         # 004ADEF6
    sub ax, word ptr [edi*4 + __503C6C]                  # 004ADEF8
    sub cx, word ptr [edi*4 + __503C6E]                  # 004ADF00
.L4ADF08:
    add dx, word ptr [ebx*8 + __4F7B62]                  # 004ADF08
    xor bx, 4                                            # 004ADF10
    shr dx, 2                                            # 004ADF14
    pop esi                                              # 004ADF18
    msvc_jmp .L4ADFBC                                    # 004ADF19
.L4ADF1E:
    push esi                                             # 004ADF1E
    movzx esi, word ptr [esi + 0x3a]                     # 004ADF1F
    shl esi, 7                                           # 004ADF23
    add_offset esi, _things                              # 004ADF26
    movzx esi, word ptr [esi + 0x3a]                     # 004ADF2C
    shl esi, 7                                           # 004ADF30
    add_offset esi, _things                              # 004ADF33
    movzx ebx, word ptr [esi + 0x2c]                     # 004ADF39
    mov ecx, dword ptr [ebx*4 + __5253B0]                # 004ADF3D
    push ebx                                             # 004ADF44
    mov bp, word ptr [ecx - 2]                           # 004ADF45
    and ebx, 0x7f                                        # 004ADF49
    dec bp                                               # 004ADF4C
    sub bp, word ptr [esi + 0x2e]                        # 004ADF4E
    mov ax, word ptr [esi + 0x30]                        # 004ADF52
    mov cx, word ptr [esi + 0x32]                        # 004ADF56
    movzx dx, byte ptr [esi + 0x34]                      # 004ADF5A
    shl dx, 2                                            # 004ADF5F
    add ax, word ptr [ebx*8 + __4F6F8E]                  # 004ADF63
    add cx, word ptr [ebx*8 + __4F6F90]                  # 004ADF6B
    movzx edi, byte ptr [ebx*8 + __4F6F8D]               # 004ADF73
    cmp di, 0xc                                          # 004ADF7B
    jae .L4ADF91                                         # 004ADF7F
    sub ax, word ptr [edi*4 + __503C6C]                  # 004ADF81
    sub cx, word ptr [edi*4 + __503C6E]                  # 004ADF89
.L4ADF91:
    add dx, word ptr [ebx*8 + __4F6F92]                  # 004ADF91
    pop ebx                                              # 004ADF99
    shr dx, 2                                            # 004ADF9A
    xor bx, 0x84                                         # 004ADF9E
    test bx, 0x100                                       # 004ADFA3
    je .L4ADFBB                                          # 004ADFA8
    xor bx, 0x80                                         # 004ADFAA
    test bx, 0x80                                        # 004ADFAF
    jne .L4ADFBB                                         # 004ADFB4
    xor bx, 0x100                                        # 004ADFB6
.L4ADFBB:
    pop esi                                              # 004ADFBB
.L4ADFBC:
    push esi                                             # 004ADFBC
.L4ADFBD:
    and word ptr [esi + 0x36], 0xffc0                    # 004ADFBD
    mov word ptr [esi + 0x2c], bx                        # 004ADFC2
    mov word ptr [esi + 0x2e], bp                        # 004ADFC6
    mov word ptr [esi + 0x30], ax                        # 004ADFCA
    mov word ptr [esi + 0x32], cx                        # 004ADFCE
    mov byte ptr [esi + 0x34], dl                        # 004ADFD2
    mov si, word ptr [esi + 0x3a]                        # 004ADFD5
    cmp si, -1                                           # 004ADFD9
    je .L4ADFED                                          # 004ADFDD
    movzx esi, si                                        # 004ADFDF
    shl esi, 7                                           # 004ADFE2
    add_offset esi, _things                              # 004ADFE5
    jmp .L4ADFBD                                         # 004ADFEB
.L4ADFED:
    pop esi                                              # 004ADFED
    cmp byte ptr [esi + 0x42], 1                         # 004ADFEE
    jne .L4AE00A                                         # 004ADFF2
    pushal                                               # 004ADFF4
    msvc_mov bp, bx                                      # 004ADFF5
    and ebp, 0x1ff                                       # 004ADFF8
    or ebp, 0x80000000                                   # 004ADFFE
    call _sub_47D959                                     # 004AE004
    popal                                                # 004AE009
.L4AE00A:
    movzx ebx, word ptr [esi + 0x2c]                     # 004AE00A
    movzx edi, word ptr [esi + 0x2e]                     # 004AE00E
    imul edi, edi, 8                                     # 004AE012
    cmp byte ptr [esi + 0x42], 1                         # 004AE015
    je .L4AE024                                          # 004AE019
    add edi, dword ptr [ebx*4 + __4D9724]                # 004AE01B
    jmp .L4AE02B                                         # 004AE022
.L4AE024:
    add edi, dword ptr [ebx*4 + __5253B0]                # 004AE024
.L4AE02B:
    mov ax, word ptr [edi]                               # 004AE02B
    mov cx, word ptr [edi + 2]                           # 004AE02E
    mov dx, word ptr [edi + 4]                           # 004AE032
    add ax, word ptr [esi + 0x30]                        # 004AE036
    add cx, word ptr [esi + 0x32]                        # 004AE03A
    movzx bx, byte ptr [esi + 0x34]                      # 004AE03E
    shl bx, 2                                            # 004AE043
    msvc_add dx, bx                                      # 004AE047
    mov bl, byte ptr [edi + 6]                           # 004AE04A
    mov bh, byte ptr [edi + 7]                           # 004AE04D
    push esi                                             # 004AE050
.L4AE051:
    call _sub_46FC83                                     # 004AE051
    mov byte ptr [esi + 0x1e], bl                        # 004AE056
    mov byte ptr [esi + 0x1f], bh                        # 004AE059
    mov si, word ptr [esi + 0x3a]                        # 004AE05C
    cmp si, -1                                           # 004AE060
    je .L4AE074                                          # 004AE064
    movzx esi, si                                        # 004AE066
    shl esi, 7                                           # 004AE069
    add_offset esi, _things                              # 004AE06C
    jmp .L4AE051                                         # 004AE072
.L4AE074:
    pop esi                                              # 004AE074
    push esi                                             # 004AE075
    movzx esi, word ptr [esi + 0x3a]                     # 004AE076
    shl esi, 7                                           # 004AE07A
    add_offset esi, _things                              # 004AE07D
    movzx esi, word ptr [esi + 0x3a]                     # 004AE083
    shl esi, 7                                           # 004AE087
    add_offset esi, _things                              # 004AE08A
    mov eax, dword ptr [esi + 0x28]                      # 004AE090
    pop esi                                              # 004AE093
    neg eax                                              # 004AE094
    push esi                                             # 004AE096
    mov dword ptr [esi + 0x3c], eax                      # 004AE097
    movzx esi, word ptr [esi + 0x3a]                     # 004AE09A
    shl esi, 7                                           # 004AE09E
    add_offset esi, _things                              # 004AE0A1
    mov dword ptr [esi + 0x3c], eax                      # 004AE0A7
    pop esi                                              # 004AE0AA
    call _sub_4AE133                                     # 004AE0AB
    test eax, 1                                          # 004AE0B0
    jne .L4AE128                                         # 004AE0B5
    call _sub_4AF5E1                                     # 004AE0B7
    cmp byte ptr [esi + 0x42], 1                         # 004AE0BC
    je .L4AE0ED                                          # 004AE0C0
    mov ax, word ptr [esi + 0x30]                        # 004AE0C2
    mov cx, word ptr [esi + 0x32]                        # 004AE0C6
    movzx dx, byte ptr [esi + 0x34]                      # 004AE0CA
    shl dx, 2                                            # 004AE0CF
    mov bp, word ptr [esi + 0x2c]                        # 004AE0D3
    and ebp, 0x1ff                                       # 004AE0D7
    mov bl, byte ptr [esi + 0x21]                        # 004AE0DD
    mov bh, byte ptr [esi + 0x35]                        # 004AE0E0
    mov edi, 8                                           # 004AE0E3
    call _sub_4794BC                                     # 004AE0E8
.L4AE0ED:
    mov dword ptr [esi + 0x3c], 0                        # 004AE0ED
    movzx edi, word ptr [esi + 0x3a]                     # 004AE0F4
    shl edi, 7                                           # 004AE0F8
    add_offset edi, _things                              # 004AE0FB
    mov word ptr [edi + 0x44], 0                         # 004AE101
    mov dword ptr [edi + 0x3c], 0                        # 004AE107
    movzx edi, word ptr [edi + 0x3a]                     # 004AE10E
    shl edi, 7                                           # 004AE112
    add_offset edi, _things                              # 004AE115
    mov dword ptr [edi + 0x56], 0                        # 004AE11B
    call _sub_4B7CC3                                     # 004AE122
    ret                                                  # 004AE127
.L4AE128:
    or word ptr [esi + 0xc], 2                           # 004AE128
    call _sub_4B08DD                                     # 004AE12D
    ret                                                  # 004AE132

    .global _sub_4AE133
_sub_4AE133:
    push esi                                             # 004AE133
    movzx eax, word ptr [esi + 0x3a]                     # 004AE134
    shl eax, 7                                           # 004AE138
    add_offset eax, _things                              # 004AE13B
    mov dword ptr [__113611C], eax                       # 004AE140
    movzx eax, word ptr [eax + 0x3a]                     # 004AE145
    shl eax, 7                                           # 004AE149
    add_offset eax, _things                              # 004AE14C
    mov dword ptr [__1136120], eax                       # 004AE151
    mov ecx, 0x20                                        # 004AE156
.L4AE15B:
    push ecx                                             # 004AE15B
    msvc_xor eax, eax                                    # 004AE15C
    msvc_xor ebx, ebx                                    # 004AE15E
    call _sub_4ACEE7                                     # 004AE160
    pop ecx                                              # 004AE165
    msvc_or al, al                                       # 004AE166
    jne .L4AE16D                                         # 004AE168
    dec ecx                                              # 004AE16A
    jne .L4AE15B                                         # 004AE16B
.L4AE16D:
    msvc_xor ecx, ecx                                    # 004AE16D
    push ecx                                             # 004AE16F
.L4AE170:
    test byte ptr [esi + 0x38], 1                        # 004AE170
    jne .L4AE1D3                                         # 004AE174
    msvc_xor eax, eax                                    # 004AE176
    mov dword ptr [__1136114], 0                         # 004AE178
    cmp byte ptr [esi + 1], 1                            # 004AE182
    jne .L4AE195                                         # 004AE186
    cmp byte ptr [esi + 0x42], 1                         # 004AE188
    jne .L4AE195                                         # 004AE18C
    call _sub_47CA71                                     # 004AE18E
    jmp .L4AE19A                                         # 004AE193
.L4AE195:
    call _sub_4B15FF                                     # 004AE195
.L4AE19A:
    cmp byte ptr [esi + 1], 1                            # 004AE19A
    jb .L4AE1C3                                          # 004AE19E
    test dword ptr [__1136114], 9                        # 004AE1A0
    je .L4AE1C3                                          # 004AE1AA
.L4AE1BF:
    or dword ptr [esp], 1                                # 004AE1BF
.L4AE1C3:
    msvc_mov eax, esi                                    # 004AE1C3
    xchg dword ptr [__1136128], eax                      # 004AE1C5
    xchg dword ptr [__1136124], eax                      # 004AE1CB
    jmp .L4AE1E4                                         # 004AE1D1
.L4AE1D3:
    mov ebx, dword ptr [__1136124]                       # 004AE1D3
    mov edi, dword ptr [__1136128]                       # 004AE1D9
    call _sub_4AC255                                     # 004AE1DF
.L4AE1E4:
    call _sub_4CBB01                                     # 004AE1E4
    mov si, word ptr [esi + 0x3a]                        # 004AE1E9
    cmp si, -1                                           # 004AE1ED
    je .L4AE204                                          # 004AE1F1
    movzx esi, si                                        # 004AE1F3
    shl esi, 7                                           # 004AE1F6
    add_offset esi, _things                              # 004AE1F9
    jmp .L4AE170                                    # 004AE1FF
.L4AE204:
    pop ecx                                              # 004AE204
    pop esi                                              # 004AE205
    push ecx                                             # 004AE206
    cmp byte ptr [esi + 0x42], 1                         # 004AE207
    je .L4AE2A9                                          # 004AE20B
    push esi                                             # 004AE211
    mov ax, word ptr [esi + 0x30]                        # 004AE212
    mov cx, word ptr [esi + 0x32]                        # 004AE216
    movzx dx, byte ptr [esi + 0x34]                      # 004AE21A
    shl dx, 2                                            # 004AE21F
    movzx ebp, word ptr [esi + 0x36]                     # 004AE223
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AE227
    and ebp, 0x1ff                                       # 004AE22F
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004AE235
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004AE23D
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004AE245
    movzx ebx, byte ptr [ebp*8 + __4F7B5D]               # 004AE24D
    cmp bl, 0xc                                          # 004AE255
    jae .L4AE26A                                         # 004AE258
    sub ax, word ptr [ebx*4 + __503C6C]                  # 004AE25A
    sub cx, word ptr [ebx*4 + __503C6E]                  # 004AE262
.L4AE26A:
    xor ebp, 4                                           # 004AE26A
    mov bl, byte ptr [esi + 0x21]                        # 004AE26D
    mov bh, byte ptr [esi + 0x35]                        # 004AE270
    call _sub_4A2AD7                                     # 004AE273
    pop esi                                              # 004AE278
    push esi                                             # 004AE279
    mov ax, word ptr [esi + 0x30]                        # 004AE27A
    mov cx, word ptr [esi + 0x32]                        # 004AE27E
    movzx dx, byte ptr [esi + 0x34]                      # 004AE282
    shl dx, 2                                            # 004AE287
    movzx ebp, word ptr [esi + 0x36]                     # 004AE28B
    mov bp, word ptr [ebp*2 + __96885C]                  # 004AE28F
    and ebp, 0x1ff                                       # 004AE297
    mov bl, byte ptr [esi + 0x21]                        # 004AE29D
    mov bh, byte ptr [esi + 0x35]                        # 004AE2A0
    call _sub_4A2AD7                                     # 004AE2A3
    pop esi                                              # 004AE2A8
.L4AE2A9:
    pop eax                                              # 004AE2A9
    ret                                                  # 004AE2AA

    .global _sub_4AE2AB
_sub_4AE2AB:
    push esi                                             # 004AE2AB
    movzx esi, word ptr [esi + 0x3a]                     # 004AE2AC
    shl esi, 7                                           # 004AE2B0
    add_offset esi, _things                              # 004AE2B3
    movzx esi, word ptr [esi + 0x3a]                     # 004AE2B9
    shl esi, 7                                           # 004AE2BD
    add_offset esi, _things                              # 004AE2C0
    mov dword ptr [esi + 0x28], 0                        # 004AE2C6
    pop esi                                              # 004AE2CD
    call _sub_4B1C48                                     # 004AE2CE
    push esi                                             # 004AE2D3
.L4AE2D4:
    movzx esi, word ptr [esi + 0x3a]                     # 004AE2D4
    shl esi, 7                                           # 004AE2D8
    add_offset esi, _things                              # 004AE2DB
    cmp byte ptr [esi + 1], 6                            # 004AE2E1
    jne .L4AE2D4                                         # 004AE2E5
    mov eax, dword ptr [esi + 0x28]                      # 004AE2E7
    neg eax                                              # 004AE2EA
    pop esi                                              # 004AE2EC
    mov dword ptr [esi + 0x28], eax                      # 004AE2ED
    push esi                                             # 004AE2F0
    movzx esi, word ptr [esi + 0x3a]                     # 004AE2F1
    shl esi, 7                                           # 004AE2F5
    add_offset esi, _things                              # 004AE2F8
    mov dword ptr [esi + 0x28], eax                      # 004AE2FE
    movzx esi, word ptr [esi + 0x3a]                     # 004AE301
    shl esi, 7                                           # 004AE305
    add_offset esi, _things                              # 004AE308
    mov dword ptr [esi + 0x28], eax                      # 004AE30E
    pop esi                                              # 004AE311
    call _sub_4B1C48                                     # 004AE312
    ret                                                  # 004AE317

    .global _sub_4AE318
_sub_4AE318:
    DebugStamp 0x15031204
    mov byte ptr [__113646B], al                         # 004AE318
    mov eax, 4                                           # 004AE31D
    call _sub_470188                                     # 004AE322
    jb .L4AE5E2                                          # 004AE327
    mov eax, dword ptr [_scenarioChunk3+416]             # 004AE32D
    cmp eax, 0x3e800                                     # 004AE332
    jae .L4AE5D9                                         # 004AE337
    call _sub_4B1E00                                     # 004AE33D
    jb .L4AE5E2                                          # 004AE342
    msvc_mov bp, ax                                      # 004AE348
    DebugStamp 0x15031205
    mov bl, 1                                            # 004AE34B
    call _sub_470039                                     # 004AE34D
    mov bl, byte ptr [__9C68EB]                          # 004AE352
    mov byte ptr [esi + 0x21], bl                        # 004AE358
    mov ecx, 4                                           # 004AE35B
    call _sub_47019F                                     # 004AE360
    mov bx, word ptr [esi + 0xa]                         # 004AE365
    mov byte ptr [esi], 0                                # 004AE369
    or word ptr [esi + 0xc], 2                           # 004AE36C
    mov byte ptr [esi + 1], 0                            # 004AE371
    mov word ptr [esi + 0x26], bx                        # 004AE375
    mov byte ptr [esi + 0x35], dl                        # 004AE379
    mov byte ptr [esi + 0x42], dh                        # 004AE37C
    mov word ptr [esi + 0x30], 0xffff                    # 004AE37F
    mov word ptr [esi + 0x32], 0                         # 004AE385
    mov byte ptr [esi + 0x34], 0                         # 004AE38B
    mov dword ptr [esi + 0x28], 0                        # 004AE38F
    mov word ptr [esi + 0x2e], 0                         # 004AE396
    mov word ptr [esi + 0x2c], 0                         # 004AE39C
    mov word ptr [esi + 0x36], bp                        # 004AE3A2
    mov byte ptr [esi + 0x14], 0                         # 004AE3A6
    mov byte ptr [esi + 9], 0                            # 004AE3AA
    mov byte ptr [esi + 0x15], 0                         # 004AE3AE
    mov byte ptr [esi + 0x38], 0                         # 004AE3B2
    mov dword ptr [esi + 0x3c], 0                        # 004AE3B6
    movzx ax, byte ptr [__113646B]                       # 004AE3BD
    mov byte ptr [esi + 0x5e], al                        # 004AE3C5
    add ax, 4                                            # 004AE3C8
    mov word ptr [esi + 0x22], ax                        # 004AE3CC
    call _sub_4B64F9                                     # 004AE3D0
    mov byte ptr [esi + 0x52], 0                         # 004AE3D5
    mov byte ptr [esi + 0x5c], 0                         # 004AE3D9
    mov byte ptr [esi + 0x5d], 0                         # 004AE3DD
    mov word ptr [esi + 0x54], 0xffff                    # 004AE3E1
    mov byte ptr [esi + 0x5f], 0                         # 004AE3E7
    mov byte ptr [esi + 0x60], 0xff                      # 004AE3EB
    mov word ptr [esi + 0x61], 0xffff                    # 004AE3EF
    mov dword ptr [esi + 0x69], 0                        # 004AE3F5
    mov word ptr [esi + 0x77], 0                         # 004AE3FC
    call _sub_470312                                     # 004AE406
    msvc_mov edi, esi                                    # 004AE40B
    push ebx                                             # 004AE40D
    mov bl, 1                                            # 004AE40E
    call _sub_470039                                     # 004AE410
    mov bl, byte ptr [__9C68EB]                          # 004AE415
    mov byte ptr [esi + 0x21], bl                        # 004AE41B
    pop ebx                                              # 004AE41E
    mov byte ptr [esi], 0                                # 004AE41F
    mov byte ptr [esi + 1], 1                            # 004AE422
    mov word ptr [esi + 0x26], bx                        # 004AE426
    mov byte ptr [esi + 0x35], dl                        # 004AE42A
    mov byte ptr [esi + 0x42], dh                        # 004AE42D
    mov word ptr [esi + 0x30], 0xffff                    # 004AE430
    mov word ptr [esi + 0x32], 0                         # 004AE436
    mov byte ptr [esi + 0x34], 0                         # 004AE43C
    mov dword ptr [esi + 0x28], 0                        # 004AE440
    mov word ptr [esi + 0x2e], 0                         # 004AE447
    mov word ptr [esi + 0x2c], 0                         # 004AE44D
    mov word ptr [esi + 0x36], bp                        # 004AE453
    mov byte ptr [esi + 0x14], 0                         # 004AE457
    mov byte ptr [esi + 9], 0                            # 004AE45B
    mov byte ptr [esi + 0x15], 0                         # 004AE45F
    mov byte ptr [esi + 0x38], 0                         # 004AE463
    mov dword ptr [esi + 0x3c], 0                        # 004AE467
    mov word ptr [esi + 0x44], 0                         # 004AE46E
    mov word ptr [esi + 0x46], 0                         # 004AE474
    mov byte ptr [esi + 0x48], 0                         # 004AE47A
    mov byte ptr [esi + 0x52], 0                         # 004AE47E
    mov word ptr [esi + 0x4e], 0                         # 004AE482
    mov word ptr [esi + 0x50], 0                         # 004AE488
    mov dword ptr [esi + 0x53], 0xffffffff               # 004AE48E
    mov ax, word ptr [esi + 0xa]                         # 004AE495
    mov word ptr [edi + 0x3a], ax                        # 004AE499
    msvc_mov edi, esi                                    # 004AE49D
    push ebx                                             # 004AE49F
    mov bl, 1                                            # 004AE4A0
    call _sub_470039                                     # 004AE4A2
    mov bl, byte ptr [__9C68EB]                          # 004AE4A7
    mov byte ptr [esi + 0x21], bl                        # 004AE4AD
    pop ebx                                              # 004AE4B0
    mov byte ptr [esi], 0                                # 004AE4B1
    mov byte ptr [esi + 1], 2                            # 004AE4B4
    mov word ptr [esi + 0x26], bx                        # 004AE4B8
    mov byte ptr [esi + 0x35], dl                        # 004AE4BC
    mov byte ptr [esi + 0x42], dh                        # 004AE4BF
    mov word ptr [esi + 0x30], 0xffff                    # 004AE4C2
    mov word ptr [esi + 0x32], 0                         # 004AE4C8
    mov byte ptr [esi + 0x34], 0                         # 004AE4CE
    mov dword ptr [esi + 0x28], 0                        # 004AE4D2
    mov word ptr [esi + 0x2e], 0                         # 004AE4D9
    mov word ptr [esi + 0x2c], 0                         # 004AE4DF
    mov word ptr [esi + 0x36], bp                        # 004AE4E5
    mov byte ptr [esi + 0x14], 0                         # 004AE4E9
    mov byte ptr [esi + 9], 0                            # 004AE4ED
    mov byte ptr [esi + 0x15], 0                         # 004AE4F1
    mov byte ptr [esi + 0x38], 0                         # 004AE4F5
    mov dword ptr [esi + 0x56], 0                        # 004AE4F9
    mov byte ptr [esi + 0x5a], 0                         # 004AE500
    mov byte ptr [esi + 0x5b], 0                         # 004AE504
    mov byte ptr [esi + 0x44], 0xff                      # 004AE508
    mov word ptr [esi + 0x48], 0xffff                    # 004AE50C
    mov word ptr [esi + 0x4a], 0                         # 004AE512
    mov dword ptr [esi + 0x5e], 0                        # 004AE518
    mov dword ptr [esi + 0x62], 0                        # 004AE51F
    mov dword ptr [esi + 0x66], 0                        # 004AE526
    mov dword ptr [esi + 0x6a], 0                        # 004AE52D
    mov dword ptr [esi + 0x6e], 0                        # 004AE534
    mov byte ptr [esi + 0x72], 0                         # 004AE53B
    mov byte ptr [esi + 0x73], 0                         # 004AE53F
    mov ax, word ptr [esi + 0xa]                         # 004AE543
    mov word ptr [edi + 0x3a], ax                        # 004AE547
    msvc_mov edi, esi                                    # 004AE54B
    push ebx                                             # 004AE54D
    mov bl, 1                                            # 004AE54E
    call _sub_470039                                     # 004AE550
    mov bl, byte ptr [__9C68EB]                          # 004AE555
    mov byte ptr [esi + 0x21], bl                        # 004AE55B
    pop ebx                                              # 004AE55E
    mov byte ptr [esi], 0                                # 004AE55F
    mov byte ptr [esi + 1], 6                            # 004AE562
    mov word ptr [esi + 0x26], bx                        # 004AE566
    mov byte ptr [esi + 0x35], dl                        # 004AE56A
    mov byte ptr [esi + 0x42], dh                        # 004AE56D
    mov word ptr [esi + 0x30], 0xffff                    # 004AE570
    mov word ptr [esi + 0x32], 0                         # 004AE576
    mov byte ptr [esi + 0x34], 0                         # 004AE57C
    mov dword ptr [esi + 0x28], 0                        # 004AE580
    mov word ptr [esi + 0x2e], 0                         # 004AE587
    mov word ptr [esi + 0x2c], 0                         # 004AE58D
    mov word ptr [esi + 0x36], bp                        # 004AE593
    mov byte ptr [esi + 0x14], 0                         # 004AE597
    mov byte ptr [esi + 9], 0                            # 004AE59B
    mov byte ptr [esi + 0x15], 0                         # 004AE59F
    mov byte ptr [esi + 0x38], 0                         # 004AE5A3
    mov byte ptr [esi + 0x44], 0xff                      # 004AE5A7
    mov word ptr [esi + 0x48], 0xffff                    # 004AE5AB
    mov word ptr [esi + 0x4a], 0                         # 004AE5B1
    mov ax, word ptr [esi + 0xa]                         # 004AE5B7
    mov word ptr [edi + 0x3a], ax                        # 004AE5BB
    mov word ptr [esi + 0x3a], 0xffff                    # 004AE5BF
    movzx esi, bx                                        # 004AE5C5
    shl esi, 7                                           # 004AE5C8
    add_offset esi, _things                              # 004AE5CB
    call _sub_4B7CC3                                     # 004AE5D1
    DebugStamp 0x15031206
    msvc_and eax, eax                                    # 004AE5D6
    ret                                                  # 004AE5D8
.L4AE5D9:
    mov word ptr [__9C68E6], 0x4be                       # 004AE5D9
.L4AE5E2:
    stc                                                  # 004AE5E2
    ret                                                  # 004AE5E3

    .global _sub_4AE5E4
_sub_4AE5E4:
    mov byte ptr [__9C68EA], 0x34                        # 004AE5E4
    mov dword ptr [__1136240], 0xffffffff                # 004AE5EB
    cmp di, -1                                           # 004AE5F5
    je .L4AE74E                                          # 004AE5F9
    movzx esi, di                                        # 004AE5FF
    shl esi, 7                                           # 004AE602
    add_offset esi, _things                              # 004AE605
    movzx ebp, word ptr [esi + 0x3a]                     # 004AE60B
    shl ebp, 7                                           # 004AE60F
    add_offset ebp, _things                              # 004AE612
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AE618
    shl ebp, 7                                           # 004AE61C
    add_offset ebp, _things                              # 004AE61F
    mov ax, word ptr [ebp + 0xe]                         # 004AE625
    mov word ptr [__9C68E0], ax                          # 004AE629
    mov ax, word ptr [ebp + 0x10]                        # 004AE62F
    mov word ptr [__9C68E2], ax                          # 004AE633
    mov ax, word ptr [ebp + 0x12]                        # 004AE639
    mov word ptr [__9C68E4], ax                          # 004AE63D
    push eax                                             # 004AE643
    push esi                                             # 004AE644
    mov al, byte ptr [esi + 0x21]                        # 004AE645
    mov esi, 0xffffffff                                  # 004AE648
    call _sub_431E6A                                     # 004AE64D
    pop esi                                              # 004AE652
    pop eax                                              # 004AE653
    jb .L4AE803                                          # 004AE654
    call _sub_4B0BDD                                     # 004AE65A
    jb .L4AE803                                          # 004AE65F
    msvc_mov eax, edx                                    # 004AE665
    call _sub_4B8FA2                                     # 004AE667
    jb .L4AE803                                          # 004AE66C
    mov eax, 0xc                                         # 004AE672
    call _sub_470188                                     # 004AE677
    jb .L4AE803                                          # 004AE67C
    test bl, 1                                           # 004AE682
    je .L4AE733                                          # 004AE685
    cmp word ptr [esi + 0x30], -1                        # 004AE68B
    je .L4AE6D1                                          # 004AE690
    mov ax, word ptr [esi + 0x30]                        # 004AE692
    mov word ptr [__1136250], ax                         # 004AE696
    mov ax, word ptr [esi + 0x32]                        # 004AE69C
    mov word ptr [__1136254], ax                         # 004AE6A0
    mov al, byte ptr [esi + 0x34]                        # 004AE6A6
    mov byte ptr [__1136258], al                         # 004AE6A9
    mov ax, word ptr [esi + 0x2c]                        # 004AE6AE
    mov word ptr [__113624C], ax                         # 004AE6B2
    mov ax, word ptr [esi + 0x2e]                        # 004AE6B8
    mov word ptr [__1136248], ax                         # 004AE6BC
    mov dword ptr [__1136240], esi                       # 004AE6C2
    push edx                                             # 004AE6C8
    push edi                                             # 004AE6C9
    call _sub_4B08DD                                     # 004AE6CA
    pop edi                                              # 004AE6CF
    pop edx                                              # 004AE6D0
.L4AE6D1:
    push edx                                             # 004AE6D1
    call _sub_4AE86D                                     # 004AE6D2
    pop edx                                              # 004AE6D7
    jb .L4AE809                                          # 004AE6D8
.L4AE6DE:
    push edx                                             # 004AE6DE
    call _sub_4AF7A4                                     # 004AE6DF
    pop edx                                              # 004AE6E4
    push ebx                                             # 004AE6E5
    mov bl, byte ptr [__9C68EB]                          # 004AE6E6
    call _sub_437ED0                                     # 004AE6EC
    pop ebx                                              # 004AE6F1
    DebugStamp 0x15031208
    push edx                                             # 004AE6F2
    push esi                                             # 004AE6F3
    mov esi, dword ptr [__1136240]                       # 004AE6F4
    cmp esi, -1                                          # 004AE6FA
    je .L4AE725                                          # 004AE6FD
    mov ax, word ptr [__1136250]                         # 004AE6FF
    mov cx, word ptr [__1136254]                         # 004AE705
    mov dl, byte ptr [__1136258]                         # 004AE70C
    movzx ebp, word ptr [__113624C]                      # 004AE712
    movzx ebx, word ptr [__1136248]                      # 004AE719
    call _sub_4B05E4                                     # 004AE720
.L4AE725:
    pop esi                                              # 004AE725
    pop edx                                              # 004AE726
    mov al, 0x1b                                         # 004AE727
    movzx bx, byte ptr [esi + 0x21]                      # 004AE729
    call _sub_4CB966                                     # 004AE72E
.L4AE733:
    mov ebp, dword ptr [edx*4 + _vehicleObjects]         # 004AE733
    movzx eax, byte ptr [ebp + 7]                        # 004AE73A
    movsx ebx, word ptr [ebp + 8]                        # 004AE73E
    imul ebx, dword ptr [eax*4 + _scenarioChunk3+70]     # 004AE742
    sar ebx, 6                                           # 004AE74A
    DebugStamp 0x15031209
    ret                                                  # 004AE74D
.L4AE74E:
    mov word ptr [__9C68E0], 0x8000                      # 004AE74E
    mov eax, 0x10                                        # 004AE757
    call _sub_470188                                     # 004AE75C
    jb .L4AE803                                          # 004AE761
    call _sub_4B1E44                                     # 004AE767
    jb .L4AE803                                          # 004AE76C
    test bl, 1                                           # 004AE772
    je .L4AE733                                          # 004AE775
    push edx                                             # 004AE777
    mov ebp, dword ptr [edx*4 + _vehicleObjects]         # 004AE778
    mov dl, byte ptr [ebp + 5]                           # 004AE77F
    mov dh, byte ptr [ebp + 2]                           # 004AE782
    mov al, byte ptr [ebp + 3]                           # 004AE785
    push ebp                                             # 004AE788
    call _sub_4AE318                                     # 004AE789
    pop ebp                                              # 004AE78E
    pop edx                                              # 004AE78F
    jb .L4AE803                                          # 004AE790
    mov ax, word ptr [esi + 0xa]                         # 004AE792
    mov word ptr [__113642A], ax                         # 004AE796
    push edx                                             # 004AE79C
    call _sub_4AE86D                                     # 004AE79D
    pop edx                                              # 004AE7A2
    jae .L4AE6DE                                         # 004AE7A3
    DebugStamp 0x15031207
    movzx eax, word ptr [esi + 0x36]                     # 004AE7A9
    call _sub_4B1E77                                     # 004AE7AD
    call _sub_470334                                     # 004AE7B2
    mov al, 3                                            # 004AE7B7
    mov dx, word ptr [esi + 0xa]                         # 004AE7B9
    call _sub_42851C                                     # 004AE7BD
    movzx edi, word ptr [esi + 0x3a]                     # 004AE7C2
    shl edi, 7                                           # 004AE7C6
    add_offset edi, _things                              # 004AE7C9
    call _sub_47024A                                     # 004AE7CF
    msvc_mov esi, edi                                    # 004AE7D4
    movzx edi, word ptr [esi + 0x3a]                     # 004AE7D6
    shl edi, 7                                           # 004AE7DA
    add_offset edi, _things                              # 004AE7DD
    call _sub_47024A                                     # 004AE7E3
    msvc_mov esi, edi                                    # 004AE7E8
    movzx edi, word ptr [esi + 0x3a]                     # 004AE7EA
    shl edi, 7                                           # 004AE7EE
    add_offset edi, _things                              # 004AE7F1
    call _sub_47024A                                     # 004AE7F7
    msvc_mov esi, edi                                    # 004AE7FC
    call _sub_47024A                                     # 004AE7FE
.L4AE803:
    mov ebx, 0x80000000                                  # 004AE803
    ret                                                  # 004AE808
.L4AE809:
    push edx                                             # 004AE809
    push esi                                             # 004AE80A
    mov esi, dword ptr [__1136240]                       # 004AE80B
    cmp esi, -1                                          # 004AE811
    je .L4AE869                                          # 004AE814
    movzx ebp, word ptr [esi + 0x3a]                     # 004AE816
    shl ebp, 7                                           # 004AE81A
    add_offset ebp, _things                              # 004AE81D
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AE823
    shl ebp, 7                                           # 004AE827
    add_offset ebp, _things                              # 004AE82A
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AE830
    shl ebp, 7                                           # 004AE834
    add_offset ebp, _things                              # 004AE837
    cmp byte ptr [ebp + 1], 6                            # 004AE83D
    je .L4AE869                                          # 004AE841
    mov ax, word ptr [__1136250]                         # 004AE843
    mov cx, word ptr [__1136254]                         # 004AE849
    mov dl, byte ptr [__1136258]                         # 004AE850
    movzx ebp, word ptr [__113624C]                      # 004AE856
    movzx ebx, word ptr [__1136248]                      # 004AE85D
    call _sub_4B05E4                                     # 004AE864
.L4AE869:
    pop esi                                              # 004AE869
    pop edx                                              # 004AE86A
    jmp .L4AE803                                         # 004AE86B

    .global _sub_4AE86D
_sub_4AE86D:
    mov eax, 0xc                                         # 004AE86D
    call _sub_470188                                     # 004AE872
    jb .L4AED32                                          # 004AE877
    mov bx, word ptr [esi + 0xa]                         # 004AE87D
.L4AE881:
    movzx edi, word ptr [esi + 0x3a]                     # 004AE881
    shl edi, 7                                           # 004AE885
    add_offset edi, _things                              # 004AE888
    cmp byte ptr [edi + 1], 6                            # 004AE88E
    je .L4AE898                                          # 004AE892
    msvc_mov esi, edi                                    # 004AE894
    jmp .L4AE881                                         # 004AE896
.L4AE898:
    push edi                                             # 004AE898
    msvc_mov edi, esi                                    # 004AE899
    mov ebp, dword ptr [edx*4 + _vehicleObjects]         # 004AE89B
    mov dword ptr [__1136138], 0xffffffff                # 004AE8A2
    movzx ecx, byte ptr [__9C68EB]                       # 004AE8AC
    imul ecx, ecx, 0x8fa8                                # 004AE8B3
    mov ax, word ptr [ecx + _companies+26]               # 004AE8B9
    mov word ptr [__1136140], ax                         # 004AE8C0
    movzx eax, byte ptr [ebp + 0xe]                      # 004AE8C6
    bt dword ptr [ecx + _companies+48], eax              # 004AE8CA
    jae .L4AE8E1                                         # 004AE8D1
    mov ax, word ptr [ecx + eax*2 + _companies+26]       # 004AE8D3
    mov word ptr [__1136140], ax                         # 004AE8DB
.L4AE8E1:
    msvc_xor ecx, ecx                                    # 004AE8E1
.L4AE8E3:
    cmp cl, byte ptr [ebp + 4]                           # 004AE8E3
    jae .L4AED0F                                         # 004AE8E6
    push ecx                                             # 004AE8EC
    imul ecx, ecx, 6                                     # 004AE8ED
    push ebx                                             # 004AE8F0
    mov bl, 1                                            # 004AE8F1
    call _sub_470039                                     # 004AE8F3
    mov bl, byte ptr [__9C68EB]                          # 004AE8F8
    mov byte ptr [esi + 0x21], bl                        # 004AE8FE
    pop ebx                                              # 004AE901
    cmp dword ptr [__1136138], -1                        # 004AE902
    jne .L4AE911                                         # 004AE909
    mov dword ptr [__1136138], esi                       # 004AE90B
.L4AE911:
    mov byte ptr [esi], 0                                # 004AE911
    mov byte ptr [esi + 1], 3                            # 004AE914
    mov word ptr [esi + 0x26], bx                        # 004AE918
    mov al, byte ptr [esp]                               # 004AE91C
    mov byte ptr [esi + 0x54], al                        # 004AE91F
    mov al, byte ptr [edi + 0x35]                        # 004AE922
    mov byte ptr [esi + 0x35], al                        # 004AE925
    mov al, byte ptr [edi + 0x42]                        # 004AE928
    mov byte ptr [esi + 0x42], al                        # 004AE92B
    mov word ptr [esi + 0x30], 0xffff                    # 004AE92E
    mov word ptr [esi + 0x32], 0                         # 004AE934
    mov byte ptr [esi + 0x34], 0                         # 004AE93A
    mov word ptr [esi + 0x2e], 0                         # 004AE93E
    mov word ptr [esi + 0x2c], 0                         # 004AE944
    mov ax, word ptr [edi + 0x36]                        # 004AE94A
    mov word ptr [esi + 0x36], ax                        # 004AE94E
    mov byte ptr [esi + 0x38], 0                         # 004AE952
    mov word ptr [esi + 0x40], dx                        # 004AE956
    push edx                                             # 004AE95A
    mov eax, dword ptr [_scenarioChunk3]                 # 004AE95B
    mov edx, dword ptr [_scenarioChunk3+4]               # 004AE960
    ror eax, 3                                           # 004AE966
    xor edx, 0x1234567f                                  # 004AE969
    mov dword ptr [_scenarioChunk3+4], eax               # 004AE96F
    ror edx, 7                                           # 004AE974
    add dword ptr [_scenarioChunk3], edx                 # 004AE977
    mov word ptr [esi + 0x44], ax                        # 004AE97D
    pop edx                                              # 004AE981
    mov eax, dword ptr [_scenarioChunk3+20]              # 004AE982
    mov dword ptr [esi + 0x56], eax                      # 004AE987
    mov byte ptr [esi + 0x46], 0                         # 004AE98A
    mov byte ptr [esi + 0x47], 0                         # 004AE98E
    mov dword ptr [esi + 0x48], 0                        # 004AE992
    mov byte ptr [esi + 0x4c], 0xff                      # 004AE999
    mov byte ptr [esi + 0x51], 0                         # 004AE99D
    mov byte ptr [esi + 0x5e], 0                         # 004AE9A1
    mov byte ptr [esi + 0x5f], 0                         # 004AE9A5
    mov byte ptr [esi + 0x60], 0                         # 004AE9A9
    mov byte ptr [esi + 0x61], 0                         # 004AE9AD
    push ecx                                             # 004AE9B1
    push edx                                             # 004AE9B2
    movzx ax, byte ptr [ebp + 0xa]                       # 004AE9B3
    shl ax, 8                                            # 004AE9B8
    mov cx, word ptr [ebp + 0x114]                       # 004AE9BC
    add cx, 2                                            # 004AE9C3
    cmp cx, word ptr [_scenarioChunk3+26]                # 004AE9C7
    jbe .L4AE9EF                                         # 004AE9CE
    msvc_mov dx, ax                                      # 004AE9D0
    shr dx, 3                                            # 004AE9D3
    msvc_sub ax, dx                                      # 004AE9D7
    inc cx                                               # 004AE9DA
    cmp cx, word ptr [_scenarioChunk3+26]                # 004AE9DC
    je .L4AE9EF                                          # 004AE9E3
    msvc_mov dx, ax                                      # 004AE9E5
    shr dx, 3                                            # 004AE9E8
    msvc_sub ax, dx                                      # 004AE9EC
.L4AE9EF:
    msvc_or ax, ax                                       # 004AE9EF
    je .L4AE9F8                                          # 004AE9F2
    add ax, 0xff                                         # 004AE9F4
.L4AE9F8:
    mov word ptr [esi + 0x66], ax                        # 004AE9F8
    pop edx                                              # 004AE9FC
    pop ecx                                              # 004AE9FD
    call _sub_4BA873                                     # 004AE9FE
    push ecx                                             # 004AEA03
    movzx ecx, byte ptr [ebp + 7]                        # 004AEA04
    movsx eax, word ptr [ebp + 8]                        # 004AEA08
    imul eax, dword ptr [ecx*4 + _scenarioChunk3+70]     # 004AEA0C
    sar eax, 6                                           # 004AEA14
    msvc_mov ecx, eax                                    # 004AEA17
    sar ecx, 3                                           # 004AEA19
    msvc_sub eax, ecx                                    # 004AEA1C
    mov dword ptr [esi + 0x62], eax                      # 004AEA1E
    pop ecx                                              # 004AEA21
    cmp dword ptr [esp], 0                               # 004AEA22
    jne .L4AEA4B                                         # 004AEA26
    cmp byte ptr [ebp + 0x10c], 2                        # 004AEA28
    jb .L4AEA4B                                          # 004AEA2F
    mov al, byte ptr [ebp + 0xe3]                        # 004AEA31
    mov byte ptr [esi + 0x4d], al                        # 004AEA37
    mov eax, dword ptr [ebp + 0xe8]                      # 004AEA3A
    mov dword ptr [esi + 0x48], eax                      # 004AEA40
    bsf eax, eax                                         # 004AEA43
    je .L4AEA4B                                          # 004AEA46
    mov byte ptr [esi + 0x4c], al                        # 004AEA48
.L4AEA4B:
    push edx                                             # 004AEA4B
    movzx edx, byte ptr [ecx + ebp + 0x26]               # 004AEA4C
    mov byte ptr [esi + 0x39], dl                        # 004AEA51
    mov byte ptr [esi + 0x14], 1                         # 004AEA54
    mov byte ptr [esi + 9], 1                            # 004AEA58
    mov byte ptr [esi + 0x15], 1                         # 004AEA5C
    cmp dl, 0xff                                         # 004AEA60
    je .L4AEA86                                          # 004AEA63
    imul edx, edx, 0x12                                  # 004AEA65
    mov al, byte ptr [edx + ebp + 0xb6]                  # 004AEA68
    mov byte ptr [esi + 0x14], al                        # 004AEA6F
    mov al, byte ptr [edx + ebp + 0xb7]                  # 004AEA72
    mov byte ptr [esi + 9], al                           # 004AEA79
    mov al, byte ptr [edx + ebp + 0xb8]                  # 004AEA7C
    mov byte ptr [esi + 0x15], al                        # 004AEA83
.L4AEA86:
    pop edx                                              # 004AEA86
    mov ax, word ptr [__1136140]                         # 004AEA87
    mov byte ptr [esi + 0x24], al                        # 004AEA8D
    mov byte ptr [esi + 0x25], ah                        # 004AEA90
    mov ax, word ptr [esi + 0xa]                         # 004AEA93
    mov word ptr [edi + 0x3a], ax                        # 004AEA97
    msvc_mov edi, esi                                    # 004AEA9B
    push ebx                                             # 004AEA9D
    mov bl, 1                                            # 004AEA9E
    call _sub_470039                                     # 004AEAA0
    mov bl, byte ptr [__9C68EB]                          # 004AEAA5
    mov byte ptr [esi + 0x21], bl                        # 004AEAAB
    pop ebx                                              # 004AEAAE
    mov byte ptr [esi], 0                                # 004AEAAF
    mov byte ptr [esi + 1], 3                            # 004AEAB2
    mov word ptr [esi + 0x26], bx                        # 004AEAB6
    mov al, byte ptr [esp]                               # 004AEABA
    mov byte ptr [esi + 0x54], al                        # 004AEABD
    mov al, byte ptr [edi + 0x35]                        # 004AEAC0
    mov byte ptr [esi + 0x35], al                        # 004AEAC3
    mov al, byte ptr [edi + 0x42]                        # 004AEAC6
    mov byte ptr [esi + 0x42], al                        # 004AEAC9
    mov word ptr [esi + 0x30], 0xffff                    # 004AEACC
    mov word ptr [esi + 0x32], 0                         # 004AEAD2
    mov byte ptr [esi + 0x34], 0                         # 004AEAD8
    mov word ptr [esi + 0x2e], 0                         # 004AEADC
    mov word ptr [esi + 0x2c], 0                         # 004AEAE2
    mov ax, word ptr [edi + 0x36]                        # 004AEAE8
    mov word ptr [esi + 0x36], ax                        # 004AEAEC
    mov byte ptr [esi + 0x38], 2                         # 004AEAF0
    mov word ptr [esi + 0x40], dx                        # 004AEAF4
    push edx                                             # 004AEAF8
    mov eax, dword ptr [_scenarioChunk3]                 # 004AEAF9
    mov edx, dword ptr [_scenarioChunk3+4]               # 004AEAFE
    ror eax, 3                                           # 004AEB04
    xor edx, 0x1234567f                                  # 004AEB07
    mov dword ptr [_scenarioChunk3+4], eax               # 004AEB0D
    ror edx, 7                                           # 004AEB12
    add dword ptr [_scenarioChunk3], edx                 # 004AEB15
    mov word ptr [esi + 0x44], ax                        # 004AEB1B
    pop edx                                              # 004AEB1F
    mov eax, dword ptr [_scenarioChunk3+20]              # 004AEB20
    mov dword ptr [esi + 0x56], eax                      # 004AEB25
    mov byte ptr [esi + 0x46], 0                         # 004AEB28
    mov byte ptr [esi + 0x47], 0                         # 004AEB2C
    mov dword ptr [esi + 0x48], 0                        # 004AEB30
    mov byte ptr [esi + 0x4c], 0xff                      # 004AEB37
    mov byte ptr [esi + 0x51], 0                         # 004AEB3B
    mov byte ptr [esi + 0x5e], 0                         # 004AEB3F
    mov byte ptr [esi + 0x5f], 0                         # 004AEB43
    mov byte ptr [esi + 0x60], 0                         # 004AEB47
    mov byte ptr [esi + 0x61], 0                         # 004AEB4B
    push edx                                             # 004AEB4F
    movzx edx, byte ptr [ecx + ebp + 0x27]               # 004AEB50
    mov byte ptr [esi + 0x39], dl                        # 004AEB55
    mov byte ptr [esi + 0x14], 1                         # 004AEB58
    mov byte ptr [esi + 9], 1                            # 004AEB5C
    mov byte ptr [esi + 0x15], 1                         # 004AEB60
    cmp dl, 0xff                                         # 004AEB64
    je .L4AEB8A                                          # 004AEB67
    imul edx, edx, 0x12                                  # 004AEB69
    mov al, byte ptr [edx + ebp + 0xb6]                  # 004AEB6C
    mov byte ptr [esi + 0x14], al                        # 004AEB73
    mov al, byte ptr [edx + ebp + 0xb7]                  # 004AEB76
    mov byte ptr [esi + 9], al                           # 004AEB7D
    mov al, byte ptr [edx + ebp + 0xb8]                  # 004AEB80
    mov byte ptr [esi + 0x15], al                        # 004AEB87
.L4AEB8A:
    pop edx                                              # 004AEB8A
    mov ax, word ptr [__1136140]                         # 004AEB8B
    mov byte ptr [esi + 0x24], al                        # 004AEB91
    mov byte ptr [esi + 0x25], ah                        # 004AEB94
    mov ax, word ptr [esi + 0xa]                         # 004AEB97
    mov word ptr [edi + 0x3a], ax                        # 004AEB9B
    msvc_mov edi, esi                                    # 004AEB9F
    push ebx                                             # 004AEBA1
    mov bl, 1                                            # 004AEBA2
    call _sub_470039                                     # 004AEBA4
    mov bl, byte ptr [__9C68EB]                          # 004AEBA9
    mov byte ptr [esi + 0x21], bl                        # 004AEBAF
    pop ebx                                              # 004AEBB2
    mov byte ptr [esi], 0                                # 004AEBB3
    mov eax, dword ptr [esp]                             # 004AEBB6
    add al, 4                                            # 004AEBB9
    cmp al, 5                                            # 004AEBBB
    jbe .L4AEBC1                                         # 004AEBBD
    mov al, 5                                            # 004AEBBF
.L4AEBC1:
    mov byte ptr [esi + 1], al                           # 004AEBC1
    mov word ptr [esi + 0x26], bx                        # 004AEBC4
    mov al, byte ptr [esp]                               # 004AEBC8
    mov byte ptr [esi + 0x54], al                        # 004AEBCB
    mov al, byte ptr [edi + 0x35]                        # 004AEBCE
    mov byte ptr [esi + 0x35], al                        # 004AEBD1
    mov al, byte ptr [edi + 0x42]                        # 004AEBD4
    mov byte ptr [esi + 0x42], al                        # 004AEBD7
    mov word ptr [esi + 0x30], 0xffff                    # 004AEBDA
    mov word ptr [esi + 0x32], 0                         # 004AEBE0
    mov byte ptr [esi + 0x34], 0                         # 004AEBE6
    mov word ptr [esi + 0x2e], 0                         # 004AEBEA
    mov word ptr [esi + 0x2c], 0                         # 004AEBF0
    mov ax, word ptr [edi + 0x36]                        # 004AEBF6
    mov word ptr [esi + 0x36], ax                        # 004AEBFA
    mov byte ptr [esi + 0x38], 1                         # 004AEBFE
    mov word ptr [esi + 0x40], dx                        # 004AEC02
    push edx                                             # 004AEC06
    mov eax, dword ptr [_scenarioChunk3]                 # 004AEC07
    mov edx, dword ptr [_scenarioChunk3+4]               # 004AEC0C
    ror eax, 3                                           # 004AEC12
    xor edx, 0x1234567f                                  # 004AEC15
    mov dword ptr [_scenarioChunk3+4], eax               # 004AEC1B
    ror edx, 7                                           # 004AEC20
    add dword ptr [_scenarioChunk3], edx                 # 004AEC23
    mov word ptr [esi + 0x44], ax                        # 004AEC29
    pop edx                                              # 004AEC2D
    mov eax, dword ptr [_scenarioChunk3+20]              # 004AEC2E
    mov dword ptr [esi + 0x56], eax                      # 004AEC33
    mov byte ptr [esi + 0x46], 0                         # 004AEC36
    mov byte ptr [esi + 0x47], 0                         # 004AEC3A
    mov dword ptr [esi + 0x48], 0                        # 004AEC3E
    mov byte ptr [esi + 0x4c], 0xff                      # 004AEC45
    mov byte ptr [esi + 0x51], 0                         # 004AEC49
    mov byte ptr [esi + 0x55], 0                         # 004AEC4D
    mov byte ptr [esi + 0x5e], 0                         # 004AEC51
    mov byte ptr [esi + 0x5f], 0                         # 004AEC55
    cmp dword ptr [esp], 0                               # 004AEC59
    jne .L4AEC82                                         # 004AEC5D
    cmp byte ptr [ebp + 0x10c], 1                        # 004AEC5F
    jb .L4AEC82                                          # 004AEC66
    mov al, byte ptr [ebp + 0xe2]                        # 004AEC68
    mov byte ptr [esi + 0x4d], al                        # 004AEC6E
    mov eax, dword ptr [ebp + 0xe4]                      # 004AEC71
    mov dword ptr [esi + 0x48], eax                      # 004AEC77
    bsf eax, eax                                         # 004AEC7A
    je .L4AEC82                                          # 004AEC7D
    mov byte ptr [esi + 0x4c], al                        # 004AEC7F
.L4AEC82:
    push edx                                             # 004AEC82
    mov byte ptr [esi + 0x14], 1                         # 004AEC83
    mov byte ptr [esi + 9], 1                            # 004AEC87
    mov byte ptr [esi + 0x15], 1                         # 004AEC8B
    movzx edx, byte ptr [ecx + ebp + 0x28]               # 004AEC8F
    cmp dl, 0xff                                         # 004AEC94
    je .L4AECA4                                          # 004AEC97
    msvc_or dl, dl                                       # 004AEC99
    jns .L4AECA1                                         # 004AEC9B
    xor byte ptr [esi + 0x38], 2                         # 004AEC9D
.L4AECA1:
    and dl, 0x7f                                         # 004AECA1
.L4AECA4:
    mov byte ptr [esi + 0x39], dl                        # 004AECA4
    cmp dl, 0xff                                         # 004AECA7
    je .L4AECC4                                          # 004AECAA
    imul edx, edx, 0x1e                                  # 004AECAC
    mov al, byte ptr [edx + ebp + 0x44]                  # 004AECAF
    mov byte ptr [esi + 0x14], al                        # 004AECB3
    mov al, byte ptr [edx + ebp + 0x45]                  # 004AECB6
    mov byte ptr [esi + 9], al                           # 004AECBA
    mov al, byte ptr [edx + ebp + 0x46]                  # 004AECBD
    mov byte ptr [esi + 0x15], al                        # 004AECC1
.L4AECC4:
    pop edx                                              # 004AECC4
    mov ax, word ptr [__1136140]                         # 004AECC5
    mov byte ptr [esi + 0x24], al                        # 004AECCB
    mov byte ptr [esi + 0x25], ah                        # 004AECCE
    cmp dword ptr [esp], 0                               # 004AECD1
    jne .L4AECE6                                         # 004AECD5
    test word ptr [ebp + 0xe0], 4                        # 004AECD7
    je .L4AECE6                                          # 004AECE0
    or byte ptr [esi + 0x38], 8                          # 004AECE2
.L4AECE6:
    mov eax, dword ptr [esp]                             # 004AECE6
    inc eax                                              # 004AECE9
    cmp al, byte ptr [ebp + 4]                           # 004AECEA
    jne .L4AECFE                                         # 004AECED
    test word ptr [ebp + 0xe0], 8                        # 004AECEF
    je .L4AECFE                                          # 004AECF8
    or byte ptr [esi + 0x38], 8                          # 004AECFA
.L4AECFE:
    mov ax, word ptr [esi + 0xa]                         # 004AECFE
    mov word ptr [edi + 0x3a], ax                        # 004AED02
    msvc_mov edi, esi                                    # 004AED06
    pop ecx                                              # 004AED08
    inc ecx                                              # 004AED09
    msvc_jmp .L4AE8E3                                    # 004AED0A
.L4AED0F:
    pop edi                                              # 004AED0F
    mov ax, word ptr [edi + 0xa]                         # 004AED10
    mov word ptr [esi + 0x3a], ax                        # 004AED14
    movzx esi, bx                                        # 004AED18
    shl esi, 7                                           # 004AED1B
    add_offset esi, _things                              # 004AED1E
    call _sub_4B7CC3                                     # 004AED24
    mov edi, dword ptr [__1136138]                       # 004AED29
    msvc_and eax, eax                                    # 004AED2F
    ret                                                  # 004AED31
.L4AED32:
    stc                                                  # 004AED32
    ret                                                  # 004AED33

    .global _sub_4AED34
_sub_4AED34:
    mov byte ptr [__9C68EA], 0x38                        # 004AED34
    mov dword ptr [__11360D4], 0                         # 004AED3B
    movzx esi, dx                                        # 004AED45
    shl esi, 7                                           # 004AED48
    add_offset esi, _things                              # 004AED4B
    cmp byte ptr [esi + 1], 0                            # 004AED51
    je .L4AED65                                          # 004AED55
    mov eax, dword ptr [esi + 0x62]                      # 004AED57
    sub dword ptr [__11360D4], eax                       # 004AED5A
    msvc_jmp .L4AEDF7                                    # 004AED60
.L4AED65:
    movzx esi, word ptr [esi + 0x3a]                     # 004AED65
    shl esi, 7                                           # 004AED69
    add_offset esi, _things                              # 004AED6C
    movzx esi, word ptr [esi + 0x3a]                     # 004AED72
    shl esi, 7                                           # 004AED76
    add_offset esi, _things                              # 004AED79
    movzx esi, word ptr [esi + 0x3a]                     # 004AED7F
    shl esi, 7                                           # 004AED83
    add_offset esi, _things                              # 004AED86
    cmp byte ptr [esi + 1], 6                            # 004AED8C
    je .L4AEDF7                                          # 004AED90
.L4AED92:
    mov eax, dword ptr [esi + 0x62]                      # 004AED92
    sub dword ptr [__11360D4], eax                       # 004AED95
    movzx esi, word ptr [esi + 0x3a]                     # 004AED9B
    shl esi, 7                                           # 004AED9F
    add_offset esi, _things                              # 004AEDA2
    movzx esi, word ptr [esi + 0x3a]                     # 004AEDA8
    shl esi, 7                                           # 004AEDAC
    add_offset esi, _things                              # 004AEDAF
    movzx esi, word ptr [esi + 0x3a]                     # 004AEDB5
    shl esi, 7                                           # 004AEDB9
    add_offset esi, _things                              # 004AEDBC
.L4AEDC2:
    cmp byte ptr [esi + 1], 6                            # 004AEDC2
    je .L4AEDF7                                          # 004AEDC6
    movzx edi, word ptr [esi + 0x3a]                     # 004AEDC8
    shl edi, 7                                           # 004AEDCC
    add_offset edi, _things                              # 004AEDCF
    movzx edi, word ptr [edi + 0x3a]                     # 004AEDD5
    shl edi, 7                                           # 004AEDD9
    add_offset edi, _things                              # 004AEDDC
    cmp byte ptr [edi + 1], 4                            # 004AEDE2
    je .L4AED92                                          # 004AEDE6
    movzx esi, word ptr [edi + 0x3a]                     # 004AEDE8
    shl esi, 7                                           # 004AEDEC
    add_offset esi, _things                              # 004AEDEF
    jmp .L4AEDC2                                         # 004AEDF5
.L4AEDF7:
    test bl, 1                                           # 004AEDF7
    jne .L4AEE54                                         # 004AEDFA
    movzx edx, dx                                        # 004AEDFC
    shl edx, 7                                           # 004AEDFF
    add_offset edx, _things                              # 004AEE02
    mov al, byte ptr [edx + 0x21]                        # 004AEE08
    mov esi, 0xffffffff                                  # 004AEE0B
    call _sub_431E6A                                     # 004AEE10
    jb .L4AEE4E                                          # 004AEE15
    movzx esi, word ptr [edx + 0x26]                     # 004AEE17
    shl esi, 7                                           # 004AEE1B
    add_offset esi, _things                              # 004AEE1E
    call _sub_4B0BDD                                     # 004AEE24
    jb .L4AEE4E                                          # 004AEE29
    mov ax, word ptr [esi + 0xe]                         # 004AEE2B
    mov word ptr [__9C68E0], ax                          # 004AEE2F
    mov ax, word ptr [esi + 0x10]                        # 004AEE35
    mov word ptr [__9C68E2], ax                          # 004AEE39
    mov ax, word ptr [esi + 0x12]                        # 004AEE3F
    mov word ptr [__9C68E4], ax                          # 004AEE43
    msvc_jmp .L4AEFAE                                    # 004AEE49
.L4AEE4E:
    mov ebx, 0x80000000                                  # 004AEE4E
    ret                                                  # 004AEE53
.L4AEE54:
    movzx esi, dx                                        # 004AEE54
    shl esi, 7                                           # 004AEE57
    add_offset esi, _things                              # 004AEE5A
    cmp byte ptr [esi + 1], 0                            # 004AEE60
    je .L4AEF9B                                          # 004AEE64
    mov dword ptr [__1136240], 0xffffffff                # 004AEE6A
    movzx ebp, word ptr [esi + 0x26]                     # 004AEE74
    shl ebp, 7                                           # 004AEE78
    add_offset ebp, _things                              # 004AEE7B
    cmp word ptr [ebp + 0x30], -1                        # 004AEE81
    je .L4AEEFF                                          # 004AEE86
    mov ax, word ptr [ebp + 0x30]                        # 004AEE88
    mov word ptr [__1136250], ax                         # 004AEE8C
    mov ax, word ptr [ebp + 0x32]                        # 004AEE92
    mov word ptr [__1136254], ax                         # 004AEE96
    mov al, byte ptr [ebp + 0x34]                        # 004AEE9C
    mov byte ptr [__1136258], al                         # 004AEE9F
    mov ax, word ptr [ebp + 0x2c]                        # 004AEEA4
    mov word ptr [__113624C], ax                         # 004AEEA8
    mov ax, word ptr [ebp + 0x2e]                        # 004AEEAE
    mov word ptr [__1136248], ax                         # 004AEEB2
    mov dword ptr [__1136240], ebp                       # 004AEEB8
    cmp byte ptr [ebp + 0x42], 2                         # 004AEEBE
    je .L4AEED5                                          # 004AEEC2
    cmp byte ptr [ebp + 0x42], 3                         # 004AEEC4
    je .L4AEEEB                                          # 004AEEC8
    push esi                                             # 004AEECA
    msvc_mov esi, ebp                                    # 004AEECB
    call _sub_4B08DD                                     # 004AEECD
    pop esi                                              # 004AEED2
    jmp .L4AEEFF                                         # 004AEED3
.L4AEED5:
    push esi                                             # 004AEED5
    mov di, word ptr [esi + 0x26]                        # 004AEED6
    mov bl, 1                                            # 004AEEDA
    call _sub_426B29                                     # 004AEEDC
    pop esi                                              # 004AEEE1
    mov byte ptr [__9C68EA], 0x38                        # 004AEEE2
    jmp .L4AEEFF                                         # 004AEEE9
.L4AEEEB:
    push esi                                             # 004AEEEB
    mov di, word ptr [esi + 0x26]                        # 004AEEEC
    mov bl, 1                                            # 004AEEF0
    call _sub_4279CC                                     # 004AEEF2
    pop esi                                              # 004AEEF7
    mov byte ptr [__9C68EA], 0x38                        # 004AEEF8
.L4AEEFF:
    push dword ptr [esi + 0x26]                          # 004AEEFF
    call _sub_4AEFB5                                     # 004AEF02
    pop edx                                              # 004AEF07
    push edx                                             # 004AEF08
    movzx esi, dx                                        # 004AEF09
    shl esi, 7                                           # 004AEF0C
    add_offset esi, _things                              # 004AEF0F
    call _sub_4AF7A4                                     # 004AEF15
    call _sub_4B7CC3                                     # 004AEF1A
    pop edx                                              # 004AEF26
    mov esi, dword ptr [__1136240]                       # 004AEF27
    cmp esi, -1                                          # 004AEF2D
    je .L4AEF8D                                          # 004AEF30
    movzx ebp, word ptr [esi + 0x3a]                     # 004AEF32
    shl ebp, 7                                           # 004AEF36
    add_offset ebp, _things                              # 004AEF39
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AEF3F
    shl ebp, 7                                           # 004AEF43
    add_offset ebp, _things                              # 004AEF46
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AEF4C
    shl ebp, 7                                           # 004AEF50
    add_offset ebp, _things                              # 004AEF53
    cmp byte ptr [ebp + 1], 6                            # 004AEF59
    je .L4AEF87                                          # 004AEF5D
    mov ax, word ptr [__1136250]                         # 004AEF5F
    mov cx, word ptr [__1136254]                         # 004AEF65
    mov dl, byte ptr [__1136258]                         # 004AEF6C
    movzx ebp, word ptr [__113624C]                      # 004AEF72
    movzx ebx, word ptr [__1136248]                      # 004AEF79
    call _sub_4B05E4                                     # 004AEF80
    jmp .L4AEF8D                                         # 004AEF85
.L4AEF87:
    mov word ptr [ebp + 0x4f], 0                         # 004AEF87
.L4AEF8D:
    mov byte ptr [__9C68EA], 0x38                        # 004AEF8D
    mov ebx, dword ptr [__11360D4]                       # 004AEF94
    ret                                                  # 004AEF9A
.L4AEF9B:
    call _sub_4AF06E                                     # 004AEF9B
    mov byte ptr [__9C68EA], 0x38                        # 004AEFA0
    mov ebx, dword ptr [__11360D4]                       # 004AEFA7
    ret                                                  # 004AEFAD
.L4AEFAE:
    mov ebx, dword ptr [__11360D4]                       # 004AEFAE
    ret                                                  # 004AEFB4

    .global _sub_4AEFB5
_sub_4AEFB5:
    mov al, 0x17                                         # 004AEFB5
    mov bx, word ptr [esi + 0x26]                        # 004AEFB7
    call _sub_4CB966                                     # 004AEFBB
    mov al, 0x5b                                         # 004AEFC0
    call _sub_4CB966                                     # 004AEFC2
    movzx ebp, word ptr [esi + 0x26]                     # 004AEFC7
    shl ebp, 7                                           # 004AEFCB
    add_offset ebp, _things                              # 004AEFCE
.L4AEFD4:
    movzx ebx, word ptr [ebp + 0x3a]                     # 004AEFD4
    shl ebx, 7                                           # 004AEFD8
    add_offset ebx, _things                              # 004AEFDB
    msvc_cmp ebx, esi                                    # 004AEFE1
    je .L4AEFE9                                          # 004AEFE3
    msvc_mov ebp, ebx                                    # 004AEFE5
    jmp .L4AEFD4                                         # 004AEFE7
.L4AEFE9:
    msvc_mov ebx, esi                                    # 004AEFE9
    movzx ebx, word ptr [ebx + 0x3a]                     # 004AEFEB
    shl ebx, 7                                           # 004AEFEF
    add_offset ebx, _things                              # 004AEFF2
    movzx ebx, word ptr [ebx + 0x3a]                     # 004AEFF8
    shl ebx, 7                                           # 004AEFFC
    add_offset ebx, _things                              # 004AEFFF
    msvc_mov edx, ebx                                    # 004AF005
    movzx ebx, word ptr [ebx + 0x3a]                     # 004AF007
    shl ebx, 7                                           # 004AF00B
    add_offset ebx, _things                              # 004AF00E
.L4AF014:
    cmp byte ptr [ebx + 1], 6                            # 004AF014
    je .L4AF04B                                          # 004AF018
    movzx ecx, word ptr [ebx + 0x3a]                     # 004AF01A
    shl ecx, 7                                           # 004AF01E
    add_offset ecx, _things                              # 004AF021
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AF027
    shl ecx, 7                                           # 004AF02B
    add_offset ecx, _things                              # 004AF02E
    cmp byte ptr [ecx + 1], 4                            # 004AF034
    je .L4AF04B                                          # 004AF038
    msvc_mov edx, ecx                                    # 004AF03A
    movzx ebx, word ptr [ecx + 0x3a]                     # 004AF03C
    shl ebx, 7                                           # 004AF040
    add_offset ebx, _things                              # 004AF043
    jmp .L4AF014                                         # 004AF049
.L4AF04B:
    mov ax, word ptr [ebx + 0xa]                         # 004AF04B
    mov word ptr [ebp + 0x3a], ax                        # 004AF04F
.L4AF053:
    movzx edi, word ptr [esi + 0x3a]                     # 004AF053
    shl edi, 7                                           # 004AF057
    add_offset edi, _things                              # 004AF05A
    call _sub_47024A                                     # 004AF060
    msvc_cmp esi, edx                                    # 004AF065
    je .L4AF06D                                          # 004AF067
    msvc_mov esi, edi                                    # 004AF069
    jmp .L4AF053                                         # 004AF06B
.L4AF06D:
    ret                                                  # 004AF06D

    .global _sub_4AF06E
_sub_4AF06E:
    mov cl, 0x17                                         # 004AF06E
    mov dx, word ptr [esi + 0xa]                         # 004AF070
    call _sub_4CC692                                     # 004AF074
    push esi                                             # 004AF079
    mov cl, 0x1b                                         # 004AF07A
    movzx dx, byte ptr [esi + 0x21]                      # 004AF07C
    call _sub_4C9B56                                     # 004AF081
    je .L4AF097                                          # 004AF086
    call _sub_4CA4BD                                     # 004AF088
    mov dword ptr [__11364E8], 0xffffffff                # 004AF08D
.L4AF097:
    pop esi                                              # 004AF097
    msvc_mov ebx, esi                                    # 004AF098
    call _sub_4C1D19                                     # 004AF09A
    cmp byte ptr [esi + 0x42], 2                         # 004AF09F
    je .L4AF0B2                                          # 004AF0A3
    cmp byte ptr [esi + 0x42], 3                         # 004AF0A5
    je .L4AF0C1                                          # 004AF0A9
    call _sub_4B08DD                                     # 004AF0AB
    jmp .L4AF0CE                                         # 004AF0B0
.L4AF0B2:
    push esi                                             # 004AF0B2
    mov di, word ptr [esi + 0xa]                         # 004AF0B3
    mov bl, 1                                            # 004AF0B7
    call _sub_426B29                                     # 004AF0B9
    pop esi                                              # 004AF0BE
    jmp .L4AF0CE                                         # 004AF0BF
.L4AF0C1:
    push esi                                             # 004AF0C1
    mov di, word ptr [esi + 0xa]                         # 004AF0C2
    mov bl, 1                                            # 004AF0C6
    call _sub_4279CC                                     # 004AF0C8
    pop esi                                              # 004AF0CD
.L4AF0CE:
    push esi                                             # 004AF0CE
    movzx esi, word ptr [esi + 0x3a]                     # 004AF0CF
    shl esi, 7                                           # 004AF0D3
    add_offset esi, _things                              # 004AF0D6
    movzx esi, word ptr [esi + 0x3a]                     # 004AF0DC
    shl esi, 7                                           # 004AF0E0
    add_offset esi, _things                              # 004AF0E3
    movzx esi, word ptr [esi + 0x3a]                     # 004AF0E9
    shl esi, 7                                           # 004AF0ED
    add_offset esi, _things                              # 004AF0F0
    cmp byte ptr [esi + 1], 6                            # 004AF0F6
    je .L4AF104                                          # 004AF0FA
    call _sub_4AEFB5                                     # 004AF0FC
    pop esi                                              # 004AF101
    jmp .L4AF0CE                                         # 004AF102
.L4AF104:
    pop esi                                              # 004AF104
    movzx eax, word ptr [esi + 0x36]                     # 004AF105
    call _sub_4B1E77                                     # 004AF109
    call _sub_470334                                     # 004AF10E
    mov al, 3                                            # 004AF113
    mov dx, word ptr [esi + 0xa]                         # 004AF115
    call _sub_42851C                                     # 004AF119
    mov bl, byte ptr [esi + 0x21]                        # 004AF11E
    push ebx                                             # 004AF121
    movzx edi, word ptr [esi + 0x3a]                     # 004AF122
    shl edi, 7                                           # 004AF126
    add_offset edi, _things                              # 004AF129
    call _sub_47024A                                     # 004AF12F
    msvc_mov esi, edi                                    # 004AF134
    movzx edi, word ptr [esi + 0x3a]                     # 004AF136
    shl edi, 7                                           # 004AF13A
    add_offset edi, _things                              # 004AF13D
    call _sub_47024A                                     # 004AF143
    msvc_mov esi, edi                                    # 004AF148
    movzx edi, word ptr [esi + 0x3a]                     # 004AF14A
    shl edi, 7                                           # 004AF14E
    add_offset edi, _things                              # 004AF151
    call _sub_47024A                                     # 004AF157
    msvc_mov esi, edi                                    # 004AF15C
    call _sub_47024A                                     # 004AF15E
    pop ebx                                              # 004AF163
    call _sub_437ED0                                     # 004AF164
    ret                                                  # 004AF169

    .global _sub_4AF16A
_sub_4AF16A:
    pushal                                               # 004AF16A
    msvc_mov edi, esi                                    # 004AF16B
    mov byte ptr [edi + 0x51], 0                         # 004AF16D
    movzx edi, word ptr [edi + 0x3a]                     # 004AF171
    shl edi, 7                                           # 004AF175
    add_offset edi, _things                              # 004AF178
    mov byte ptr [edi + 0x51], 0                         # 004AF17E
    movzx edi, word ptr [edi + 0x3a]                     # 004AF182
    shl edi, 7                                           # 004AF186
    add_offset edi, _things                              # 004AF189
    mov byte ptr [edi + 0x51], 0                         # 004AF18F
    msvc_mov edi, esi                                    # 004AF193
    movzx esi, word ptr [edi + 0x26]                     # 004AF195
    shl esi, 7                                           # 004AF199
    add_offset esi, _things                              # 004AF19C
    call _sub_4B7CC3                                     # 004AF1A2
    mov al, 0x17                                         # 004AF1A7
    mov bx, word ptr [esi + 0xa]                         # 004AF1A9
    call _sub_4CB966                                     # 004AF1AD
    msvc_mov esi, edi                                    # 004AF1B2
    call _sub_4AC039                                     # 004AF1B4
    movzx esi, word ptr [esi + 0x3a]                     # 004AF1B9
    shl esi, 7                                           # 004AF1BD
    add_offset esi, _things                              # 004AF1C0
    call _sub_4AC039                                     # 004AF1C6
    movzx esi, word ptr [esi + 0x3a]                     # 004AF1CB
    shl esi, 7                                           # 004AF1CF
    add_offset esi, _things                              # 004AF1D2
    call _sub_4AC039                                     # 004AF1D8
    popal                                                # 004AF1DD
    ret                                                  # 004AF1DE

    .global _sub_4AF1DF
_sub_4AF1DF:
    mov byte ptr [__9C68EA], 4                           # 004AF1DF
    test bl, 1                                           # 004AF1E6
    jne .L4AF2A1                                         # 004AF1E9
    movzx edx, dx                                        # 004AF1EF
    shl edx, 7                                           # 004AF1F2
    add_offset edx, _things                              # 004AF1F5
    mov al, byte ptr [edx + 0x21]                        # 004AF1FB
    mov esi, 0xffffffff                                  # 004AF1FE
    call _sub_431E6A                                     # 004AF203
    jb .L4AF29B                                          # 004AF208
    movzx edi, di                                        # 004AF20E
    shl edi, 7                                           # 004AF211
    add_offset edi, _things                              # 004AF214
    mov al, byte ptr [edi + 0x21]                        # 004AF21A
    mov esi, 0xffffffff                                  # 004AF21D
    call _sub_431E6A                                     # 004AF222
    jb .L4AF29B                                          # 004AF227
    movzx esi, word ptr [edx + 0x26]                     # 004AF229
    shl esi, 7                                           # 004AF22D
    add_offset esi, _things                              # 004AF230
    call _sub_4B0BDD                                     # 004AF236
    jb .L4AF29B                                          # 004AF23B
    movzx esi, word ptr [edi + 0x26]                     # 004AF23D
    shl esi, 7                                           # 004AF241
    add_offset esi, _things                              # 004AF244
    call _sub_4B0BDD                                     # 004AF24A
    jb .L4AF29B                                          # 004AF24F
    mov al, byte ptr [edx + 0x35]                        # 004AF251
    cmp al, byte ptr [edi + 0x35]                        # 004AF254
    jne .L4AF292                                         # 004AF257
    movzx eax, word ptr [edx + 0x40]                     # 004AF259
    movzx esi, word ptr [edi + 0x26]                     # 004AF25D
    shl esi, 7                                           # 004AF261
    add_offset esi, _things                              # 004AF264
    call _sub_4B8FA2                                     # 004AF26A
    jb .L4AF29B                                          # 004AF26F
    mov ax, word ptr [edi + 0xe]                         # 004AF271
    mov word ptr [__9C68E0], ax                          # 004AF275
    mov ax, word ptr [edi + 0x10]                        # 004AF27B
    mov word ptr [__9C68E2], ax                          # 004AF27F
    mov ax, word ptr [edi + 0x12]                        # 004AF285
    mov word ptr [__9C68E4], ax                          # 004AF289
    msvc_xor ebx, ebx                                    # 004AF28F
    ret                                                  # 004AF291
.L4AF292:
    mov word ptr [__9C68E6], 0x14f                       # 004AF292
.L4AF29B:
    mov ebx, 0x80000000                                  # 004AF29B
    ret                                                  # 004AF2A0
.L4AF2A1:
    movzx esi, dx                                        # 004AF2A1
    shl esi, 7                                           # 004AF2A4
    add_offset esi, _things                              # 004AF2A7
    movzx edi, di                                        # 004AF2AD
    shl edi, 7                                           # 004AF2B0
    add_offset edi, _things                              # 004AF2B3
    mov ax, word ptr [esi + 0x26]                        # 004AF2B9
    cmp ax, word ptr [edi + 0x26]                        # 004AF2BD
    je .L4AF2C8                                          # 004AF2C1
    call _sub_4AF16A                                     # 004AF2C3
.L4AF2C8:
    mov dword ptr [__1136240], 0xffffffff                # 004AF2C8
    movzx ebp, word ptr [esi + 0x26]                     # 004AF2D2
    shl ebp, 7                                           # 004AF2D6
    add_offset ebp, _things                              # 004AF2D9
    cmp word ptr [ebp + 0x30], -1                        # 004AF2DF
    je .L4AF363                                          # 004AF2E4
    mov ax, word ptr [ebp + 0x30]                        # 004AF2E6
    mov word ptr [__1136250], ax                         # 004AF2EA
    mov ax, word ptr [ebp + 0x32]                        # 004AF2F0
    mov word ptr [__1136254], ax                         # 004AF2F4
    mov al, byte ptr [ebp + 0x34]                        # 004AF2FA
    mov byte ptr [__1136258], al                         # 004AF2FD
    mov ax, word ptr [ebp + 0x2c]                        # 004AF302
    mov word ptr [__113624C], ax                         # 004AF306
    mov ax, word ptr [ebp + 0x2e]                        # 004AF30C
    mov word ptr [__1136248], ax                         # 004AF310
    mov dword ptr [__1136240], ebp                       # 004AF316
    cmp byte ptr [ebp + 0x42], 2                         # 004AF31C
    je .L4AF335                                          # 004AF320
    cmp byte ptr [ebp + 0x42], 3                         # 004AF322
    je .L4AF34D                                          # 004AF326
    push edi                                             # 004AF328
    push esi                                             # 004AF329
    msvc_mov esi, ebp                                    # 004AF32A
    call _sub_4B08DD                                     # 004AF32C
    pop esi                                              # 004AF331
    pop edi                                              # 004AF332
    jmp .L4AF363                                         # 004AF333
.L4AF335:
    push edi                                             # 004AF335
    push esi                                             # 004AF336
    mov di, word ptr [ebp + 0x26]                        # 004AF337
    mov bl, 1                                            # 004AF33B
    call _sub_426B29                                     # 004AF33D
    pop esi                                              # 004AF342
    pop edi                                              # 004AF343
    mov byte ptr [__9C68EA], 4                           # 004AF344
    jmp .L4AF363                                         # 004AF34B
.L4AF34D:
    push edi                                             # 004AF34D
    push esi                                             # 004AF34E
    mov di, word ptr [ebp + 0x26]                        # 004AF34F
    mov bl, 1                                            # 004AF353
    call _sub_4279CC                                     # 004AF355
    pop esi                                              # 004AF35A
    pop edi                                              # 004AF35B
    mov byte ptr [__9C68EA], 4                           # 004AF35C
.L4AF363:
    mov dword ptr [__1136244], 0xffffffff                # 004AF363
    movzx ebp, word ptr [edi + 0x26]                     # 004AF36D
    shl ebp, 7                                           # 004AF371
    add_offset ebp, _things                              # 004AF374
    cmp word ptr [ebp + 0x30], -1                        # 004AF37A
    je .L4AF3FE                                          # 004AF37F
    mov ax, word ptr [ebp + 0x30]                        # 004AF381
    mov word ptr [__1136252], ax                         # 004AF385
    mov ax, word ptr [ebp + 0x32]                        # 004AF38B
    mov word ptr [__1136256], ax                         # 004AF38F
    mov al, byte ptr [ebp + 0x34]                        # 004AF395
    mov byte ptr [__1136259], al                         # 004AF398
    mov ax, word ptr [ebp + 0x2c]                        # 004AF39D
    mov word ptr [__113624E], ax                         # 004AF3A1
    mov ax, word ptr [ebp + 0x2e]                        # 004AF3A7
    mov word ptr [__113624A], ax                         # 004AF3AB
    mov dword ptr [__1136244], ebp                       # 004AF3B1
    cmp byte ptr [ebp + 0x42], 2                         # 004AF3B7
    je .L4AF3D0                                          # 004AF3BB
    cmp byte ptr [ebp + 0x42], 3                         # 004AF3BD
    je .L4AF3E8                                          # 004AF3C1
    push edi                                             # 004AF3C3
    push esi                                             # 004AF3C4
    msvc_mov esi, ebp                                    # 004AF3C5
    call _sub_4B08DD                                     # 004AF3C7
    pop esi                                              # 004AF3CC
    pop edi                                              # 004AF3CD
    jmp .L4AF3FE                                         # 004AF3CE
.L4AF3D0:
    push edi                                             # 004AF3D0
    push esi                                             # 004AF3D1
    mov di, word ptr [ebp + 0x26]                        # 004AF3D2
    mov bl, 1                                            # 004AF3D6
    call _sub_426B29                                     # 004AF3D8
    pop esi                                              # 004AF3DD
    pop edi                                              # 004AF3DE
    mov byte ptr [__9C68EA], 4                           # 004AF3DF
    jmp .L4AF3FE                                         # 004AF3E6
.L4AF3E8:
    push edi                                             # 004AF3E8
    push esi                                             # 004AF3E9
    mov di, word ptr [ebp + 0x26]                        # 004AF3EA
    mov bl, 1                                            # 004AF3EE
    call _sub_4279CC                                     # 004AF3F0
    pop esi                                              # 004AF3F5
    pop edi                                              # 004AF3F6
    mov byte ptr [__9C68EA], 4                           # 004AF3F7
.L4AF3FE:
    push dword ptr [esi + 0x26]                          # 004AF3FE
    call _sub_4AF4D6                                     # 004AF401
    pop edx                                              # 004AF406
    push edx                                             # 004AF407
    push edi                                             # 004AF408
    push esi                                             # 004AF409
    movzx esi, word ptr [esi + 0x26]                     # 004AF40A
    shl esi, 7                                           # 004AF40E
    add_offset esi, _things                              # 004AF411
    call _sub_4AF7A4                                     # 004AF417
    call _sub_4B7CC3                                     # 004AF41C
    pop esi                                              # 004AF421
    pop edi                                              # 004AF422
    pop edx                                              # 004AF423
    push edi                                             # 004AF424
    push esi                                             # 004AF425
    cmp dx, word ptr [esi + 0x26]                        # 004AF426
    je .L4AF442                                          # 004AF42A
    movzx esi, dx                                        # 004AF42C
    shl esi, 7                                           # 004AF42F
    add_offset esi, _things                              # 004AF432
    call _sub_4AF7A4                                     # 004AF438
    call _sub_4B7CC3                                     # 004AF43D
.L4AF442:
    pop esi                                              # 004AF442
    pop edi                                              # 004AF443
    mov esi, dword ptr [__1136240]                       # 004AF444
    cmp esi, -1                                          # 004AF44A
    je .L4AF4A2                                          # 004AF44D
    movzx ebp, word ptr [esi + 0x3a]                     # 004AF44F
    shl ebp, 7                                           # 004AF453
    add_offset ebp, _things                              # 004AF456
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF45C
    shl ebp, 7                                           # 004AF460
    add_offset ebp, _things                              # 004AF463
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF469
    shl ebp, 7                                           # 004AF46D
    add_offset ebp, _things                              # 004AF470
    cmp byte ptr [ebp + 1], 6                            # 004AF476
    je .L4AF4A2                                          # 004AF47A
    mov ax, word ptr [__1136250]                         # 004AF47C
    mov cx, word ptr [__1136254]                         # 004AF482
    mov dl, byte ptr [__1136258]                         # 004AF489
    movzx ebp, word ptr [__113624C]                      # 004AF48F
    movzx ebx, word ptr [__1136248]                      # 004AF496
    call _sub_4B05E4                                     # 004AF49D
.L4AF4A2:
    mov esi, dword ptr [__1136244]                       # 004AF4A2
    cmp esi, -1                                          # 004AF4A8
    je .L4AF4D3                                          # 004AF4AB
    mov ax, word ptr [__1136252]                         # 004AF4AD
    mov cx, word ptr [__1136256]                         # 004AF4B3
    mov dl, byte ptr [__1136259]                         # 004AF4BA
    movzx ebp, word ptr [__113624E]                      # 004AF4C0
    movzx ebx, word ptr [__113624A]                      # 004AF4C7
    call _sub_4B05E4                                     # 004AF4CE
.L4AF4D3:
    msvc_xor ebx, ebx                                    # 004AF4D3
    ret                                                  # 004AF4D5

    .global _sub_4AF4D6
_sub_4AF4D6:
    msvc_cmp edi, esi                                    # 004AF4D6
    je .L4AF5E0                                          # 004AF4D8
    mov al, 0x17                                         # 004AF4DE
    mov bx, word ptr [esi + 0x26]                        # 004AF4E0
    call _sub_4CB966                                     # 004AF4E4
    mov al, 0x17                                         # 004AF4E9
    mov bx, word ptr [edi + 0x26]                        # 004AF4EB
    call _sub_4CB966                                     # 004AF4EF
    mov al, 0x5b                                         # 004AF4F4
    call _sub_4CB966                                     # 004AF4F6
    movzx ebp, word ptr [esi + 0x26]                     # 004AF4FB
    shl ebp, 7                                           # 004AF4FF
    add_offset ebp, _things                              # 004AF502
.L4AF508:
    movzx ebx, word ptr [ebp + 0x3a]                     # 004AF508
    shl ebx, 7                                           # 004AF50C
    add_offset ebx, _things                              # 004AF50F
    msvc_cmp ebx, esi                                    # 004AF515
    je .L4AF51D                                          # 004AF517
    msvc_mov ebp, ebx                                    # 004AF519
    jmp .L4AF508                                         # 004AF51B
.L4AF51D:
    msvc_mov ebx, esi                                    # 004AF51D
    movzx ebx, word ptr [ebx + 0x3a]                     # 004AF51F
    shl ebx, 7                                           # 004AF523
    add_offset ebx, _things                              # 004AF526
    movzx ebx, word ptr [ebx + 0x3a]                     # 004AF52C
    shl ebx, 7                                           # 004AF530
    add_offset ebx, _things                              # 004AF533
    msvc_mov edx, ebx                                    # 004AF539
    movzx ebx, word ptr [ebx + 0x3a]                     # 004AF53B
    shl ebx, 7                                           # 004AF53F
    add_offset ebx, _things                              # 004AF542
.L4AF548:
    cmp byte ptr [ebx + 1], 6                            # 004AF548
    je .L4AF57F                                          # 004AF54C
    movzx ecx, word ptr [ebx + 0x3a]                     # 004AF54E
    shl ecx, 7                                           # 004AF552
    add_offset ecx, _things                              # 004AF555
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AF55B
    shl ecx, 7                                           # 004AF55F
    add_offset ecx, _things                              # 004AF562
    cmp byte ptr [ecx + 1], 4                            # 004AF568
    je .L4AF57F                                          # 004AF56C
    msvc_mov edx, ecx                                    # 004AF56E
    movzx ebx, word ptr [ecx + 0x3a]                     # 004AF570
    shl ebx, 7                                           # 004AF574
    add_offset ebx, _things                              # 004AF577
    jmp .L4AF548                                         # 004AF57D
.L4AF57F:
    mov ax, word ptr [ebx + 0xa]                         # 004AF57F
    mov word ptr [ebp + 0x3a], ax                        # 004AF583
    movzx ebp, word ptr [edi + 0x26]                     # 004AF587
    shl ebp, 7                                           # 004AF58B
    add_offset ebp, _things                              # 004AF58E
.L4AF594:
    movzx ebx, word ptr [ebp + 0x3a]                     # 004AF594
    shl ebx, 7                                           # 004AF598
    add_offset ebx, _things                              # 004AF59B
    msvc_cmp ebx, edi                                    # 004AF5A1
    je .L4AF5A9                                          # 004AF5A3
    msvc_mov ebp, ebx                                    # 004AF5A5
    jmp .L4AF594                                         # 004AF5A7
.L4AF5A9:
    mov ax, word ptr [esi + 0xa]                         # 004AF5A9
    mov word ptr [ebp + 0x3a], ax                        # 004AF5AD
    mov ax, word ptr [edi + 0xa]                         # 004AF5B1
    mov word ptr [edx + 0x3a], ax                        # 004AF5B5
    mov ax, word ptr [edi + 0x26]                        # 004AF5B9
    movzx ebp, ax                                        # 004AF5BD
    shl ebp, 7                                           # 004AF5C0
    add_offset ebp, _things                              # 004AF5C3
.L4AF5C9:
    mov word ptr [ebp + 0x26], ax                        # 004AF5C9
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF5CD
    shl ebp, 7                                           # 004AF5D1
    add_offset ebp, _things                              # 004AF5D4
    cmp byte ptr [ebp + 1], 6                            # 004AF5DA
    jne .L4AF5C9                                         # 004AF5DE
.L4AF5E0:
    ret                                                  # 004AF5E0

    .global _sub_4AF5E1
_sub_4AF5E1:
    push eax                                             # 004AF5E1
    push ebx                                             # 004AF5E2
    push edx                                             # 004AF5E3
    push edi                                             # 004AF5E4
    push ebp                                             # 004AF5E5
    push esi                                             # 004AF5E6
    movzx esi, word ptr [esi + 0x3a]                     # 004AF5E7
    shl esi, 7                                           # 004AF5EB
    add_offset esi, _things                              # 004AF5EE
    movzx esi, word ptr [esi + 0x3a]                     # 004AF5F4
    shl esi, 7                                           # 004AF5F8
    add_offset esi, _things                              # 004AF5FB
    mov edi, 0xffffffff                                  # 004AF601
    mov edx, 0xffffffff                                  # 004AF606
    movzx esi, word ptr [esi + 0x3a]                     # 004AF60B
    shl esi, 7                                           # 004AF60F
    add_offset esi, _things                              # 004AF612
.L4AF618:
    cmp byte ptr [esi + 1], 6                            # 004AF618
    je .L4AF79D                                          # 004AF61C
    movzx ebp, word ptr [esi + 0x3a]                     # 004AF622
    shl ebp, 7                                           # 004AF626
    add_offset ebp, _things                              # 004AF629
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF62F
    shl ebp, 7                                           # 004AF633
    add_offset ebp, _things                              # 004AF636
    test byte ptr [ebp + 0x38], 8                        # 004AF63C
    je .L4AF76D                                          # 004AF640
    cmp byte ptr [ebp + 1], 4                            # 004AF646
    jne .L4AF720                                         # 004AF64A
    mov byte ptr [esi + 0x39], 0xff                      # 004AF650
    movzx ebp, word ptr [esi + 0x3a]                     # 004AF654
    shl ebp, 7                                           # 004AF658
    add_offset ebp, _things                              # 004AF65B
    mov byte ptr [ebp + 0x39], 0xff                      # 004AF661
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF665
    shl ebp, 7                                           # 004AF669
    add_offset ebp, _things                              # 004AF66C
    mov byte ptr [ebp + 0x39], 0xff                      # 004AF672
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF676
    shl ebp, 7                                           # 004AF67A
    add_offset ebp, _things                              # 004AF67D
    movzx ebx, word ptr [ebp + 0x40]                     # 004AF683
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004AF687
    movzx eax, byte ptr [ebp + 0x54]                     # 004AF68E
    imul eax, eax, 6                                     # 004AF692
    mov al, byte ptr [eax + ebx + 0x26]                  # 004AF695
    mov byte ptr [ebp + 0x39], al                        # 004AF699
    cmp edi, -1                                          # 004AF69C
    je .L4AF76D                                          # 004AF69F
    movzx ebp, word ptr [edi + 0x3a]                     # 004AF6A5
    shl ebp, 7                                           # 004AF6A9
    add_offset ebp, _things                              # 004AF6AC
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF6B2
    shl ebp, 7                                           # 004AF6B6
    add_offset ebp, _things                              # 004AF6B9
    test byte ptr [ebp + 0x38], 8                        # 004AF6BF
    je .L4AF76D                                          # 004AF6C3
    movzx ebx, word ptr [esi + 0x40]                     # 004AF6C9
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004AF6CD
    movzx eax, byte ptr [esi + 0x54]                     # 004AF6D4
    imul eax, eax, 6                                     # 004AF6D8
    mov al, byte ptr [eax + ebx + 0x26]                  # 004AF6DB
    mov byte ptr [esi + 0x39], al                        # 004AF6DF
    movzx ebp, word ptr [esi + 0x3a]                     # 004AF6E2
    shl ebp, 7                                           # 004AF6E6
    add_offset ebp, _things                              # 004AF6E9
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF6EF
    shl ebp, 7                                           # 004AF6F3
    add_offset ebp, _things                              # 004AF6F6
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF6FC
    shl ebp, 7                                           # 004AF700
    add_offset ebp, _things                              # 004AF703
    mov byte ptr [ebp + 0x39], 0xff                      # 004AF709
    movzx ebp, word ptr [edx + 0x3a]                     # 004AF70D
    shl ebp, 7                                           # 004AF711
    add_offset ebp, _things                              # 004AF714
    mov byte ptr [ebp + 0x39], 0xff                      # 004AF71A
    jmp .L4AF76D                                         # 004AF71E
.L4AF720:
    mov byte ptr [esi + 0x39], 0xff                      # 004AF720
    movzx ebp, word ptr [esi + 0x3a]                     # 004AF724
    shl ebp, 7                                           # 004AF728
    add_offset ebp, _things                              # 004AF72B
    mov byte ptr [ebp + 0x39], 0xff                      # 004AF731
    movzx ebp, word ptr [ebp + 0x3a]                     # 004AF735
    shl ebp, 7                                           # 004AF739
    add_offset ebp, _things                              # 004AF73C
    mov byte ptr [ebp + 0x39], 0xff                      # 004AF742
    movzx ebp, word ptr [edi + 0x3a]                     # 004AF746
    shl ebp, 7                                           # 004AF74A
    add_offset ebp, _things                              # 004AF74D
    movzx ebx, word ptr [ebp + 0x40]                     # 004AF753
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004AF757
    movzx eax, byte ptr [esi + 0x54]                     # 004AF75E
    dec eax                                              # 004AF762
    imul eax, eax, 6                                     # 004AF763
    mov al, byte ptr [eax + ebx + 0x27]                  # 004AF766
    mov byte ptr [ebp + 0x39], al                        # 004AF76A
.L4AF76D:
    msvc_mov edx, edi                                    # 004AF76D
    msvc_mov edi, esi                                    # 004AF76F
    movzx esi, word ptr [esi + 0x3a]                     # 004AF771
    shl esi, 7                                           # 004AF775
    add_offset esi, _things                              # 004AF778
    movzx esi, word ptr [esi + 0x3a]                     # 004AF77E
    shl esi, 7                                           # 004AF782
    add_offset esi, _things                              # 004AF785
    movzx esi, word ptr [esi + 0x3a]                     # 004AF78B
    shl esi, 7                                           # 004AF78F
    add_offset esi, _things                              # 004AF792
    msvc_jmp .L4AF618                                    # 004AF798
.L4AF79D:
    pop esi                                              # 004AF79D
    pop ebp                                              # 004AF79E
    pop edi                                              # 004AF79F
    pop edx                                              # 004AF7A0
    pop ebx                                              # 004AF7A1
    pop eax                                              # 004AF7A2
    ret                                                  # 004AF7A3

    .global _sub_4AF7A4
_sub_4AF7A4:
    push esi                                             # 004AF7A4
    movzx esi, word ptr [esi + 0x3a]                     # 004AF7A5
    shl esi, 7                                           # 004AF7A9
    add_offset esi, _things                              # 004AF7AC
    movzx esi, word ptr [esi + 0x3a]                     # 004AF7B2
    shl esi, 7                                           # 004AF7B6
    add_offset esi, _things                              # 004AF7B9
    movzx edi, word ptr [esi + 0x3a]                     # 004AF7BF
    shl edi, 7                                           # 004AF7C3
    add_offset edi, _things                              # 004AF7C6
    cmp byte ptr [edi + 1], 6                            # 004AF7CC
    je .L4AFFF1                                          # 004AF7D0
    mov eax, dword ptr [esp]                             # 004AF7D6
    test word ptr [eax + 0xc], 0x80                      # 004AF7D9
    jne .L4AF8EB                                         # 004AF7DF
    push esi                                             # 004AF7E5
    movzx esi, word ptr [esi + 0x3a]                     # 004AF7E6
    shl esi, 7                                           # 004AF7EA
    add_offset esi, _things                              # 004AF7ED
    mov edi, 0xffffffff                                  # 004AF7F3
.L4AF7F8:
    cmp byte ptr [esi + 1], 6                            # 004AF7F8
    je .L4AF8EA                                          # 004AF7FC
    movzx ebp, word ptr [esi + 0x40]                     # 004AF802
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AF806
    cmp word ptr [ebp + 0xd8], 0                         # 004AF80D
    je .L4AF883                                          # 004AF815
    movzx ebx, word ptr [esi + 0x3a]                     # 004AF817
    shl ebx, 7                                           # 004AF81B
    add_offset ebx, _things                              # 004AF81E
    movzx ebx, word ptr [ebx + 0x3a]                     # 004AF824
    shl ebx, 7                                           # 004AF828
    add_offset ebx, _things                              # 004AF82B
    movzx ebx, word ptr [ebx + 0x3a]                     # 004AF831
    shl ebx, 7                                           # 004AF835
    add_offset ebx, _things                              # 004AF838
.L4AF83E:
    cmp byte ptr [ebx + 1], 6                            # 004AF83E
    je .L4AF873                                          # 004AF842
    movzx ecx, word ptr [ebx + 0x3a]                     # 004AF844
    shl ecx, 7                                           # 004AF848
    add_offset ecx, _things                              # 004AF84B
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AF851
    shl ecx, 7                                           # 004AF855
    add_offset ecx, _things                              # 004AF858
    cmp byte ptr [ecx + 1], 4                            # 004AF85E
    je .L4AF873                                          # 004AF862
    movzx ebx, word ptr [ecx + 0x3a]                     # 004AF864
    shl ebx, 7                                           # 004AF868
    add_offset ebx, _things                              # 004AF86B
    jmp .L4AF83E                                         # 004AF871
.L4AF873:
    push ebx                                             # 004AF873
    push edi                                             # 004AF874
    cmp edi, -1                                          # 004AF875
    je .L4AF87F                                          # 004AF878
    call _sub_4AF4D6                                     # 004AF87A
.L4AF87F:
    pop edi                                              # 004AF87F
    pop esi                                              # 004AF880
    jmp .L4AF8EA                                         # 004AF881
.L4AF883:
    cmp edi, -1                                          # 004AF883
    jne .L4AF88A                                         # 004AF886
    msvc_mov edi, esi                                    # 004AF888
.L4AF88A:
    movzx esi, word ptr [esi + 0x3a]                     # 004AF88A
    shl esi, 7                                           # 004AF88E
    add_offset esi, _things                              # 004AF891
    movzx esi, word ptr [esi + 0x3a]                     # 004AF897
    shl esi, 7                                           # 004AF89B
    add_offset esi, _things                              # 004AF89E
    movzx esi, word ptr [esi + 0x3a]                     # 004AF8A4
    shl esi, 7                                           # 004AF8A8
    add_offset esi, _things                              # 004AF8AB
.L4AF8B1:
    cmp byte ptr [esi + 1], 6                            # 004AF8B1
    je .L4AF8EA                                          # 004AF8B5
    movzx ecx, word ptr [esi + 0x3a]                     # 004AF8B7
    shl ecx, 7                                           # 004AF8BB
    add_offset ecx, _things                              # 004AF8BE
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AF8C4
    shl ecx, 7                                           # 004AF8C8
    add_offset ecx, _things                              # 004AF8CB
    cmp byte ptr [ecx + 1], 4                            # 004AF8D1
    je .L4AF7F8                                          # 004AF8D5
    movzx esi, word ptr [ecx + 0x3a]                     # 004AF8DB
    shl esi, 7                                           # 004AF8DF
    add_offset esi, _things                              # 004AF8E2
    jmp .L4AF8B1                                         # 004AF8E8
.L4AF8EA:
    pop esi                                              # 004AF8EA
.L4AF8EB:
    push esi                                             # 004AF8EB
    movzx esi, word ptr [esi + 0x3a]                     # 004AF8EC
    shl esi, 7                                           # 004AF8F0
    add_offset esi, _things                              # 004AF8F3
    msvc_xor edx, edx                                    # 004AF8F9
.L4AF8FB:
    cmp byte ptr [esi + 1], 6                            # 004AF8FB
    je .L4AF9B5                                          # 004AF8FF
    movzx ebp, word ptr [esi + 0x40]                     # 004AF905
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AF909
    test word ptr [ebp + 0xe0], 1                        # 004AF910
    je .L4AF955                                          # 004AF919
    inc edx                                              # 004AF91B
    movzx ecx, word ptr [esi + 0x3a]                     # 004AF91C
    shl ecx, 7                                           # 004AF920
    add_offset ecx, _things                              # 004AF923
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AF929
    shl ecx, 7                                           # 004AF92D
    add_offset ecx, _things                              # 004AF930
    test edx, 1                                          # 004AF936
    je .L4AF946                                          # 004AF93C
    test byte ptr [ecx + 0x38], 2                        # 004AF93E
    jne .L4AF94E                                         # 004AF942
    jmp .L4AF955                                         # 004AF944
.L4AF946:
    test byte ptr [ecx + 0x38], 2                        # 004AF946
    je .L4AF94E                                          # 004AF94A
    jmp .L4AF955                                         # 004AF94C
.L4AF94E:
    push edx                                             # 004AF94E
    call _sub_4AFFF3                                     # 004AF94F
    pop edx                                              # 004AF954
.L4AF955:
    movzx esi, word ptr [esi + 0x3a]                     # 004AF955
    shl esi, 7                                           # 004AF959
    add_offset esi, _things                              # 004AF95C
    movzx esi, word ptr [esi + 0x3a]                     # 004AF962
    shl esi, 7                                           # 004AF966
    add_offset esi, _things                              # 004AF969
    movzx esi, word ptr [esi + 0x3a]                     # 004AF96F
    shl esi, 7                                           # 004AF973
    add_offset esi, _things                              # 004AF976
.L4AF97C:
    cmp byte ptr [esi + 1], 6                            # 004AF97C
    je .L4AF9B5                                          # 004AF980
    movzx ecx, word ptr [esi + 0x3a]                     # 004AF982
    shl ecx, 7                                           # 004AF986
    add_offset ecx, _things                              # 004AF989
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AF98F
    shl ecx, 7                                           # 004AF993
    add_offset ecx, _things                              # 004AF996
    cmp byte ptr [ecx + 1], 4                            # 004AF99C
    je .L4AF8FB                                          # 004AF9A0
    movzx esi, word ptr [ecx + 0x3a]                     # 004AF9A6
    shl esi, 7                                           # 004AF9AA
    add_offset esi, _things                              # 004AF9AD
    jmp .L4AF97C                                         # 004AF9B3
.L4AF9B5:
    pop esi                                              # 004AF9B5
    mov eax, dword ptr [esp]                             # 004AF9B6
    test word ptr [eax + 0xc], 0x80                      # 004AF9B9
    jne .L4AFAAD                                         # 004AF9BF
    push esi                                             # 004AF9C5
    movzx esi, word ptr [esi + 0x3a]                     # 004AF9C6
    shl esi, 7                                           # 004AF9CA
    add_offset esi, _things                              # 004AF9CD
    mov edi, 0xffffffff                                  # 004AF9D3
    msvc_xor edx, edx                                    # 004AF9D8
.L4AF9DA:
    cmp byte ptr [esi + 1], 6                            # 004AF9DA
    je .L4AFA5F                                          # 004AF9DE
    movzx ebp, word ptr [esi + 0x40]                     # 004AF9E0
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AF9E4
    cmp word ptr [ebp + 0xd8], 0                         # 004AF9EB
    je .L4AF9F6                                          # 004AF9F3
    inc edx                                              # 004AF9F5
.L4AF9F6:
    test word ptr [ebp + 0xe0], 2                        # 004AF9F6
    je .L4AFA03                                          # 004AF9FF
    msvc_mov edi, esi                                    # 004AFA01
.L4AFA03:
    movzx esi, word ptr [esi + 0x3a]                     # 004AFA03
    shl esi, 7                                           # 004AFA07
    add_offset esi, _things                              # 004AFA0A
    movzx esi, word ptr [esi + 0x3a]                     # 004AFA10
    shl esi, 7                                           # 004AFA14
    add_offset esi, _things                              # 004AFA17
    movzx esi, word ptr [esi + 0x3a]                     # 004AFA1D
    shl esi, 7                                           # 004AFA21
    add_offset esi, _things                              # 004AFA24
.L4AFA2A:
    cmp byte ptr [esi + 1], 6                            # 004AFA2A
    je .L4AFA5F                                          # 004AFA2E
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFA30
    shl ecx, 7                                           # 004AFA34
    add_offset ecx, _things                              # 004AFA37
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFA3D
    shl ecx, 7                                           # 004AFA41
    add_offset ecx, _things                              # 004AFA44
    cmp byte ptr [ecx + 1], 4                            # 004AFA4A
    je .L4AF9DA                                          # 004AFA4E
    movzx esi, word ptr [ecx + 0x3a]                     # 004AFA50
    shl esi, 7                                           # 004AFA54
    add_offset esi, _things                              # 004AFA57
    jmp .L4AFA2A                                         # 004AFA5D
.L4AFA5F:
    cmp edi, -1                                          # 004AFA5F
    je .L4AFAAC                                          # 004AFA62
    movzx ebp, word ptr [edi + 0x40]                     # 004AFA64
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFA68
    cmp word ptr [ebp + 0xd8], 0                         # 004AFA6F
    je .L4AFA7E                                          # 004AFA77
    cmp edx, 2                                           # 004AFA79
    jb .L4AFAAC                                          # 004AFA7C
.L4AFA7E:
    msvc_xchg esi, edi                                   # 004AFA7E
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFA80
    shl ecx, 7                                           # 004AFA84
    add_offset ecx, _things                              # 004AFA87
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFA8D
    shl ecx, 7                                           # 004AFA91
    add_offset ecx, _things                              # 004AFA94
    test byte ptr [ecx + 0x38], 2                        # 004AFA9A
    jne .L4AFAA7                                         # 004AFA9E
    push edi                                             # 004AFAA0
    call _sub_4AFFF3                                     # 004AFAA1
    pop edi                                              # 004AFAA6
.L4AFAA7:
    call _sub_4AF4D6                                     # 004AFAA7
.L4AFAAC:
    pop esi                                              # 004AFAAC
.L4AFAAD:
    mov eax, dword ptr [esp]                             # 004AFAAD
    test word ptr [eax + 0xc], 0x80                      # 004AFAB0
    jne .L4AFBC0                                         # 004AFAB6
    push esi                                             # 004AFABC
    movzx esi, word ptr [esi + 0x3a]                     # 004AFABD
    shl esi, 7                                           # 004AFAC1
    add_offset esi, _things                              # 004AFAC4
    cmp byte ptr [esi + 1], 6                            # 004AFACA
    je .L4AFBBF                                          # 004AFACE
    movzx ebp, word ptr [esi + 0x40]                     # 004AFAD4
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFAD8
    test word ptr [ebp + 0xe0], 2                        # 004AFADF
    jne .L4AFBBF                                         # 004AFAE8
    test word ptr [ebp + 0xe0], 0x20                     # 004AFAEE
    jne .L4AFB07                                         # 004AFAF7
    cmp word ptr [ebp + 0xd8], 0                         # 004AFAF9
    jne .L4AFBBF                                         # 004AFB01
.L4AFB07:
    cmp byte ptr [esi + 1], 6                            # 004AFB07
    je .L4AFBBF                                          # 004AFB0B
    movzx ebp, word ptr [esi + 0x40]                     # 004AFB11
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFB15
    test word ptr [ebp + 0xe0], 2                        # 004AFB1C
    jne .L4AFB83                                         # 004AFB25
    movzx esi, word ptr [esi + 0x3a]                     # 004AFB27
    shl esi, 7                                           # 004AFB2B
    add_offset esi, _things                              # 004AFB2E
    movzx esi, word ptr [esi + 0x3a]                     # 004AFB34
    shl esi, 7                                           # 004AFB38
    add_offset esi, _things                              # 004AFB3B
    movzx esi, word ptr [esi + 0x3a]                     # 004AFB41
    shl esi, 7                                           # 004AFB45
    add_offset esi, _things                              # 004AFB48
.L4AFB4E:
    cmp byte ptr [esi + 1], 6                            # 004AFB4E
    je .L4AFBBF                                          # 004AFB52
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFB54
    shl ecx, 7                                           # 004AFB58
    add_offset ecx, _things                              # 004AFB5B
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFB61
    shl ecx, 7                                           # 004AFB65
    add_offset ecx, _things                              # 004AFB68
    cmp byte ptr [ecx + 1], 4                            # 004AFB6E
    je .L4AFB07                                          # 004AFB72
    movzx esi, word ptr [ecx + 0x3a]                     # 004AFB74
    shl esi, 7                                           # 004AFB78
    add_offset esi, _things                              # 004AFB7B
    jmp .L4AFB4E                                         # 004AFB81
.L4AFB83:
    mov edi, dword ptr [esp]                             # 004AFB83
    movzx edi, word ptr [edi + 0x3a]                     # 004AFB86
    shl edi, 7                                           # 004AFB8A
    add_offset edi, _things                              # 004AFB8D
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFB93
    shl ecx, 7                                           # 004AFB97
    add_offset ecx, _things                              # 004AFB9A
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFBA0
    shl ecx, 7                                           # 004AFBA4
    add_offset ecx, _things                              # 004AFBA7
    test byte ptr [ecx + 0x38], 2                        # 004AFBAD
    je .L4AFBBA                                          # 004AFBB1
    push edi                                             # 004AFBB3
    call _sub_4AFFF3                                     # 004AFBB4
    pop edi                                              # 004AFBB9
.L4AFBBA:
    call _sub_4AF4D6                                     # 004AFBBA
.L4AFBBF:
    pop esi                                              # 004AFBBF
.L4AFBC0:
    mov eax, dword ptr [esp]                             # 004AFBC0
    test word ptr [eax + 0xc], 0x80                      # 004AFBC3
    jne .L4AFDC2                                         # 004AFBC9
    push esi                                             # 004AFBCF
    movzx esi, word ptr [esi + 0x3a]                     # 004AFBD0
    shl esi, 7                                           # 004AFBD4
    add_offset esi, _things                              # 004AFBD7
    msvc_xor ebx, ebx                                    # 004AFBDD
.L4AFBDF:
    cmp byte ptr [esi + 1], 6                            # 004AFBDF
    je .L4AFC8D                                          # 004AFBE3
    msvc_mov edi, esi                                    # 004AFBE9
    movzx ebp, word ptr [esi + 0x40]                     # 004AFBEB
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFBEF
    test word ptr [ebp + 0xe0], 0x20                     # 004AFBF6
    jne .L4AFC07                                         # 004AFBFF
    inc ebx                                              # 004AFC01
    mov edi, 0xffffffff                                  # 004AFC02
.L4AFC07:
    movzx esi, word ptr [esi + 0x3a]                     # 004AFC07
    shl esi, 7                                           # 004AFC0B
    add_offset esi, _things                              # 004AFC0E
    movzx esi, word ptr [esi + 0x3a]                     # 004AFC14
    shl esi, 7                                           # 004AFC18
    add_offset esi, _things                              # 004AFC1B
    movzx esi, word ptr [esi + 0x3a]                     # 004AFC21
    shl esi, 7                                           # 004AFC25
    add_offset esi, _things                              # 004AFC28
.L4AFC2E:
    cmp byte ptr [esi + 1], 6                            # 004AFC2E
    je .L4AFC63                                          # 004AFC32
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFC34
    shl ecx, 7                                           # 004AFC38
    add_offset ecx, _things                              # 004AFC3B
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFC41
    shl ecx, 7                                           # 004AFC45
    add_offset ecx, _things                              # 004AFC48
    cmp byte ptr [ecx + 1], 4                            # 004AFC4E
    je .L4AFC63                                          # 004AFC52
    movzx esi, word ptr [ecx + 0x3a]                     # 004AFC54
    shl esi, 7                                           # 004AFC58
    add_offset esi, _things                              # 004AFC5B
    jmp .L4AFC2E                                         # 004AFC61
.L4AFC63:
    cmp edi, -1                                          # 004AFC63
    je .L4AFBDF                                          # 004AFC66
    push esi                                             # 004AFC6C
    msvc_mov esi, edi                                    # 004AFC6D
    mov edi, dword ptr [esp + 4]                         # 004AFC6F
    movzx edi, word ptr [edi + 0x3a]                     # 004AFC73
    shl edi, 7                                           # 004AFC77
    add_offset edi, _things                              # 004AFC7A
    push ebx                                             # 004AFC80
    call _sub_4AF4D6                                     # 004AFC81
    pop ebx                                              # 004AFC86
    pop esi                                              # 004AFC87
    msvc_jmp .L4AFBDF                                    # 004AFC88
.L4AFC8D:
    pop esi                                              # 004AFC8D
    push esi                                             # 004AFC8E
    movzx esi, word ptr [esi + 0x3a]                     # 004AFC8F
    shl esi, 7                                           # 004AFC93
    add_offset esi, _things                              # 004AFC96
    inc ebx                                              # 004AFC9C
.L4AFC9D:
    cmp byte ptr [esi + 1], 6                            # 004AFC9D
    je .L4AFD1C                                          # 004AFCA1
    movzx ebp, word ptr [esi + 0x40]                     # 004AFCA3
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFCA7
    test word ptr [ebp + 0xe0], 0x20                     # 004AFCAE
    jne .L4AFCBE                                         # 004AFCB7
    sub ebx, 2                                           # 004AFCB9
    jl .L4AFD1C                                          # 004AFCBC
.L4AFCBE:
    movzx esi, word ptr [esi + 0x3a]                     # 004AFCBE
    shl esi, 7                                           # 004AFCC2
    add_offset esi, _things                              # 004AFCC5
    movzx esi, word ptr [esi + 0x3a]                     # 004AFCCB
    shl esi, 7                                           # 004AFCCF
    add_offset esi, _things                              # 004AFCD2
    movzx esi, word ptr [esi + 0x3a]                     # 004AFCD8
    shl esi, 7                                           # 004AFCDC
    add_offset esi, _things                              # 004AFCDF
.L4AFCE5:
    cmp byte ptr [esi + 1], 6                            # 004AFCE5
    je .L4AFD1A                                          # 004AFCE9
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFCEB
    shl ecx, 7                                           # 004AFCEF
    add_offset ecx, _things                              # 004AFCF2
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFCF8
    shl ecx, 7                                           # 004AFCFC
    add_offset ecx, _things                              # 004AFCFF
    cmp byte ptr [ecx + 1], 4                            # 004AFD05
    je .L4AFD1A                                          # 004AFD09
    movzx esi, word ptr [ecx + 0x3a]                     # 004AFD0B
    shl esi, 7                                           # 004AFD0F
    add_offset esi, _things                              # 004AFD12
    jmp .L4AFCE5                                         # 004AFD18
.L4AFD1A:
    jmp .L4AFC9D                                         # 004AFD1A
.L4AFD1C:
    msvc_mov edi, esi                                    # 004AFD1C
    pop esi                                              # 004AFD1E
    push esi                                             # 004AFD1F
    movzx esi, word ptr [esi + 0x3a]                     # 004AFD20
    shl esi, 7                                           # 004AFD24
    add_offset esi, _things                              # 004AFD27
    mov edx, 0x14                                        # 004AFD2D
.L4AFD32:
    cmp byte ptr [esi + 1], 6                            # 004AFD32
    je .L4AFDC1                                          # 004AFD36
    movzx ebp, word ptr [esi + 0x40]                     # 004AFD3C
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFD40
    test word ptr [ebp + 0xe0], 0x20                     # 004AFD47
    je .L4AFDC1                                          # 004AFD50
    push esi                                             # 004AFD52
    movzx esi, word ptr [esi + 0x3a]                     # 004AFD53
    shl esi, 7                                           # 004AFD57
    add_offset esi, _things                              # 004AFD5A
    movzx esi, word ptr [esi + 0x3a]                     # 004AFD60
    shl esi, 7                                           # 004AFD64
    add_offset esi, _things                              # 004AFD67
    movzx esi, word ptr [esi + 0x3a]                     # 004AFD6D
    shl esi, 7                                           # 004AFD71
    add_offset esi, _things                              # 004AFD74
.L4AFD7A:
    cmp byte ptr [esi + 1], 6                            # 004AFD7A
    je .L4AFDAF                                          # 004AFD7E
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFD80
    shl ecx, 7                                           # 004AFD84
    add_offset ecx, _things                              # 004AFD87
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFD8D
    shl ecx, 7                                           # 004AFD91
    add_offset ecx, _things                              # 004AFD94
    cmp byte ptr [ecx + 1], 4                            # 004AFD9A
    je .L4AFDAF                                          # 004AFD9E
    movzx esi, word ptr [ecx + 0x3a]                     # 004AFDA0
    shl esi, 7                                           # 004AFDA4
    add_offset esi, _things                              # 004AFDA7
    jmp .L4AFD7A                                         # 004AFDAD
.L4AFDAF:
    xchg dword ptr [esp], esi                            # 004AFDAF
    push edx                                             # 004AFDB2
    call _sub_4AF4D6                                     # 004AFDB3
    pop edx                                              # 004AFDB8
    pop esi                                              # 004AFDB9
    dec edx                                              # 004AFDBA
    jne .L4AFD32                                         # 004AFDBB
.L4AFDC1:
    pop esi                                              # 004AFDC1
.L4AFDC2:
    mov eax, dword ptr [esp]                             # 004AFDC2
    test word ptr [eax + 0xc], 0x80                      # 004AFDC5
    jne .L4AFF2A                                         # 004AFDCB
    push esi                                             # 004AFDD1
    movzx esi, word ptr [esi + 0x3a]                     # 004AFDD2
    shl esi, 7                                           # 004AFDD6
    add_offset esi, _things                              # 004AFDD9
    msvc_xor edx, edx                                    # 004AFDDF
    msvc_xor ebx, ebx                                    # 004AFDE1
.L4AFDE3:
    cmp byte ptr [esi + 1], 6                            # 004AFDE3
    je .L4AFE6D                                          # 004AFDE7
    inc ebx                                              # 004AFDED
    movzx ebp, word ptr [esi + 0x40]                     # 004AFDEE
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFDF2
    test word ptr [ebp + 0xe0], 0x10                     # 004AFDF9
    je .L4AFE11                                          # 004AFE02
    inc edx                                              # 004AFE04
    cmp edx, 4                                           # 004AFE05
    ja .L4AFE11                                          # 004AFE08
    mov dword ptr [edx*4 + __1136154], esi               # 004AFE0A
.L4AFE11:
    movzx esi, word ptr [esi + 0x3a]                     # 004AFE11
    shl esi, 7                                           # 004AFE15
    add_offset esi, _things                              # 004AFE18
    movzx esi, word ptr [esi + 0x3a]                     # 004AFE1E
    shl esi, 7                                           # 004AFE22
    add_offset esi, _things                              # 004AFE25
    movzx esi, word ptr [esi + 0x3a]                     # 004AFE2B
    shl esi, 7                                           # 004AFE2F
    add_offset esi, _things                              # 004AFE32
.L4AFE38:
    cmp byte ptr [esi + 1], 6                            # 004AFE38
    je .L4AFE6D                                          # 004AFE3C
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFE3E
    shl ecx, 7                                           # 004AFE42
    add_offset ecx, _things                              # 004AFE45
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFE4B
    shl ecx, 7                                           # 004AFE4F
    add_offset ecx, _things                              # 004AFE52
    cmp byte ptr [ecx + 1], 4                            # 004AFE58
    je .L4AFDE3                                          # 004AFE5C
    movzx esi, word ptr [ecx + 0x3a]                     # 004AFE5E
    shl esi, 7                                           # 004AFE62
    add_offset esi, _things                              # 004AFE65
    jmp .L4AFE38                                         # 004AFE6B
.L4AFE6D:
    cmp edx, 4                                           # 004AFE6D
    jb .L4AFF29                                          # 004AFE70
    msvc_sub ebx, edx                                    # 004AFE76
    shr ebx, 1                                           # 004AFE78
    je .L4AFF29                                          # 004AFE7A
    mov esi, dword ptr [esp]                             # 004AFE80
    movzx esi, word ptr [esi + 0x3a]                     # 004AFE83
    shl esi, 7                                           # 004AFE87
    add_offset esi, _things                              # 004AFE8A
.L4AFE90:
    cmp byte ptr [esi + 1], 6                            # 004AFE90
    je .L4AFF29                                          # 004AFE94
    msvc_or ebx, ebx                                     # 004AFE9A
    je .L4AFF11                                          # 004AFE9C
    movzx ebp, word ptr [esi + 0x40]                     # 004AFE9E
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFEA2
    test word ptr [ebp + 0xe0], 0x10                     # 004AFEA9
    jne .L4AFEB5                                         # 004AFEB2
    dec ebx                                              # 004AFEB4
.L4AFEB5:
    movzx esi, word ptr [esi + 0x3a]                     # 004AFEB5
    shl esi, 7                                           # 004AFEB9
    add_offset esi, _things                              # 004AFEBC
    movzx esi, word ptr [esi + 0x3a]                     # 004AFEC2
    shl esi, 7                                           # 004AFEC6
    add_offset esi, _things                              # 004AFEC9
    movzx esi, word ptr [esi + 0x3a]                     # 004AFECF
    shl esi, 7                                           # 004AFED3
    add_offset esi, _things                              # 004AFED6
.L4AFEDC:
    cmp byte ptr [esi + 1], 6                            # 004AFEDC
    je .L4AFF29                                          # 004AFEE0
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFEE2
    shl ecx, 7                                           # 004AFEE6
    add_offset ecx, _things                              # 004AFEE9
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFEEF
    shl ecx, 7                                           # 004AFEF3
    add_offset ecx, _things                              # 004AFEF6
    cmp byte ptr [ecx + 1], 4                            # 004AFEFC
    je .L4AFE90                                          # 004AFF00
    movzx esi, word ptr [ecx + 0x3a]                     # 004AFF02
    shl esi, 7                                           # 004AFF06
    add_offset esi, _things                              # 004AFF09
    jmp .L4AFEDC                                         # 004AFF0F
.L4AFF11:
    msvc_mov edi, esi                                    # 004AFF11
    mov esi, dword ptr [__113615C]                       # 004AFF13
    call _sub_4AF4D6                                     # 004AFF19
    mov esi, dword ptr [__1136160]                       # 004AFF1E
    call _sub_4AF4D6                                     # 004AFF24
.L4AFF29:
    pop esi                                              # 004AFF29
.L4AFF2A:
    push esi                                             # 004AFF2A
    movzx esi, word ptr [esi + 0x3a]                     # 004AFF2B
    shl esi, 7                                           # 004AFF2F
    add_offset esi, _things                              # 004AFF32
    msvc_xor edx, edx                                    # 004AFF38
.L4AFF3A:
    cmp byte ptr [esi + 1], 6                            # 004AFF3A
    je .L4AFFE9                                          # 004AFF3E
    movzx ebp, word ptr [esi + 0x40]                     # 004AFF44
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004AFF48
    test word ptr [ebp + 0xe0], 0x80                     # 004AFF4F
    je .L4AFF89                                          # 004AFF58
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFF5A
    shl ecx, 7                                           # 004AFF5E
    add_offset ecx, _things                              # 004AFF61
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFF67
    shl ecx, 7                                           # 004AFF6B
    add_offset ecx, _things                              # 004AFF6E
    mov byte ptr [ecx + 0x54], dl                        # 004AFF74
    msvc_mov ebx, edx                                    # 004AFF77
    imul ebx, ebx, 6                                     # 004AFF79
    mov bl, byte ptr [ebx + ebp + 0x28]                  # 004AFF7C
    and bl, 0x7f                                         # 004AFF80
    mov byte ptr [ecx + 0x39], bl                        # 004AFF83
    xor edx, 1                                           # 004AFF86
.L4AFF89:
    movzx esi, word ptr [esi + 0x3a]                     # 004AFF89
    shl esi, 7                                           # 004AFF8D
    add_offset esi, _things                              # 004AFF90
    movzx esi, word ptr [esi + 0x3a]                     # 004AFF96
    shl esi, 7                                           # 004AFF9A
    add_offset esi, _things                              # 004AFF9D
    movzx esi, word ptr [esi + 0x3a]                     # 004AFFA3
    shl esi, 7                                           # 004AFFA7
    add_offset esi, _things                              # 004AFFAA
.L4AFFB0:
    cmp byte ptr [esi + 1], 6                            # 004AFFB0
    je .L4AFFE9                                          # 004AFFB4
    movzx ecx, word ptr [esi + 0x3a]                     # 004AFFB6
    shl ecx, 7                                           # 004AFFBA
    add_offset ecx, _things                              # 004AFFBD
    movzx ecx, word ptr [ecx + 0x3a]                     # 004AFFC3
    shl ecx, 7                                           # 004AFFC7
    add_offset ecx, _things                              # 004AFFCA
    cmp byte ptr [ecx + 1], 4                            # 004AFFD0
    je .L4AFF3A                                          # 004AFFD4
    movzx esi, word ptr [ecx + 0x3a]                     # 004AFFDA
    shl esi, 7                                           # 004AFFDE
    add_offset esi, _things                              # 004AFFE1
    jmp .L4AFFB0                                         # 004AFFE7
.L4AFFE9:
    pop esi                                              # 004AFFE9
    pop esi                                              # 004AFFEA
    call _sub_4AF5E1                                     # 004AFFEB
    ret                                                  # 004AFFF0
.L4AFFF1:
    pop esi                                              # 004AFFF1
    ret                                                  # 004AFFF2

    .global _sub_4AFFF3
_sub_4AFFF3:
    msvc_mov ebp, esi                                    # 004AFFF3
    mov eax, 0xffffffff                                  # 004AFFF5
    push eax                                             # 004AFFFA
    push esi                                             # 004AFFFB
    mov dword ptr [__1136100], esi                       # 004AFFFC
    movzx edi, word ptr [esi + 0x3a]                     # 004B0002
    shl edi, 7                                           # 004B0006
    add_offset edi, _things                              # 004B0009
    mov al, byte ptr [esi + 0x39]                        # 004B000F
    xchg byte ptr [edi + 0x39], al                       # 004B0012
    mov byte ptr [esi + 0x39], al                        # 004B0015
    movzx esi, word ptr [edi + 0x3a]                     # 004B0018
    shl esi, 7                                           # 004B001C
    add_offset esi, _things                              # 004B001F
    mov dword ptr [__1136104], esi                       # 004B0025
    movzx esi, word ptr [esi + 0x3a]                     # 004B002B
    shl esi, 7                                           # 004B002F
    add_offset esi, _things                              # 004B0032
.L4B0038:
    cmp byte ptr [esi + 1], 3                            # 004B0038
    jne .L4B0091                                         # 004B003C
    movzx edi, word ptr [esi + 0x3a]                     # 004B003E
    shl edi, 7                                           # 004B0042
    add_offset edi, _things                              # 004B0045
    movzx edi, word ptr [edi + 0x3a]                     # 004B004B
    shl edi, 7                                           # 004B004F
    add_offset edi, _things                              # 004B0052
    cmp byte ptr [edi + 1], 4                            # 004B0058
    je .L4B0091                                          # 004B005C
    push esi                                             # 004B005E
    movzx edi, word ptr [esi + 0x3a]                     # 004B005F
    shl edi, 7                                           # 004B0063
    add_offset edi, _things                              # 004B0066
    mov al, byte ptr [esi + 0x39]                        # 004B006C
    xchg byte ptr [edi + 0x39], al                       # 004B006F
    mov byte ptr [esi + 0x39], al                        # 004B0072
    movzx edi, word ptr [edi + 0x3a]                     # 004B0075
    shl edi, 7                                           # 004B0079
    add_offset edi, _things                              # 004B007C
    movzx esi, word ptr [edi + 0x3a]                     # 004B0082
    shl esi, 7                                           # 004B0086
    add_offset esi, _things                              # 004B0089
    jmp .L4B0038                                         # 004B008F
.L4B0091:
    msvc_mov ecx, esi                                    # 004B0091
    movzx edi, word ptr [esi + 0x26]                     # 004B0093
    shl edi, 7                                           # 004B0097
    add_offset edi, _things                              # 004B009A
.L4B00A0:
    movzx ebx, word ptr [edi + 0x3a]                     # 004B00A0
    shl ebx, 7                                           # 004B00A4
    add_offset ebx, _things                              # 004B00A7
    msvc_cmp ebx, ebp                                    # 004B00AD
    je .L4B00B5                                          # 004B00AF
    msvc_mov edi, ebx                                    # 004B00B1
    jmp .L4B00A0                                         # 004B00B3
.L4B00B5:
    msvc_xor edx, edx                                    # 004B00B5
.L4B00B7:
    pop ebx                                              # 004B00B7
    cmp ebx, -1                                          # 004B00B8
    je .L4B00F4                                          # 004B00BB
    mov ax, word ptr [ebx + 0xa]                         # 004B00BD
    mov word ptr [edi + 0x3a], ax                        # 004B00C1
    movzx edi, word ptr [ebx + 0x3a]                     # 004B00C5
    shl edi, 7                                           # 004B00C9
    add_offset edi, _things                              # 004B00CC
    movzx edi, word ptr [edi + 0x3a]                     # 004B00D2
    shl edi, 7                                           # 004B00D6
    add_offset edi, _things                              # 004B00D9
    xor byte ptr [edi + 0x38], 2                         # 004B00DF
    mov byte ptr [edi + 1], 5                            # 004B00E3
    msvc_or edx, edx                                     # 004B00E7
    jne .L4B00F1                                         # 004B00E9
    msvc_mov esi, ebx                                    # 004B00EB
    mov byte ptr [edi + 1], 4                            # 004B00ED
.L4B00F1:
    inc edx                                              # 004B00F1
    jmp .L4B00B7                                         # 004B00F2
.L4B00F4:
    mov ax, word ptr [ecx + 0xa]                         # 004B00F4
    mov word ptr [edi + 0x3a], ax                        # 004B00F8
    mov edi, dword ptr [__1136100]                       # 004B00FC
    mov ebx, dword ptr [__1136104]                       # 004B0102
    movzx ebp, word ptr [esi + 0x3a]                     # 004B0108
    shl ebp, 7                                           # 004B010C
    add_offset ebp, _things                              # 004B010F
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B0115
    shl ebp, 7                                           # 004B0119
    add_offset ebp, _things                              # 004B011C
    msvc_xor eax, eax                                    # 004B0122
    msvc_xor ecx, ecx                                    # 004B0124
    xchg dword ptr [edi + 0x48], eax                     # 004B0126
    xchg dword ptr [ebx + 0x48], ecx                     # 004B0129
    mov dword ptr [esi + 0x48], eax                      # 004B012C
    mov dword ptr [ebp + 0x48], ecx                      # 004B012F
    mov ax, 0xffff                                       # 004B0132
    xchg byte ptr [edi + 0x4c], al                       # 004B0136
    xchg byte ptr [ebx + 0x4c], ah                       # 004B0139
    mov byte ptr [esi + 0x4c], al                        # 004B013C
    mov byte ptr [ebp + 0x4c], ah                        # 004B013F
    msvc_xor ax, ax                                      # 004B0142
    xchg byte ptr [edi + 0x4d], al                       # 004B0145
    xchg byte ptr [ebx + 0x4d], ah                       # 004B0148
    mov byte ptr [esi + 0x4d], al                        # 004B014B
    mov byte ptr [ebp + 0x4d], ah                        # 004B014E
    mov ax, word ptr [edi + 0x4e]                        # 004B0151
    mov cx, word ptr [ebx + 0x4e]                        # 004B0155
    mov word ptr [esi + 0x4e], ax                        # 004B0159
    mov word ptr [ebp + 0x4e], cx                        # 004B015D
    msvc_xor ax, ax                                      # 004B0161
    xchg byte ptr [edi + 0x51], al                       # 004B0164
    xchg byte ptr [ebx + 0x51], ah                       # 004B0167
    mov byte ptr [esi + 0x51], al                        # 004B016A
    mov byte ptr [ebp + 0x51], ah                        # 004B016D
    mov ax, word ptr [edi + 0x52]                        # 004B019D
    mov word ptr [esi + 0x52], ax                        # 004B01A1
    ret                                                  # 004B01B5

    .global _sub_4B01B6
_sub_4B01B6:
    DebugStamp 0x15102011
    push eax                                             # 004B01B6
    movzx esi, di                                        # 004B01B7
    shl esi, 7                                           # 004B01BA
    add_offset esi, _things                              # 004B01BD
    movzx eax, byte ptr [esi + 0x5e]                     # 004B01C3
    shl eax, 1                                           # 004B01C7
    add eax, 4                                           # 004B01C9
    mov byte ptr [__9C68EA], al                          # 004B01CC
    pop eax                                              # 004B01D1
    mov word ptr [__9C68E0], ax                          # 004B01D2
    mov word ptr [__9C68E2], cx                          # 004B01D8
    mov word ptr [__9C68E4], 0                           # 004B01DF
    mov byte ptr [__9C68E4], dl                          # 004B01E8
    shl word ptr [__9C68E4], 2                           # 004B01EE
    movzx esi, di                                        # 004B01F6
    shl esi, 7                                           # 004B01F9
    add_offset esi, _things                              # 004B01FC
    push eax                                             # 004B0202
    push esi                                             # 004B0203
    mov al, byte ptr [esi + 0x21]                        # 004B0204
    mov esi, 0xffffffff                                  # 004B0207
    call _sub_431E6A                                     # 004B020C
    pop esi                                              # 004B0211
    pop eax                                              # 004B0212
    jb .L4B05DE                                          # 004B0213
    cmp ebx, 0xffff0000                                  # 004B0219
    jae .L4B025F                                         # 004B021F
    cmp word ptr [esi + 0x30], -1                        # 004B0221
    jne .L4B05BD                                         # 004B0226
    push esi                                             # 004B022C
    movzx esi, word ptr [esi + 0x3a]                     # 004B022D
    shl esi, 7                                           # 004B0231
    add_offset esi, _things                              # 004B0234
    movzx esi, word ptr [esi + 0x3a]                     # 004B023A
    shl esi, 7                                           # 004B023E
    add_offset esi, _things                              # 004B0241
    movzx esi, word ptr [esi + 0x3a]                     # 004B0247
    shl esi, 7                                           # 004B024B
    add_offset esi, _things                              # 004B024E
    cmp byte ptr [esi + 1], 6                            # 004B0254
    pop esi                                              # 004B0258
    je .L4B05BD                                          # 004B0259
.L4B025F:
    test bl, 1                                           # 004B025F
    je .L4B04EC                                          # 004B0262
    mov byte ptr [__113623A], bl                         # 004B0268
    shr ebx, 0x10                                        # 004B026E
    cmp bx, -1                                           # 004B0271
    je .L4B049C                                          # 004B0275
    cmp byte ptr [esi + 0x42], 1                         # 004B027B
    je .L4B0367                                          # 004B027F
    pushal                                               # 004B0285
    msvc_xor dh, dh                                      # 004B0286
    shl dx, 2                                            # 004B0288
    push esi                                             # 004B028C
    test ebp, 4                                          # 004B028D
    je .L4B02CD                                          # 004B0293
    and ebp, 0xfffffffb                                  # 004B0295
    sub ax, word ptr [ebp*8 + __4F7B5E]                  # 004B0298
    sub cx, word ptr [ebp*8 + __4F7B60]                  # 004B02A0
    sub dx, word ptr [ebp*8 + __4F7B62]                  # 004B02A8
    movzx esi, byte ptr [ebp*8 + __4F7B5D]               # 004B02B0
    cmp esi, 0xc                                         # 004B02B8
    jae .L4B02CD                                         # 004B02BB
    add ax, word ptr [esi*4 + __503C6C]                  # 004B02BD
    add cx, word ptr [esi*4 + __503C6E]                  # 004B02C5
.L4B02CD:
    msvc_mov esi, ebp                                    # 004B02CD
    shr esi, 3                                           # 004B02CF
    mov esi, dword ptr [esi*4 + __4F73D8]                # 004B02D2
    add dx, word ptr [esi + 5]                           # 004B02D9
    pop esi                                              # 004B02DD
    shr dx, 2                                            # 004B02DE
    movzx edi, cx                                        # 004B02E2
    shl edi, 9                                           # 004B02E5
    msvc_or di, ax                                       # 004B02E8
    shr edi, 3                                           # 004B02EB
    mov edi, dword ptr [edi + __E40134]                  # 004B02EE
.L4B02F4:
    cmp dl, byte ptr [edi + 2]                           # 004B02F4
    jne .L4B032D                                         # 004B02F7
    mov al, byte ptr [edi]                               # 004B02F9
    and al, 0x3c                                         # 004B02FB
    cmp al, 4                                            # 004B02FD
    jne .L4B032D                                         # 004B02FF
    test byte ptr [edi + 1], 0x30                        # 004B0301
    jne .L4B032D                                         # 004B0305
    mov al, byte ptr [edi + 5]                           # 004B0307
    shr al, 4                                            # 004B030A
    cmp al, byte ptr [esi + 0x35]                        # 004B030D
    jne .L4B032D                                         # 004B0310
    msvc_mov eax, ebp                                    # 004B0312
    shr eax, 3                                           # 004B0314
    mov ah, byte ptr [edi + 4]                           # 004B0317
    and ah, 0x3f                                         # 004B031A
    cmp al, ah                                           # 004B031D
    jne .L4B032D                                         # 004B031F
    msvc_mov eax, ebp                                    # 004B0321
    mov ah, byte ptr [edi]                               # 004B0323
    and ax, 0x303                                        # 004B0325
    cmp al, ah                                           # 004B0329
    je .L4B033B                                          # 004B032B
.L4B032D:
    add edi, 8                                           # 004B032D
    test byte ptr [edi - 7], 0x80                        # 004B0330
    je .L4B02F4                                          # 004B0334
    msvc_jmp .L4B0570                                    # 004B0336
.L4B033B:
    mov al, byte ptr [edi + 7]                           # 004B033B
    and al, 0xf                                          # 004B033E
    push esi                                             # 004B0340
    msvc_mov esi, edi                                    # 004B0341
    call _sub_431E6A                                     # 004B0343
    pop esi                                              # 004B0348
    jb .L4B05BA                                          # 004B0349
    mov al, byte ptr [edi + 7]                           # 004B034F
    shr al, 4                                            # 004B0352
    and al, byte ptr [esi + 0x53]                        # 004B0355
    cmp al, byte ptr [esi + 0x53]                        # 004B0358
    jne .L4B0531                                         # 004B035B
    popal                                                # 004B0361
    msvc_jmp .L4B0464                                    # 004B0362
.L4B0367:
    pushal                                               # 004B0367
    msvc_xor dh, dh                                      # 004B0368
    shl dx, 2                                            # 004B036A
    push esi                                             # 004B036E
    test ebp, 4                                          # 004B036F
    je .L4B03AF                                          # 004B0375
    and ebp, 0xfffffffb                                  # 004B0377
    sub ax, word ptr [ebp*8 + __4F6F8E]                  # 004B037A
    sub cx, word ptr [ebp*8 + __4F6F90]                  # 004B0382
    sub dx, word ptr [ebp*8 + __4F6F92]                  # 004B038A
    movzx esi, byte ptr [ebp*8 + __4F6F8D]               # 004B0392
    cmp esi, 0xc                                         # 004B039A
    jae .L4B03AF                                         # 004B039D
    add ax, word ptr [esi*4 + __503C6C]                  # 004B039F
    add cx, word ptr [esi*4 + __503C6E]                  # 004B03A7
.L4B03AF:
    msvc_mov esi, ebp                                    # 004B03AF
    shr esi, 3                                           # 004B03B1
    mov esi, dword ptr [esi*4 + __4F6D1C]                # 004B03B4
    add dx, word ptr [esi + 5]                           # 004B03BB
    pop esi                                              # 004B03BF
    shr dx, 2                                            # 004B03C0
    movzx edi, cx                                        # 004B03C4
    shl edi, 9                                           # 004B03C7
    msvc_or di, ax                                       # 004B03CA
    shr edi, 3                                           # 004B03CD
    mov edi, dword ptr [edi + __E40134]                  # 004B03D0
.L4B03D6:
    cmp dl, byte ptr [edi + 2]                           # 004B03D6
    jne .L4B041F                                         # 004B03D9
    mov al, byte ptr [edi]                               # 004B03DB
    and al, 0x3c                                         # 004B03DD
    cmp al, 0x1c                                         # 004B03DF
    jne .L4B041F                                         # 004B03E1
    test byte ptr [edi + 1], 0x30                        # 004B03E3
    jne .L4B041F                                         # 004B03E7
    movzx eax, byte ptr [edi + 5]                        # 004B03E9
    shr eax, 4                                           # 004B03ED
    cmp al, byte ptr [esi + 0x35]                        # 004B03F0
    je .L4B0404                                          # 004B03F3
    cmp byte ptr [esi + 0x35], 0xff                      # 004B03F5
    jne .L4B041F                                         # 004B03F9
    bt dword ptr [_scenarioChunk3+420], eax              # 004B03FB
    jae .L4B041F                                         # 004B0402
.L4B0404:
    msvc_mov eax, ebp                                    # 004B0404
    shr eax, 3                                           # 004B0406
    mov ah, byte ptr [edi + 4]                           # 004B0409
    and ah, 0xf                                          # 004B040C
    cmp al, ah                                           # 004B040F
    jne .L4B041F                                         # 004B0411
    msvc_mov eax, ebp                                    # 004B0413
    mov ah, byte ptr [edi]                               # 004B0415
    and ax, 0x303                                        # 004B0417
    cmp al, ah                                           # 004B041B
    je .L4B042D                                          # 004B041D
.L4B041F:
    add edi, 8                                           # 004B041F
    test byte ptr [edi - 7], 0x80                        # 004B0422
    je .L4B03D6                                          # 004B0426
    msvc_jmp .L4B058F                                    # 004B0428
.L4B042D:
    movzx eax, byte ptr [edi + 5]                        # 004B042D
    shr eax, 4                                           # 004B0431
    bt dword ptr [_scenarioChunk3+424], eax              # 004B0434
    jb .L4B0451                                          # 004B043B
    mov al, byte ptr [edi + 7]                           # 004B043D
    and al, 0xf                                          # 004B0440
    push esi                                             # 004B0442
    msvc_mov esi, edi                                    # 004B0443
    call _sub_431E6A                                     # 004B0445
    pop esi                                              # 004B044A
    jb .L4B05BA                                          # 004B044B
.L4B0451:
    mov al, byte ptr [edi + 7]                           # 004B0451
    shr al, 6                                            # 004B0454
    and al, byte ptr [esi + 0x53]                        # 004B0457
    cmp al, byte ptr [esi + 0x53]                        # 004B045A
    jne .L4B04EF                                         # 004B045D
    popal                                                # 004B0463
.L4B0464:
    call _sub_4B05E4                                     # 004B0464
    jb .L4B05C8                                          # 004B0469
    or word ptr [esi + 0xc], 2                           # 004B046F
    mov byte ptr [esi + 0x6e], 0xd8                      # 004B0474
    test byte ptr [__113623A], 0x40                      # 004B0478
    je .L4B04C0                                          # 004B047F
    msvc_mov edi, esi                                    # 004B0481
.L4B0483:
    or byte ptr [edi + 0x38], 0x10                       # 004B0483
    cmp byte ptr [edi + 1], 6                            # 004B0487
    je .L4B04C0                                          # 004B048B
    movzx edi, word ptr [edi + 0x3a]                     # 004B048D
    shl edi, 7                                           # 004B0491
    add_offset edi, _things                              # 004B0494
    jmp .L4B0483                                         # 004B049A
.L4B049C:
    msvc_mov edi, esi                                    # 004B049C
.L4B049E:
    and byte ptr [edi + 0x38], 0xef                      # 004B049E
    push esi                                             # 004B04A2
    msvc_mov esi, edi                                    # 004B04A3
    call _sub_4CBB01                                     # 004B04A5
    pop esi                                              # 004B04AA
    cmp byte ptr [edi + 1], 6                            # 004B04AB
    je .L4B04C0                                          # 004B04AF
    movzx edi, word ptr [edi + 0x3a]                     # 004B04B1
    shl edi, 7                                           # 004B04B5
    add_offset edi, _things                              # 004B04B8
    jmp .L4B049E                                         # 004B04BE
.L4B04C0:
    test byte ptr [__113623A], 1                         # 004B04C0
    je .L4B04EC                                          # 004B04C7
    test byte ptr [__113623A], 0x40                      # 004B04C9
    jne .L4B04EC                                         # 004B04D0
    mov cx, word ptr [__9C68E0]                          # 004B04D2
    mov dx, word ptr [__9C68E2]                          # 004B04D9
    mov bp, word ptr [__9C68E4]                          # 004B04E0
    call _sub_48B11D                                     # 004B04E7
.L4B04EC:
    msvc_xor ebx, ebx                                    # 004B04EC
    ret                                                  # 004B04EE
.L4B04EF:
    mov al, byte ptr [esi + 0x53]                        # 004B04EF
    mov ah, byte ptr [edi + 7]                           # 004B04F2
    shr ah, 6                                            # 004B04F5
    not ah                                               # 004B04F8
    msvc_and al, ah                                      # 004B04FA
    bsf ebp, eax                                         # 004B04FC
    movzx ebx, byte ptr [edi + 5]                        # 004B04FF
    shr ebx, 4                                           # 004B0503
    mov ebx, dword ptr [ebx*4 + _roadObjects]            # 004B0506
    movzx ebx, byte ptr [ebp + ebx + 0x26]               # 004B050D
    mov ebx, dword ptr [ebx*4 + _roadExtraObjects]       # 004B0512
    mov bx, word ptr [ebx]                               # 004B0519
    mov word ptr [__112C826], bx                         # 004B051C
    mov word ptr [__9C68E6], 0x48e                       # 004B0523
    msvc_jmp .L4B05BA                                    # 004B052C
.L4B0531:
    mov al, byte ptr [esi + 0x53]                        # 004B0531
    mov ah, byte ptr [edi + 7]                           # 004B0534
    shr ah, 4                                            # 004B0537
    not ah                                               # 004B053A
    msvc_and al, ah                                      # 004B053C
    bsf ebp, eax                                         # 004B053E
    movzx ebx, byte ptr [edi + 5]                        # 004B0541
    shr ebx, 4                                           # 004B0545
    mov ebx, dword ptr [ebx*4 + _trackObjects]           # 004B0548
    movzx ebx, byte ptr [ebp + ebx + 0xa]                # 004B054F
    mov ebx, dword ptr [ebx*4 + _trackExtraObjects]      # 004B0554
    mov bx, word ptr [ebx]                               # 004B055B
    mov word ptr [__112C826], bx                         # 004B055E
    mov word ptr [__9C68E6], 0x48e                       # 004B0565
    jmp .L4B05BA                                         # 004B056E
.L4B0570:
    mov word ptr [__9C68E6], 0x4de                       # 004B0570
    movzx ebx, byte ptr [esi + 0x35]                     # 004B0579
    mov ebx, dword ptr [ebx*4 + _trackObjects]           # 004B057D
    mov ax, word ptr [ebx]                               # 004B0584
    mov word ptr [__112C826], ax                         # 004B0587
    jmp .L4B05BA                                         # 004B058D
.L4B058F:
    mov word ptr [__9C68E6], 0x4de                       # 004B058F
    mov word ptr [__112C826], 0x4df                      # 004B0598
    movzx ebx, byte ptr [esi + 0x35]                     # 004B05A1
    cmp bl, 0xff                                         # 004B05A5
    je .L4B05BA                                          # 004B05A8
    mov ebx, dword ptr [ebx*4 + _roadObjects]            # 004B05AA
    mov ax, word ptr [ebx]                               # 004B05B1
    mov word ptr [__112C826], ax                         # 004B05B4
.L4B05BA:
    popal                                                # 004B05BA
    jmp .L4B05DE                                         # 004B05BB
.L4B05BD:
    mov word ptr [__9C68E6], 0                           # 004B05BD
    jmp .L4B05DE                                         # 004B05C6
.L4B05C8:
    mov word ptr [__9C68E6], 0x489                       # 004B05C8
    msvc_or al, al                                       # 004B05D1
    je .L4B05DE                                          # 004B05D3
    mov word ptr [__9C68E6], 0x48a                       # 004B05D5
.L4B05DE:
    mov ebx, 0x80000000                                  # 004B05DE
    ret                                                  # 004B05E3

    .global _sub_4B05E4
_sub_4B05E4:
    DebugStamp 0x15102014
    cmp word ptr [esi + 0x30], -1                        # 004B05E4
    jne .L4B0815                                         # 004B05E9
    cmp byte ptr [esi + 0x42], 1                         # 004B05EF
    je .L4B062F                                          # 004B05F3
    pushal                                               # 004B05F5
    msvc_xor dh, dh                                      # 004B05F6
    shl dx, 2                                            # 004B05F8
    mov bl, byte ptr [esi + 0x21]                        # 004B05FC
    mov bh, byte ptr [esi + 0x35]                        # 004B05FF
    call _sub_4A2A58                                     # 004B0602
    test ax, 1                                           # 004B0607
    jne .L4B0818                                         # 004B060B
    popal                                                # 004B0611
    pushal                                               # 004B0612
    msvc_xor dh, dh                                      # 004B0613
    shl dx, 2                                            # 004B0615
    mov bl, byte ptr [esi + 0x21]                        # 004B0619
    mov bh, byte ptr [esi + 0x35]                        # 004B061C
    call _sub_4A2A39                                     # 004B061F
    test ax, 1                                           # 004B0624
    jne .L4B0818                                         # 004B0628
    popal                                                # 004B062E
.L4B062F:
    cmp byte ptr [esi + 0x42], 1                         # 004B062F
    je .L4B068E                                          # 004B0633
    mov edi, dword ptr [ebp*4 + __4D9724]                # 004B0635
    mov di, word ptr [edi - 2]                           # 004B063C
    dec di                                               # 004B0640
    msvc_sub di, bx                                      # 004B0642
    movzx ebx, di                                        # 004B0645
    msvc_xor dh, dh                                      # 004B0648
    shl dx, 2                                            # 004B064A
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004B064E
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004B0656
    movzx edi, byte ptr [ebp*8 + __4F7B5D]               # 004B065E
    cmp di, 0xc                                          # 004B0666
    jae .L4B067C                                         # 004B066A
    sub ax, word ptr [edi*4 + __503C6C]                  # 004B066C
    sub cx, word ptr [edi*4 + __503C6E]                  # 004B0674
.L4B067C:
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004B067C
    xor bp, 4                                            # 004B0684
    shr dx, 2                                            # 004B0688
    jmp .L4B0703                                         # 004B068C
.L4B068E:
    mov edi, dword ptr [ebp*4 + __5253B0]                # 004B068E
    mov di, word ptr [edi - 2]                           # 004B0695
    push ebp                                             # 004B0699
    and ebp, 0x7f                                        # 004B069A
    dec di                                               # 004B069D
    msvc_sub di, bx                                      # 004B069F
    movzx ebx, di                                        # 004B06A2
    msvc_xor dh, dh                                      # 004B06A5
    shl dx, 2                                            # 004B06A7
    add ax, word ptr [ebp*8 + __4F6F8E]                  # 004B06AB
    add cx, word ptr [ebp*8 + __4F6F90]                  # 004B06B3
    movzx edi, byte ptr [ebp*8 + __4F6F8D]               # 004B06BB
    cmp di, 0xc                                          # 004B06C3
    jae .L4B06D9                                         # 004B06C7
    sub ax, word ptr [edi*4 + __503C6C]                  # 004B06C9
    sub cx, word ptr [edi*4 + __503C6E]                  # 004B06D1
.L4B06D9:
    add dx, word ptr [ebp*8 + __4F6F92]                  # 004B06D9
    pop ebp                                              # 004B06E1
    xor bp, 0x84                                         # 004B06E2
    test bp, 0x100                                       # 004B06E7
    je .L4B06FF                                          # 004B06EC
    xor bp, 0x80                                         # 004B06EE
    test bp, 0x80                                        # 004B06F3
    jne .L4B06FF                                         # 004B06F8
    xor bp, 0x100                                        # 004B06FA
.L4B06FF:
    shr dx, 2                                            # 004B06FF
.L4B0703:
    push eax                                             # 004B0703
    push ecx                                             # 004B0704
    movzx edi, word ptr [esi + 0x36]                     # 004B0705
    and edi, 0xffffffc0                                  # 004B0709
    push edi                                             # 004B070C
    mov ecx, 0x40                                        # 004B070D
.L4B0712:
    mov word ptr [edi*2 + __96885C], 0xfffe              # 004B0712
    inc edi                                              # 004B071C
    dec ecx                                              # 004B071D
    jne .L4B0712                                         # 004B071E
    pop edi                                              # 004B0720
    pop ecx                                              # 004B0721
    pop eax                                              # 004B0722
    mov word ptr [edi*2 + __96885C], bp                  # 004B0723
    cmp byte ptr [esi + 0x42], 1                         # 004B072B
    je .L4B076D                                          # 004B072F
    pushal                                               # 004B0731
    msvc_xor dh, dh                                      # 004B0732
    shl dx, 2                                            # 004B0734
    mov bl, byte ptr [esi + 0x21]                        # 004B0738
    mov bh, byte ptr [esi + 0x35]                        # 004B073B
    call _sub_4A2A58                                     # 004B073E
    test ax, 1                                           # 004B0743
    jne .L4B0818                                         # 004B0747
    popal                                                # 004B074D
    pushal                                               # 004B074E
    msvc_xor dh, dh                                      # 004B074F
    shl dx, 2                                            # 004B0751
    mov bl, byte ptr [esi + 0x21]                        # 004B0755
    mov bh, byte ptr [esi + 0x35]                        # 004B0758
    call _sub_4A2A39                                     # 004B075B
    test ax, 1                                           # 004B0760
    jne .L4B0818                                         # 004B0764
    popal                                                # 004B076A
    jmp .L4B077D                                         # 004B076B
.L4B076D:
    pushal                                               # 004B076D
    call _sub_47D5D6                                     # 004B076E
    test dh, 3                                           # 004B0773
    jne .L4B0818                                         # 004B0776
    popal                                                # 004B077C
.L4B077D:
    push esi                                             # 004B077D
.L4B077E:
    mov word ptr [esi + 0x36], di                        # 004B077E
    mov word ptr [esi + 0x30], ax                        # 004B0782
    mov word ptr [esi + 0x32], cx                        # 004B0786
    mov byte ptr [esi + 0x34], dl                        # 004B078A
    mov word ptr [esi + 0x2c], bp                        # 004B078D
    mov word ptr [esi + 0x2e], bx                        # 004B0791
    mov dword ptr [esi + 0x28], 0                        # 004B0795
    mov dword ptr [esi + 0x3c], 0                        # 004B079C
    pushal                                               # 004B07A3
    call _sub_4B1BA6                                     # 004B07A4
    popal                                                # 004B07A9
    mov si, word ptr [esi + 0x3a]                        # 004B07AA
    cmp si, -1                                           # 004B07AE
    je .L4B07C2                                          # 004B07B2
    movzx esi, si                                        # 004B07B4
    shl esi, 7                                           # 004B07B7
    add_offset esi, _things                              # 004B07BA
    jmp .L4B077E                                         # 004B07C0
.L4B07C2:
    pop esi                                              # 004B07C2
    and byte ptr [__5220BC], 0xf9                        # 004B07C3
    call _sub_4AE2AB                                     # 004B07CA
    mov dl, 1                                            # 004B07CF
    xchg byte ptr [esi + 0x52], dl                       # 004B07D1
    push edx                                             # 004B07D4
    call _sub_4AE133                                     # 004B07D5
    pop edx                                              # 004B07DA
    mov byte ptr [esi + 0x52], dl                        # 004B07DB
    or byte ptr [__5220BC], 6                            # 004B07DE
    test eax, 1                                          # 004B07E5
    jne .L4B081D                                         # 004B07EA
    mov al, 1                                            # 004B07EC
    xchg byte ptr [esi + 0x52], al                       # 004B07EE
    push eax                                             # 004B07F1
    mov eax, 1                                           # 004B07F2
    call _sub_4ADB47                                     # 004B07F7
    pop eax                                              # 004B07FC
    mov byte ptr [esi + 0x52], al                        # 004B07FD
    mov byte ptr [esi + 0x5d], 1                         # 004B0800
    movzx edi, word ptr [esi + 0x3a]                     # 004B0804
    shl edi, 7                                           # 004B0808
    add_offset edi, _things                              # 004B080B
    or byte ptr [edi + 0x48], 4                          # 004B0811
    DebugStamp 0x15102015
.L4B0815:
    msvc_and eax, eax                                    # 004B0815
    ret                                                  # 004B0817
.L4B0818:
    popal                                                # 004B0818
    DebugStamp 0x15102016
    mov al, 1                                            # 004B0819
    stc                                                  # 004B081B
    ret                                                  # 004B081C
.L4B081D:
    call _sub_4B08DD                                     # 004B081D
    DebugStamp 0x15102017
    msvc_xor al, al                                      # 004B0822
    stc                                                  # 004B0824
    ret                                                  # 004B0825

    .global _sub_4B0826
_sub_4B0826:
    mov byte ptr [__9C68EA], 4                           # 004B0826
    movzx esi, di                                        # 004B082D
    shl esi, 7                                           # 004B0830
    add_offset esi, _things                              # 004B0833
    movzx edi, word ptr [esi + 0x3a]                     # 004B0839
    shl edi, 7                                           # 004B083D
    add_offset edi, _things                              # 004B0840
    movzx edi, word ptr [edi + 0x3a]                     # 004B0846
    shl edi, 7                                           # 004B084A
    add_offset edi, _things                              # 004B084D
    mov ax, word ptr [edi + 0xe]                         # 004B0853
    mov word ptr [__9C68E0], ax                          # 004B0857
    mov ax, word ptr [edi + 0x10]                        # 004B085D
    mov word ptr [__9C68E2], ax                          # 004B0861
    mov ax, word ptr [edi + 0x12]                        # 004B0867
    mov word ptr [__9C68E4], ax                          # 004B086B
    mov al, byte ptr [esi + 0x21]                        # 004B0871
    push esi                                             # 004B0874
    mov esi, 0xffffffff                                  # 004B0875
    call _sub_431E6A                                     # 004B087A
    pop esi                                              # 004B087F
    jb .L4B08D7                                          # 004B0880
    call _sub_4B0BDD                                     # 004B0882
    jb .L4B08D7                                          # 004B0887
    test bl, 1                                           # 004B0889
    je .L4B08D4                                          # 004B088C
    test bl, 0x40                                        # 004B088E
    jne .L4B08AF                                         # 004B0891
    pushal                                               # 004B0893
    mov cx, word ptr [__9C68E0]                          # 004B0894
    mov dx, word ptr [__9C68E2]                          # 004B089B
    mov bp, word ptr [__9C68E4]                          # 004B08A2
    call _sub_48B15B                                     # 004B08A9
    popal                                                # 004B08AE
.L4B08AF:
    call _sub_4B08DD                                     # 004B08AF
    msvc_mov edi, esi                                    # 004B08B4
.L4B08B6:
    and byte ptr [edi + 0x38], 0xef                      # 004B08B6
    cmp byte ptr [edi + 1], 6                            # 004B08BA
    je .L4B08CF                                          # 004B08BE
    movzx edi, word ptr [edi + 0x3a]                     # 004B08C0
    shl edi, 7                                           # 004B08C4
    add_offset edi, _things                              # 004B08C7
    jmp .L4B08B6                                         # 004B08CD
.L4B08CF:
    or word ptr [esi + 0xc], 2                           # 004B08CF
.L4B08D4:
    msvc_xor ebx, ebx                                    # 004B08D4
    ret                                                  # 004B08D6
.L4B08D7:
    mov ebx, 0x80000000                                  # 004B08D7
    ret                                                  # 004B08DC

    .global _sub_4B08DD
_sub_4B08DD:
    cmp word ptr [esi + 0x30], -1                        # 004B08DD
    je .L4B0B4F                                          # 004B08E2
    call _sub_4AD778                                     # 004B08E8
    push esi                                             # 004B08ED
.L4B08EE:
    or byte ptr [esi + 0x38], 4                          # 004B08EE
    call _sub_4CBB01                                     # 004B08F2
    mov si, word ptr [esi + 0x3a]                        # 004B08F7
    cmp si, -1                                           # 004B08FB
    je .L4B090F                                          # 004B08FF
    movzx esi, si                                        # 004B0901
    shl esi, 7                                           # 004B0904
    add_offset esi, _things                              # 004B0907
    jmp .L4B08EE                                         # 004B090D
.L4B090F:
    pop esi                                              # 004B090F
    cmp byte ptr [esi + 0x42], 1                         # 004B0910
    je .L4B0A1E                                          # 004B0914
    push esi                                             # 004B091A
.L4B091B:
    movzx esi, word ptr [esi + 0x3a]                     # 004B091B
    shl esi, 7                                           # 004B091F
    add_offset esi, _things                              # 004B0922
    cmp byte ptr [esi + 1], 6                            # 004B0928
    jne .L4B091B                                         # 004B092C
    push esi                                             # 004B092E
    mov ax, word ptr [esi + 0x30]                        # 004B092F
    mov cx, word ptr [esi + 0x32]                        # 004B0933
    movzx dx, byte ptr [esi + 0x34]                      # 004B0937
    shl dx, 2                                            # 004B093C
    movzx ebp, word ptr [esi + 0x36]                     # 004B0940
    mov bp, word ptr [ebp*2 + __96885C]                  # 004B0944
    and ebp, 0x1ff                                       # 004B094C
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004B0952
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004B095A
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004B0962
    movzx ebx, byte ptr [ebp*8 + __4F7B5D]               # 004B096A
    cmp bl, 0xc                                          # 004B0972
    jae .L4B0987                                         # 004B0975
    sub ax, word ptr [ebx*4 + __503C6C]                  # 004B0977
    sub cx, word ptr [ebx*4 + __503C6E]                  # 004B097F
.L4B0987:
    xor ebp, 4                                           # 004B0987
    mov bl, byte ptr [esi + 0x21]                        # 004B098A
    mov bh, byte ptr [esi + 0x35]                        # 004B098D
    call _sub_4A2AD7                                     # 004B0990
    pop esi                                              # 004B0995
    movzx ebp, word ptr [esi + 0x36]                     # 004B0996
    mov ax, word ptr [esi + 0x30]                        # 004B099A
    mov cx, word ptr [esi + 0x32]                        # 004B099E
    movzx dx, byte ptr [esi + 0x34]                      # 004B09A2
    shl dx, 2                                            # 004B09A7
    mov bl, byte ptr [esi + 0x21]                        # 004B09AB
    mov bh, byte ptr [esi + 0x35]                        # 004B09AE
.L4B09B1:
    push ebp                                             # 004B09B1
    mov bp, word ptr [ebp*2 + __96885C]                  # 004B09B2
    and ebp, 0x81ff                                      # 004B09BA
    pushal                                               # 004B09C0
    call _sub_4A2AD7                                     # 004B09C1
    popal                                                # 004B09C6
    test ebp, 0x8000                                     # 004B09C7
    je .L4B09DC                                          # 004B09CD
    and ebp, 0x1ff                                       # 004B09CF
    msvc_xor edi, edi                                    # 004B09D5
    call _sub_48963F                                     # 004B09D7
.L4B09DC:
    and ebp, 0x1ff                                       # 004B09DC
    mov edi, 9                                           # 004B09E2
    call _sub_4794BC                                     # 004B09E7
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004B09EC
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004B09F4
    add dx, word ptr [ebp*8 + __4F7B62]                  # 004B09FC
    pop ebp                                              # 004B0A04
    msvc_mov edi, ebp                                    # 004B0A05
    inc ebp                                              # 004B0A07
    and ebp, 0x3f                                        # 004B0A08
    and edi, 0xffffffc0                                  # 004B0A0B
    msvc_or ebp, edi                                     # 004B0A0E
    cmp word ptr [ebp*2 + __96885C], -2                  # 004B0A10
    jne .L4B09B1                                         # 004B0A19
    pop esi                                              # 004B0A1B
    jmp .L4B0A9A                                         # 004B0A1C
.L4B0A1E:
    push esi                                             # 004B0A1E
.L4B0A1F:
    movzx esi, word ptr [esi + 0x3a]                     # 004B0A1F
    shl esi, 7                                           # 004B0A23
    add_offset esi, _things                              # 004B0A26
    cmp byte ptr [esi + 1], 6                            # 004B0A2C
    jne .L4B0A1F                                         # 004B0A30
    movzx ebp, word ptr [esi + 0x36]                     # 004B0A32
    mov ax, word ptr [esi + 0x30]                        # 004B0A36
    mov cx, word ptr [esi + 0x32]                        # 004B0A3A
    movzx dx, byte ptr [esi + 0x34]                      # 004B0A3E
    shl dx, 2                                            # 004B0A43
.L4B0A47:
    push ebp                                             # 004B0A47
    mov bp, word ptr [ebp*2 + __96885C]                  # 004B0A48
    and ebp, 0x1ff                                       # 004B0A50
    push eax                                             # 004B0A56
    push ecx                                             # 004B0A57
    push edx                                             # 004B0A58
    push ebp                                             # 004B0A59
    shr dx, 2                                            # 004B0A5A
    call _sub_47D959                                     # 004B0A5E
    pop ebp                                              # 004B0A63
    pop edx                                              # 004B0A64
    pop ecx                                              # 004B0A65
    pop eax                                              # 004B0A66
    and ebp, 0x7f                                        # 004B0A67
    add ax, word ptr [ebp*8 + __4F6F8E]                  # 004B0A6A
    add cx, word ptr [ebp*8 + __4F6F90]                  # 004B0A72
    add dx, word ptr [ebp*8 + __4F6F92]                  # 004B0A7A
    pop ebp                                              # 004B0A82
    msvc_mov edi, ebp                                    # 004B0A83
    inc ebp                                              # 004B0A85
    and ebp, 0x3f                                        # 004B0A86
    and edi, 0xffffffc0                                  # 004B0A89
    msvc_or ebp, edi                                     # 004B0A8C
    cmp word ptr [ebp*2 + __96885C], -2                  # 004B0A8E
    jne .L4B0A47                                         # 004B0A97
    pop esi                                              # 004B0A99
.L4B0A9A:
    push esi                                             # 004B0A9A
.L4B0A9B:
    and byte ptr [esi + 0x38], 0xfb                      # 004B0A9B
    mov word ptr [esi + 0x30], 0xffff                    # 004B0A9F
    mov ax, 0x8000                                       # 004B0AA5
    msvc_xor cx, cx                                      # 004B0AA9
    msvc_xor dx, dx                                      # 004B0AAC
    call _sub_46FC83                                     # 004B0AAF
    mov si, word ptr [esi + 0x3a]                        # 004B0AB4
    cmp si, -1                                           # 004B0AB8
    je .L4B0ACC                                          # 004B0ABC
    movzx esi, si                                        # 004B0ABE
    shl esi, 7                                           # 004B0AC1
    add_offset esi, _things                              # 004B0AC4
    jmp .L4B0A9B                                         # 004B0ACA
.L4B0ACC:
    pop esi                                              # 004B0ACC
    push esi                                             # 004B0ACD
    movzx esi, word ptr [esi + 0x3a]                     # 004B0ACE
    shl esi, 7                                           # 004B0AD2
    add_offset esi, _things                              # 004B0AD5
    movzx esi, word ptr [esi + 0x3a]                     # 004B0ADB
    shl esi, 7                                           # 004B0ADF
    add_offset esi, _things                              # 004B0AE2
    movzx esi, word ptr [esi + 0x3a]                     # 004B0AE8
    shl esi, 7                                           # 004B0AEC
    add_offset esi, _things                              # 004B0AEF
.L4B0AF5:
    cmp byte ptr [esi + 1], 6                            # 004B0AF5
    je .L4B0B29                                          # 004B0AF9
    call _sub_4AF16A                                     # 004B0AFB
    movzx esi, word ptr [esi + 0x3a]                     # 004B0B00
    shl esi, 7                                           # 004B0B04
    add_offset esi, _things                              # 004B0B07
    movzx esi, word ptr [esi + 0x3a]                     # 004B0B0D
    shl esi, 7                                           # 004B0B11
    add_offset esi, _things                              # 004B0B14
    movzx esi, word ptr [esi + 0x3a]                     # 004B0B1A
    shl esi, 7                                           # 004B0B1E
    add_offset esi, _things                              # 004B0B21
    jmp .L4B0AF5                                         # 004B0B27
.L4B0B29:
    pop esi                                              # 004B0B29
    mov dword ptr [esi + 0x3c], 0                        # 004B0B2A
    movzx ebx, word ptr [esi + 0x3a]                     # 004B0B31
    shl ebx, 7                                           # 004B0B35
    add_offset ebx, _things                              # 004B0B38
    mov dword ptr [ebx + 0x3c], 0                        # 004B0B3E
    mov byte ptr [esi + 0x5d], 0                         # 004B0B45
    mov word ptr [esi + 0x54], 0xffff                    # 004B0B49
.L4B0B4F:
    ret                                                  # 004B0B4F

    .global _sub_4B0B50
_sub_4B0B50:
    mov byte ptr [__9C68EA], 4                           # 004B0B50
    movzx esi, di                                        # 004B0B57
    shl esi, 7                                           # 004B0B5A
    add_offset esi, _things                              # 004B0B5D
    movzx edi, word ptr [esi + 0x3a]                     # 004B0B63
    shl edi, 7                                           # 004B0B67
    add_offset edi, _things                              # 004B0B6A
    movzx edi, word ptr [edi + 0x3a]                     # 004B0B70
    shl edi, 7                                           # 004B0B74
    add_offset edi, _things                              # 004B0B77
    mov ax, word ptr [edi + 0xe]                         # 004B0B7D
    mov word ptr [__9C68E0], ax                          # 004B0B81
    mov ax, word ptr [edi + 0x10]                        # 004B0B87
    mov word ptr [__9C68E2], ax                          # 004B0B8B
    mov ax, word ptr [edi + 0x12]                        # 004B0B91
    mov word ptr [__9C68E4], ax                          # 004B0B95
    mov al, byte ptr [esi + 0x21]                        # 004B0B9B
    push esi                                             # 004B0B9E
    mov esi, 0xffffffff                                  # 004B0B9F
    call _sub_431E6A                                     # 004B0BA4
    pop esi                                              # 004B0BA9
    jb .L4B0BD7                                          # 004B0BAA
    call _sub_4B0BDD                                     # 004B0BAC
    jb .L4B0BD7                                          # 004B0BB1
    test bl, 1                                           # 004B0BB3
    je .L4B0BD4                                          # 004B0BB6
    cmp word ptr [esi + 0x30], -1                        # 004B0BB8
    je .L4B0BD4                                          # 004B0BBD
    mov byte ptr [esi + 0x5c], 2                         # 004B0BBF
    movzx edi, word ptr [esi + 0x3a]                     # 004B0BC3
    shl edi, 7                                           # 004B0BC7
    add_offset edi, _things                              # 004B0BCA
    or byte ptr [edi + 0x48], 1                          # 004B0BD0
.L4B0BD4:
    msvc_xor ebx, ebx                                    # 004B0BD4
    ret                                                  # 004B0BD6
.L4B0BD7:
    mov ebx, 0x80000000                                  # 004B0BD7
    ret                                                  # 004B0BDC

    .global _sub_4B0BDD
_sub_4B0BDD:
    push edi                                             # 004B0BDD
    cmp byte ptr [esi + 0x5d], 8                         # 004B0BDE
    je .L4B0CAA                                          # 004B0BE2
    cmp byte ptr [esi + 0x5d], 9                         # 004B0BE8
    je .L4B0CB6                                          # 004B0BEC
    cmp byte ptr [esi + 0x5d], 7                         # 004B0BF2
    je .L4B0CC2                                          # 004B0BF6
    cmp byte ptr [esi + 0x5e], 4                         # 004B0BFC
    je .L4B0C49                                          # 004B0C00
    cmp byte ptr [esi + 0x5e], 5                         # 004B0C02
    je .L4B0C49                                          # 004B0C06
    cmp word ptr [esi + 0x30], -1                        # 004B0C08
    je .L4B0C45                                          # 004B0C0D
    movzx edi, word ptr [esi + 0x3a]                     # 004B0C0F
    shl edi, 7                                           # 004B0C13
    add_offset edi, _things                              # 004B0C16
    movzx edi, word ptr [edi + 0x3a]                     # 004B0C1C
    shl edi, 7                                           # 004B0C20
    add_offset edi, _things                              # 004B0C23
    cmp dword ptr [edi + 0x56], 0                        # 004B0C29
    je .L4B0C45                                          # 004B0C2D
    movzx edi, word ptr [esi + 0x3a]                     # 004B0C2F
    shl edi, 7                                           # 004B0C33
    add_offset edi, _things                              # 004B0C36
    cmp dword ptr [edi + 0x3c], 0x3689                   # 004B0C3C
    jg .L4B0C9E                                          # 004B0C43
.L4B0C45:
    pop edi                                              # 004B0C45
    msvc_and eax, eax                                    # 004B0C46
    ret                                                  # 004B0C48
.L4B0C49:
    cmp word ptr [esi + 0x30], -1                        # 004B0C69
    je .L4B0C45                                          # 004B0C6E
    cmp byte ptr [esi + 0x5d], 6                         # 004B0C70
    je .L4B0C7C                                          # 004B0C74
    cmp byte ptr [esi + 0x5d], 1                         # 004B0C76
    jne .L4B0C9E                                         # 004B0C7A
.L4B0C7C:
    movzx edi, word ptr [esi + 0x3a]                     # 004B0C7C
    shl edi, 7                                           # 004B0C80
    add_offset edi, _things                              # 004B0C83
    movzx edi, word ptr [edi + 0x3a]                     # 004B0C89
    shl edi, 7                                           # 004B0C8D
    add_offset edi, _things                              # 004B0C90
    cmp dword ptr [edi + 0x56], 0                        # 004B0C96
    jne .L4B0C9E                                         # 004B0C9A
    jmp .L4B0C45                                         # 004B0C9C
.L4B0C9E:
    pop edi                                              # 004B0C9E
    mov word ptr [__9C68E6], 0x485                       # 004B0C9F
    stc                                                  # 004B0CA8
    ret                                                  # 004B0CA9
.L4B0CAA:
    pop edi                                              # 004B0CAA
    mov word ptr [__9C68E6], 0x486                       # 004B0CAB
    stc                                                  # 004B0CB4
    ret                                                  # 004B0CB5
.L4B0CB6:
    pop edi                                              # 004B0CB6
    mov word ptr [__9C68E6], 0x488                       # 004B0CB7
    stc                                                  # 004B0CC0
    ret                                                  # 004B0CC1
.L4B0CC2:
    pop edi                                              # 004B0CC2
    mov word ptr [__9C68E6], 0x487                       # 004B0CC3
    stc                                                  # 004B0CCC
    ret                                                  # 004B0CCD

    .global _sub_4B0CCE
_sub_4B0CCE:
    test byte ptr [esi + 0x38], 0x10                     # 004B0CCE
    je .L4B0CDF                                          # 004B0CD2
    mov al, byte ptr [esi + 0x21]                        # 004B0CD4
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B0CD7
    jne .L4B0CF7                                         # 004B0CDD
.L4B0CDF:
    movzx ebp, word ptr [esi + 0x40]                     # 004B0CDF
    push esi                                             # 004B0CE3
    movzx ecx, byte ptr [esi + 1]                        # 004B0CE4
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B0CE8
    jmp dword ptr [ecx*4 + __5003A4]                     # 004B0CEF
    .global _loc_4B0CF6
_loc_4B0CF6:
    pop esi                                              # 004B0CF6
.L4B0CF7:
    ret                                                  # 004B0CF7
    .global _loc_4B0CF8
_loc_4B0CF8:
    pop esi                                              # 004B0CF8
    ret                                                  # 004B0CF9
    .global _loc_4B0CFA
_loc_4B0CFA:
    pop esi                                              # 004B0CFA
    ret                                                  # 004B0CFB
    .global _loc_4B0CFC
_loc_4B0CFC:
    movzx ecx, byte ptr [esi + 0x39]                     # 004B0CFC
    cmp cl, 0xff                                         # 004B0D00
    je .L4B0E8B                                          # 004B0D03
    movzx edi, byte ptr [ecx + ebp + 0xb5]               # 004B0D09
    movzx eax, byte ptr [esi + 0x1f]                     # 004B0D11
    test byte ptr [esi + 0x38], 2                        # 004B0D15
    je .L4B0D24                                          # 004B0D19
    xor ebx, 0x20                                        # 004B0D1B
    mov al, byte ptr [eax + __500160]                    # 004B0D1E
.L4B0D24:
    shr ebx, 1                                           # 004B0D24
    imul ecx, ecx, 0x12                                  # 004B0D26
    cmp al, 0                                            # 004B0D29
    jne .L4B0E8D                                         # 004B0D2B
    and ebx, 0x1f                                        # 004B0D31
    test byte ptr [ecx + ebp + 0xb5], 2                  # 004B0D34
    je .L4B0D41                                          # 004B0D3C
    and ebx, 0xf                                         # 004B0D3E
.L4B0D41:
    movzx eax, byte ptr [ecx + ebp + 0xb9]               # 004B0D41
    imul ebx, eax                                        # 004B0D49
    movzx eax, byte ptr [esi + 0x46]                     # 004B0D4C
    msvc_add ebx, eax                                    # 004B0D50
    add ebx, dword ptr [ecx + ebp + 0xba]                # 004B0D52
    movzx eax, byte ptr [esi + 0x24]                     # 004B0D59
    movzx ecx, byte ptr [esi + 0x25]                     # 004B0D5D
    shl eax, 0x13                                        # 004B0D61
    shl ecx, 0x18                                        # 004B0D64
    msvc_or ebx, eax                                     # 004B0D67
    msvc_or ebx, ecx                                     # 004B0D69
    or ebx, 0xa0000000                                   # 004B0D6B
    test byte ptr [esi + 0x38], 0x10                     # 004B0D71
    je .L4B0D92                                          # 004B0D75
    mov byte ptr [__E3F0AC], 0                           # 004B0D77
    and ebx, 0x7ffff                                     # 004B0D7E
    movzx eax, byte ptr [__50AED8]                       # 004B0D84
    or ebx, dword ptr [eax*4 + __4FFAE8]                 # 004B0D8B
.L4B0D92:
    test word ptr [esi + 0xc], 0x20                      # 004B0D92
    je .L4B0DA6                                          # 004B0D98
    and ebx, 0x7ffff                                     # 004B0D9A
    or ebx, 0x23a00000                                   # 004B0DA0
.L4B0DA6:
    cmp byte ptr [esi + 0x42], 2                         # 004B0DA6
    je .L4B0E34                                          # 004B0DAA
    test edi, 0x10                                       # 004B0DB0
    jne .L4B0DF6                                         # 004B0DB6
    mov word ptr [__E3F0A0], 0xfffa                      # 004B0DB8
    mov word ptr [__E3F0A2], 0xfffa                      # 004B0DC1
    mov al, 0                                            # 004B0DCA
    mov cl, 0                                            # 004B0DCC
    mov di, 0xc                                          # 004B0DCE
    mov si, 0xc                                          # 004B0DD2
    mov ah, 1                                            # 004B0DD6
    add dx, 3                                            # 004B0DD8
    mov word ptr [__E3F0A4], dx                          # 004B0DDC
    sub dx, 3                                            # 004B0DE3
    mov ebp, dword ptr [__E3F0B8]                        # 004B0DE7
    call dword ptr [ebp*4 + __4FD140]                    # 004B0DED
    pop esi                                              # 004B0DF4
    ret                                                  # 004B0DF5
.L4B0DF6:
    mov word ptr [__E3F0A0], 0xfff7                      # 004B0DF6
    mov word ptr [__E3F0A2], 0xfff7                      # 004B0DFF
    mov al, 0                                            # 004B0E08
    mov cl, 0                                            # 004B0E0A
    mov di, 0x12                                         # 004B0E0C
    mov si, 0x12                                         # 004B0E10
    mov ah, 5                                            # 004B0E14
    add dx, 3                                            # 004B0E16
    mov word ptr [__E3F0A4], dx                          # 004B0E1A
    sub dx, 3                                            # 004B0E21
    mov ebp, dword ptr [__E3F0B8]                        # 004B0E25
    call dword ptr [ebp*4 + __4FD140]                    # 004B0E2B
    pop esi                                              # 004B0E32
    ret                                                  # 004B0E33
.L4B0E34:
    test byte ptr [esi + 0x38], 0x10                     # 004B0E34
    jne .L4B0E8B                                         # 004B0E38
    mov byte ptr [__E3F0AC], 0                           # 004B0E3A
    and ebx, 0x7ffff                                     # 004B0E41
    or ebx, 0x41900000                                   # 004B0E47
    mov word ptr [__E3F0A0], 8                           # 004B0E4D
    mov word ptr [__E3F0A2], 8                           # 004B0E56
    mov al, 0                                            # 004B0E5F
    mov cl, 0                                            # 004B0E61
    mov di, 0x30                                         # 004B0E63
    mov si, 0x30                                         # 004B0E67
    mov ah, 2                                            # 004B0E6B
    add dx, 6                                            # 004B0E6D
    mov word ptr [__E3F0A4], dx                          # 004B0E71
    sub dx, 6                                            # 004B0E78
    mov ebp, dword ptr [__E3F0B8]                        # 004B0E7C
    call dword ptr [ebp*4 + __4FD200]                    # 004B0E82
    pop esi                                              # 004B0E89
    ret                                                  # 004B0E8A
.L4B0E8B:
    pop esi                                              # 004B0E8B
    ret                                                  # 004B0E8C
.L4B0E8D:
    and ebx, 0x1f                                        # 004B0E8D
    cmp al, 2                                            # 004B0E90
    je .L4B0F67                                          # 004B0E92
    cmp al, 9                                            # 004B0E98
    je .L4B0F67                                          # 004B0E9A
    cmp al, 6                                            # 004B0EA0
    je .L4B0F57                                          # 004B0EA2
    cmp al, 0xa                                          # 004B0EA8
    je .L4B0F57                                          # 004B0EAA
    cmp al, 4                                            # 004B0EB0
    je .L4B0EC8                                          # 004B0EB2
    cmp al, 0xb                                          # 004B0EB4
    je .L4B0EC8                                          # 004B0EB6
    xor ebx, 0x20                                        # 004B0EB8
    test byte ptr [ecx + ebp + 0xb5], 2                  # 004B0EBB
    je .L4B0EC8                                          # 004B0EC3
    xor ebx, 0x30                                        # 004B0EC5
.L4B0EC8:
    movzx eax, byte ptr [ecx + ebp + 0xb9]               # 004B0EC8
    imul ebx, eax                                        # 004B0ED0
    movzx eax, byte ptr [esi + 0x46]                     # 004B0ED3
    msvc_add ebx, eax                                    # 004B0ED7
    add ebx, dword ptr [ecx + ebp + 0xc2]                # 004B0ED9
    movzx eax, byte ptr [esi + 0x24]                     # 004B0EE0
    movzx ecx, byte ptr [esi + 0x25]                     # 004B0EE4
    shl eax, 0x13                                        # 004B0EE8
    shl ecx, 0x18                                        # 004B0EEB
    msvc_or ebx, eax                                     # 004B0EEE
    msvc_or ebx, ecx                                     # 004B0EF0
    or ebx, 0xa0000000                                   # 004B0EF2
    test byte ptr [esi + 0x38], 0x10                     # 004B0EF8
    je .L4B0F19                                          # 004B0EFC
    mov byte ptr [__E3F0AC], 0                           # 004B0EFE
    and ebx, 0x7ffff                                     # 004B0F05
    movzx eax, byte ptr [__50AED8]                       # 004B0F0B
    or ebx, dword ptr [eax*4 + __4FFAE8]                 # 004B0F12
.L4B0F19:
    mov word ptr [__E3F0A0], 0xfffa                      # 004B0F19
    mov word ptr [__E3F0A2], 0xfffa                      # 004B0F22
    mov al, 0                                            # 004B0F2B
    mov cl, 0                                            # 004B0F2D
    mov di, 0xc                                          # 004B0F2F
    mov si, 0xc                                          # 004B0F33
    mov ah, 1                                            # 004B0F37
    add dx, 3                                            # 004B0F39
    mov word ptr [__E3F0A4], dx                          # 004B0F3D
    sub dx, 3                                            # 004B0F44
    mov ebp, dword ptr [__E3F0B8]                        # 004B0F48
    call dword ptr [ebp*4 + __4FD140]                    # 004B0F4E
    pop esi                                              # 004B0F55
    ret                                                  # 004B0F56
.L4B0F57:
    xor ebx, 0x20                                        # 004B0F57
    test byte ptr [ecx + ebp + 0xb5], 2                  # 004B0F5A
    je .L4B0F67                                          # 004B0F62
    xor ebx, 0x30                                        # 004B0F64
.L4B0F67:
    movzx eax, byte ptr [ecx + ebp + 0xb9]               # 004B0F67
    imul ebx, eax                                        # 004B0F6F
    movzx eax, byte ptr [esi + 0x46]                     # 004B0F72
    msvc_add ebx, eax                                    # 004B0F76
    add ebx, dword ptr [ecx + ebp + 0xbe]                # 004B0F78
    movzx eax, byte ptr [esi + 0x24]                     # 004B0F7F
    movzx ecx, byte ptr [esi + 0x25]                     # 004B0F83
    shl eax, 0x13                                        # 004B0F87
    shl ecx, 0x18                                        # 004B0F8A
    msvc_or ebx, eax                                     # 004B0F8D
    msvc_or ebx, ecx                                     # 004B0F8F
    or ebx, 0xa0000000                                   # 004B0F91
    test byte ptr [esi + 0x38], 0x10                     # 004B0F97
    je .L4B0FB8                                          # 004B0F9B
    mov byte ptr [__E3F0AC], 0                           # 004B0F9D
    and ebx, 0x7ffff                                     # 004B0FA4
    movzx eax, byte ptr [__50AED8]                       # 004B0FAA
    or ebx, dword ptr [eax*4 + __4FFAE8]                 # 004B0FB1
.L4B0FB8:
    test edi, 0x10                                       # 004B0FB8
    jne .L4B0FFE                                         # 004B0FBE
    mov word ptr [__E3F0A0], 0xfffa                      # 004B0FC0
    mov word ptr [__E3F0A2], 0xfffa                      # 004B0FC9
    mov al, 0                                            # 004B0FD2
    mov cl, 0                                            # 004B0FD4
    mov di, 0xc                                          # 004B0FD6
    mov si, 0xc                                          # 004B0FDA
    mov ah, 1                                            # 004B0FDE
    add dx, 3                                            # 004B0FE0
    mov word ptr [__E3F0A4], dx                          # 004B0FE4
    sub dx, 3                                            # 004B0FEB
    mov ebp, dword ptr [__E3F0B8]                        # 004B0FEF
    call dword ptr [ebp*4 + __4FD140]                    # 004B0FF5
    pop esi                                              # 004B0FFC
    ret                                                  # 004B0FFD
.L4B0FFE:
    mov word ptr [__E3F0A0], 0xfff8                      # 004B0FFE
    mov word ptr [__E3F0A2], 0xfff8                      # 004B1007
    mov al, 0                                            # 004B1010
    mov cl, 0                                            # 004B1012
    mov di, 0x10                                         # 004B1014
    mov si, 0x10                                         # 004B1018
    mov ah, 1                                            # 004B101C
    add dx, 3                                            # 004B101E
    mov word ptr [__E3F0A4], dx                          # 004B1022
    sub dx, 3                                            # 004B1029
    mov ebp, dword ptr [__E3F0B8]                        # 004B102D
    call dword ptr [ebp*4 + __4FD140]                    # 004B1033
    pop esi                                              # 004B103A
    ret                                                  # 004B103B
    .global _loc_4B103C
_loc_4B103C:
    movzx ecx, byte ptr [esi + 0x39]                     # 004B103C
    cmp cl, 0xff                                         # 004B1040
    je .L4B15FD                                          # 004B1043
    movzx eax, byte ptr [esi + 0x1f]                     # 004B1049
    msvc_mov edi, ebx                                    # 004B104D
    test byte ptr [esi + 0x38], 2                        # 004B104F
    je .L4B105E                                          # 004B1053
    xor ebx, 0x20                                        # 004B1055
    mov al, byte ptr [eax + __500160]                    # 004B1058
.L4B105E:
    imul ecx, ecx, 0x1e                                  # 004B105E
    cmp al, 0                                            # 004B1061
    je .L4B10A1                                          # 004B1063
    cmp al, 2                                            # 004B1065
    je .L4B117D                                          # 004B1067
    cmp al, 6                                            # 004B106D
    je .L4B11D3                                          # 004B106F
    cmp al, 1                                            # 004B1075
    je .L4B10E9                                          # 004B1077
    cmp al, 5                                            # 004B1079
    je .L4B1128                                          # 004B107B
    cmp al, 4                                            # 004B1081
    je .L4B12FF                                          # 004B1083
    cmp al, 8                                            # 004B1089
    je .L4B1355                                          # 004B108B
    cmp al, 3                                            # 004B1091
    je .L4B1267                                          # 004B1093
    cmp al, 7                                            # 004B1099
    je .L4B12AA                                          # 004B109B
.L4B10A1:
    push ecx                                             # 004B10A1
    test byte ptr [ecx + ebp + 0x43], 2                  # 004B10A2
    je .L4B10AC                                          # 004B10A7
    and ebx, 0x1f                                        # 004B10A9
.L4B10AC:
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B10AC
    movzx ecx, byte ptr [ecx + ebp + 0x47]               # 004B10B1
    mov dword ptr [__113614A], eax                       # 004B10B6
    mov cl, byte ptr [ecx + __503F20]                    # 004B10BB
    shr ebx, cl                                          # 004B10C1
    imul ebx, eax                                        # 004B10C3
    pop ecx                                              # 004B10C6
    mov dword ptr [__1136146], ebx                       # 004B10C7
    movzx eax, byte ptr [esi + 0x46]                     # 004B10CD
    msvc_add ebx, eax                                    # 004B10D1
    mov al, byte ptr [esi + 0x47]                        # 004B10D3
    msvc_add ebx, eax                                    # 004B10D6
    mov eax, dword ptr [ecx + ebp + 0x4a]                # 004B10D8
    add dword ptr [__113614A], eax                       # 004B10DC
    msvc_add ebx, eax                                    # 004B10E2
    msvc_jmp .L4B1467                                    # 004B10E4
.L4B10E9:
    test byte ptr [ecx + ebp + 0x43], 8                  # 004B10E9
    je .L4B10A1                                          # 004B10EE
    add ebx, 7                                           # 004B10F0
    shr ebx, 4                                           # 004B10F3
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B10F6
    mov dword ptr [__113614A], eax                       # 004B10FB
    and ebx, 3                                           # 004B1100
    imul ebx, eax                                        # 004B1103
    mov dword ptr [__1136146], ebx                       # 004B1106
    movzx eax, byte ptr [esi + 0x46]                     # 004B110C
    msvc_add ebx, eax                                    # 004B1110
    mov al, byte ptr [esi + 0x47]                        # 004B1112
    msvc_add ebx, eax                                    # 004B1115
    mov eax, dword ptr [ecx + ebp + 0x52]                # 004B1117
    add dword ptr [__113614A], eax                       # 004B111B
    msvc_add ebx, eax                                    # 004B1121
    msvc_jmp .L4B1467                                    # 004B1123
.L4B1128:
    test byte ptr [ecx + ebp + 0x43], 8                  # 004B1128
    je .L4B10A1                                          # 004B112D
    test byte ptr [ecx + ebp + 0x43], 2                  # 004B1133
    jne .L4B1175                                         # 004B1138
    add ebx, 7                                           # 004B113A
    shr ebx, 4                                           # 004B113D
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B1140
    mov dword ptr [__113614A], eax                       # 004B1145
    and ebx, 3                                           # 004B114A
    add ebx, 4                                           # 004B114D
    imul ebx, eax                                        # 004B1150
    mov dword ptr [__1136146], ebx                       # 004B1153
    movzx eax, byte ptr [esi + 0x46]                     # 004B1159
    msvc_add ebx, eax                                    # 004B115D
    mov al, byte ptr [esi + 0x47]                        # 004B115F
    msvc_add ebx, eax                                    # 004B1162
    mov eax, dword ptr [ecx + ebp + 0x52]                # 004B1164
    add dword ptr [__113614A], eax                       # 004B1168
    msvc_add ebx, eax                                    # 004B116E
    msvc_jmp .L4B1467                                    # 004B1170
.L4B1175:
    xor ebx, 0x20                                        # 004B1175
    msvc_jmp .L4B10E9                                    # 004B1178
.L4B117D:
    test byte ptr [ecx + ebp + 0x43], 8                  # 004B117D
    je .L4B10A1                                          # 004B1182
    push ecx                                             # 004B1188
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B1189
    mov dword ptr [__113614A], eax                       # 004B118E
    movzx ecx, byte ptr [ecx + ebp + 0x48]               # 004B1193
    mov cl, byte ptr [ecx + __503F20]                    # 004B1198
    shr ebx, cl                                          # 004B119E
    pop ecx                                              # 004B11A0
    add ebx, 4                                           # 004B11A1
    test byte ptr [ecx + ebp + 0x43], 2                  # 004B11A4
    jne .L4B11AE                                         # 004B11A9
    add ebx, 4                                           # 004B11AB
.L4B11AE:
    imul ebx, eax                                        # 004B11AE
    mov dword ptr [__1136146], ebx                       # 004B11B1
    movzx eax, byte ptr [esi + 0x46]                     # 004B11B7
    msvc_add ebx, eax                                    # 004B11BB
    mov al, byte ptr [esi + 0x47]                        # 004B11BD
    msvc_add ebx, eax                                    # 004B11C0
    mov eax, dword ptr [ecx + ebp + 0x52]                # 004B11C2
    add dword ptr [__113614A], eax                       # 004B11C6
    msvc_add ebx, eax                                    # 004B11CC
    msvc_jmp .L4B1467                                    # 004B11CE
.L4B11D3:
    test byte ptr [ecx + ebp + 0x43], 8                  # 004B11D3
    je .L4B10A1                                          # 004B11D8
    test byte ptr [ecx + ebp + 0x43], 2                  # 004B11DE
    jne .L4B1229                                         # 004B11E3
    add ebx, 0x40                                        # 004B11E5
    push ecx                                             # 004B11E8
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B11E9
    mov dword ptr [__113614A], eax                       # 004B11EE
    movzx ecx, byte ptr [ecx + ebp + 0x48]               # 004B11F3
    mov cl, byte ptr [ecx + __503F20]                    # 004B11F8
    shr ebx, cl                                          # 004B11FE
    pop ecx                                              # 004B1200
    add ebx, 8                                           # 004B1201
    imul ebx, eax                                        # 004B1204
    mov dword ptr [__1136146], ebx                       # 004B1207
    movzx eax, byte ptr [esi + 0x46]                     # 004B120D
    msvc_add ebx, eax                                    # 004B1211
    mov al, byte ptr [esi + 0x47]                        # 004B1213
    msvc_add ebx, eax                                    # 004B1216
    mov eax, dword ptr [ecx + ebp + 0x52]                # 004B1218
    add dword ptr [__113614A], eax                       # 004B121C
    msvc_add ebx, eax                                    # 004B1222
    msvc_jmp .L4B1467                                    # 004B1224
.L4B1229:
    xor ebx, 0x20                                        # 004B1229
    push ecx                                             # 004B122C
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B122D
    mov dword ptr [__113614A], eax                       # 004B1232
    movzx ecx, byte ptr [ecx + ebp + 0x48]               # 004B1237
    mov cl, byte ptr [ecx + __503F20]                    # 004B123C
    shr ebx, cl                                          # 004B1242
    pop ecx                                              # 004B1244
    add ebx, 4                                           # 004B1245
    imul ebx, eax                                        # 004B1248
    movzx eax, byte ptr [esi + 0x46]                     # 004B124B
    msvc_add ebx, eax                                    # 004B124F
    mov al, byte ptr [esi + 0x47]                        # 004B1251
    msvc_add ebx, eax                                    # 004B1254
    mov eax, dword ptr [ecx + ebp + 0x52]                # 004B1256
    add dword ptr [__113614A], eax                       # 004B125A
    msvc_add ebx, eax                                    # 004B1260
    msvc_jmp .L4B1467                                    # 004B1262
.L4B1267:
    test byte ptr [ecx + ebp + 0x43], 0x10               # 004B1267
    je .L4B117D                                          # 004B126C
    add ebx, 7                                           # 004B1272
    shr ebx, 4                                           # 004B1275
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B1278
    mov dword ptr [__113614A], eax                       # 004B127D
    and ebx, 3                                           # 004B1282
    imul ebx, eax                                        # 004B1285
    mov dword ptr [__1136146], ebx                       # 004B1288
    movzx eax, byte ptr [esi + 0x46]                     # 004B128E
    msvc_add ebx, eax                                    # 004B1292
    mov al, byte ptr [esi + 0x47]                        # 004B1294
    msvc_add ebx, eax                                    # 004B1297
    mov eax, dword ptr [ecx + ebp + 0x56]                # 004B1299
    add dword ptr [__113614A], eax                       # 004B129D
    msvc_add ebx, eax                                    # 004B12A3
    msvc_jmp .L4B1467                                    # 004B12A5
.L4B12AA:
    test byte ptr [ecx + ebp + 0x43], 0x10               # 004B12AA
    je .L4B11D3                                          # 004B12AF
    test byte ptr [ecx + ebp + 0x43], 2                  # 004B12B5
    jne .L4B12F7                                         # 004B12BA
    add ebx, 7                                           # 004B12BC
    shr ebx, 4                                           # 004B12BF
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B12C2
    mov dword ptr [__113614A], eax                       # 004B12C7
    and ebx, 3                                           # 004B12CC
    add ebx, 4                                           # 004B12CF
    imul ebx, eax                                        # 004B12D2
    mov dword ptr [__1136146], ebx                       # 004B12D5
    movzx eax, byte ptr [esi + 0x46]                     # 004B12DB
    msvc_add ebx, eax                                    # 004B12DF
    mov al, byte ptr [esi + 0x47]                        # 004B12E1
    msvc_add ebx, eax                                    # 004B12E4
    mov eax, dword ptr [ecx + ebp + 0x56]                # 004B12E6
    add dword ptr [__113614A], eax                       # 004B12EA
    msvc_add ebx, eax                                    # 004B12F0
    msvc_jmp .L4B1467                                    # 004B12F2
.L4B12F7:
    xor ebx, 0x20                                        # 004B12F7
    msvc_jmp .L4B1267                                    # 004B12FA
.L4B12FF:
    test byte ptr [ecx + ebp + 0x43], 0x10               # 004B12FF
    je .L4B117D                                          # 004B1304
    push ecx                                             # 004B130A
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B130B
    mov dword ptr [__113614A], eax                       # 004B1310
    movzx ecx, byte ptr [ecx + ebp + 0x48]               # 004B1315
    mov cl, byte ptr [ecx + __503F20]                    # 004B131A
    shr ebx, cl                                          # 004B1320
    pop ecx                                              # 004B1322
    add ebx, 4                                           # 004B1323
    test byte ptr [ecx + ebp + 0x43], 2                  # 004B1326
    jne .L4B1330                                         # 004B132B
    add ebx, 4                                           # 004B132D
.L4B1330:
    imul ebx, eax                                        # 004B1330
    mov dword ptr [__1136146], ebx                       # 004B1333
    movzx eax, byte ptr [esi + 0x46]                     # 004B1339
    msvc_add ebx, eax                                    # 004B133D
    mov al, byte ptr [esi + 0x47]                        # 004B133F
    msvc_add ebx, eax                                    # 004B1342
    mov eax, dword ptr [ecx + ebp + 0x56]                # 004B1344
    add dword ptr [__113614A], eax                       # 004B1348
    msvc_add ebx, eax                                    # 004B134E
    msvc_jmp .L4B1467                                    # 004B1350
.L4B1355:
    test byte ptr [ecx + ebp + 0x43], 0x10               # 004B1355
    je .L4B11D3                                          # 004B135A
    test byte ptr [ecx + ebp + 0x43], 2                  # 004B1360
    jne .L4B13AB                                         # 004B1365
    add ebx, 0x40                                        # 004B1367
    push ecx                                             # 004B136A
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B136B
    mov dword ptr [__113614A], eax                       # 004B1370
    movzx ecx, byte ptr [ecx + ebp + 0x48]               # 004B1375
    mov cl, byte ptr [ecx + __503F20]                    # 004B137A
    shr ebx, cl                                          # 004B1380
    pop ecx                                              # 004B1382
    add ebx, 8                                           # 004B1383
    imul ebx, eax                                        # 004B1386
    mov dword ptr [__1136146], ebx                       # 004B1389
    movzx eax, byte ptr [esi + 0x46]                     # 004B138F
    msvc_add ebx, eax                                    # 004B1393
    mov al, byte ptr [esi + 0x47]                        # 004B1395
    msvc_add ebx, eax                                    # 004B1398
    mov eax, dword ptr [ecx + ebp + 0x56]                # 004B139A
    add dword ptr [__113614A], eax                       # 004B139E
    msvc_add ebx, eax                                    # 004B13A4
    msvc_jmp .L4B1467                                    # 004B13A6
.L4B13AB:
    xor ebx, 0x20                                        # 004B13AB
    push ecx                                             # 004B13AE
    movzx eax, byte ptr [ecx + ebp + 0x49]               # 004B13AF
    mov dword ptr [__113614A], eax                       # 004B13B4
    movzx ecx, byte ptr [ecx + ebp + 0x48]               # 004B13B9
    mov cl, byte ptr [ecx + __503F20]                    # 004B13BE
    shr ebx, cl                                          # 004B13C4
    pop ecx                                              # 004B13C6
    add ebx, 4                                           # 004B13C7
    imul ebx, eax                                        # 004B13CA
    mov dword ptr [__1136146], ebx                       # 004B13CD
    movzx eax, byte ptr [esi + 0x46]                     # 004B13D3
    msvc_add ebx, eax                                    # 004B13D7
    mov al, byte ptr [esi + 0x47]                        # 004B13D9
    msvc_add ebx, eax                                    # 004B13DC
    mov eax, dword ptr [ecx + ebp + 0x56]                # 004B13DE
    add dword ptr [__113614A], eax                       # 004B13E2
    msvc_add ebx, eax                                    # 004B13E8
    jmp .L4B1467                                         # 004B13EA
.L4B13EC:
    movzx eax, byte ptr [esi + 0x24]                     # 004B13EC
    movzx ecx, byte ptr [esi + 0x25]                     # 004B13F0
    shl eax, 0x13                                        # 004B13F4
    shl ecx, 0x18                                        # 004B13F7
    msvc_or ebx, eax                                     # 004B13FA
    msvc_or ebx, ecx                                     # 004B13FC
    or ebx, 0xa0000000                                   # 004B13FE
    test byte ptr [esi + 0x38], 0x10                     # 004B1404
    je .L4B1425                                          # 004B1408
    mov byte ptr [__E3F0AC], 0                           # 004B140A
    and ebx, 0x7ffff                                     # 004B1411
    movzx eax, byte ptr [__50AED8]                       # 004B1417
    or ebx, dword ptr [eax*4 + __4FFAE8]                 # 004B141E
.L4B1425:
    test word ptr [esi + 0xc], 0x20                      # 004B1425
    je .L4B1439                                          # 004B142B
    and ebx, 0x7ffff                                     # 004B142D
    or ebx, 0x23a00000                                   # 004B1433
.L4B1439:
    add dx, 0xb                                          # 004B1439
    mov word ptr [__E3F0A4], dx                          # 004B143D
    sub dx, 0xb                                          # 004B1444
    mov word ptr [__E3F0A0], 0xfff8                      # 004B1448
    mov word ptr [__E3F0A2], 0xfff8                      # 004B1451
    mov di, 0x30                                         # 004B145A
    mov si, 0x30                                         # 004B145E
    msvc_jmp .L4B158A                                    # 004B1462
.L4B1467:
    test byte ptr [ecx + ebp + 0x43], 0x20               # 004B1467
    jne .L4B1478                                         # 004B146C
    mov dword ptr [__1136146], 0xffffffff                # 004B146E
.L4B1478:
    cmp byte ptr [esi + 0x42], 2                         # 004B1478
    je .L4B13EC                                          # 004B147C
    cmp byte ptr [esi + 0x42], 3                         # 004B1482
    je .L4B13EC                                          # 004B1486
    push ebx                                             # 004B148C
    push ecx                                             # 004B148D
    movzx ecx, byte ptr [esi + 0x54]                     # 004B148E
    imul ecx, ecx, 6                                     # 004B1492
    mov bl, byte ptr [ecx + ebp + 0x24]                  # 004B1495
    sub bl, byte ptr [ecx + ebp + 0x25]                  # 004B1499
    test byte ptr [esi + 0x38], 2                        # 004B149D
    je .L4B14A5                                          # 004B14A1
    neg bl                                               # 004B14A3
.L4B14A5:
    test byte ptr [ecx + ebp + 0x28], 0x80               # 004B14A5
    je .L4B14AE                                          # 004B14AA
    neg bl                                               # 004B14AC
.L4B14AE:
    movsx ebx, bl                                        # 004B14AE
    movsx eax, word ptr [edi*4 + __503B6A]               # 004B14B1
    imul eax, ebx                                        # 004B14B9
    sar eax, 0xb                                         # 004B14BC
    mov word ptr [__E3F0A0], ax                          # 004B14BF
    movsx eax, word ptr [edi*4 + __503B6C]               # 004B14C5
    imul eax, ebx                                        # 004B14CD
    sar eax, 0xb                                         # 004B14D0
    mov word ptr [__E3F0A2], ax                          # 004B14D3
    pop ecx                                              # 004B14D9
    pop ebx                                              # 004B14DA
    movzx ebp, byte ptr [ecx + ebp + 0x42]               # 004B14DB
    shl ebp, 1                                           # 004B14E0
    movzx eax, byte ptr [esi + 0x24]                     # 004B14E2
    movzx ecx, byte ptr [esi + 0x25]                     # 004B14E6
    sub ebp, 4                                           # 004B14EA
    shl eax, 0x13                                        # 004B14ED
    shl ecx, 0x18                                        # 004B14F0
    msvc_or ebx, eax                                     # 004B14F3
    msvc_or ebx, ecx                                     # 004B14F5
    and edi, 0x1f                                        # 004B14F7
    or ebx, 0xa0000000                                   # 004B14FA
    movsx eax, byte ptr [edi*4 + __5001B4]               # 004B1500
    movsx ecx, byte ptr [edi*4 + __5001B5]               # 004B1508
    imul eax, ebp                                        # 004B1510
    imul ecx, ebp                                        # 004B1513
    sar eax, 8                                           # 004B1516
    sar ecx, 8                                           # 004B1519
    add word ptr [__E3F0A0], ax                          # 004B151C
    add word ptr [__E3F0A2], cx                          # 004B1523
    test byte ptr [esi + 0x38], 0x10                     # 004B152A
    je .L4B154B                                          # 004B152E
    mov byte ptr [__E3F0AC], 0                           # 004B1530
    and ebx, 0x7ffff                                     # 004B1537
    movzx eax, byte ptr [__50AED8]                       # 004B153D
    or ebx, dword ptr [eax*4 + __4FFAE8]                 # 004B1544
.L4B154B:
    test word ptr [esi + 0xc], 0x20                      # 004B154B
    je .L4B155F                                          # 004B1551
    and ebx, 0x7ffff                                     # 004B1553
    or ebx, 0x23a00000                                   # 004B1559
.L4B155F:
    movsx esi, byte ptr [edi*4 + __5001B7]               # 004B155F
    movsx edi, byte ptr [edi*4 + __5001B6]               # 004B1567
    imul edi, ebp                                        # 004B156F
    imul esi, ebp                                        # 004B1572
    sar edi, 8                                           # 004B1575
    sar esi, 8                                           # 004B1578
    add dx, 0xb                                          # 004B157B
    mov word ptr [__E3F0A4], dx                          # 004B157F
    sub dx, 0xb                                          # 004B1586
.L4B158A:
    msvc_xor al, al                                      # 004B158A
    msvc_xor cl, cl                                      # 004B158C
    mov ah, 0xf                                          # 004B158E
    mov ebp, dword ptr [__E3F0B8]                        # 004B1590
    call dword ptr [ebp*4 + __4FD200]                    # 004B1596
    pop esi                                              # 004B159D
    cmp dword ptr [__1136146], -1                        # 004B159E
    je .L4B15FC                                          # 004B15A5
    movzx edi, word ptr [esi + 0x26]                     # 004B15A7
    shl edi, 7                                           # 004B15AB
    add_offset edi, _things                              # 004B15AE
    movzx edi, word ptr [edi + 0x3a]                     # 004B15B4
    shl edi, 7                                           # 004B15B8
    add_offset edi, _things                              # 004B15BB
    movzx edi, word ptr [edi + 0x3a]                     # 004B15C1
    shl edi, 7                                           # 004B15C5
    add_offset edi, _things                              # 004B15C8
    cmp byte ptr [edi + 0x5b], 0                         # 004B15CE
    je .L4B15FC                                          # 004B15D2
    test byte ptr [esi + 0x38], 0x10                     # 004B15D4
    jne .L4B15FC                                         # 004B15D8
    test word ptr [esi + 0xc], 0x20                      # 004B15DA
    jne .L4B15FC                                         # 004B15E0
    push esi                                             # 004B15E2
    mov ebx, dword ptr [__1136146]                       # 004B15E3
    add ebx, dword ptr [__113614A]                       # 004B15E9
    dec ebx                                              # 004B15EF
    msvc_xor ax, ax                                      # 004B15F0
    msvc_xor cx, cx                                      # 004B15F3
    call _sub_45E779                                     # 004B15F6
    pop esi                                              # 004B15FB
.L4B15FC:
    ret                                                  # 004B15FC
.L4B15FD:
    pop esi                                              # 004B15FD
    ret                                                  # 004B15FE

    .global fn4b12a1
fn4b12a1:
    push esi
    push ebp
    msvc_xor ebp, ebp
.L0x4b12a5:
    je .L0x4b12b9
    je .L0x4b12b9
    push ebx
    push edi
    je .L0x4b12af
    jne .L0x4b12b7
.L0x4b12af:
    jne .L0x4b12b3
    push edx
    pop edx
.L0x4b12b3:
    pop edi
    pop ebx
    jmp .L0x4b12bd
.L0x4b12b7:
    pop edi
    pop ebx
.L0x4b12b9:
    jae .L0x4b12bd
    jmp .L0x4b12c3
.L0x4b12bd:
    call _sub_4CBB01
    inc ebp
.L0x4b12c3:
    je .L0x4b12c7
    jmp .L0x4b12a5
.L0x4b12c7:
    msvc_or ebp, ebp
    je .L0x4b12cf
    pop ebp
    pop esi
    stc
    ret
.L0x4b12cf:
    pop ebp
    pop esi
    msvc_and eax, eax
    ret
    push eax
    push esi
    push ebp
    msvc_xor ebp, ebp
.L0x4b12d9:
    je .L0x4b1307
    msvc_or ax, ax
    jns .L0x4b12e3
    neg ax
.L0x4b12e3:
    cmp ax, 0x1f4
    ja .L0x4b12ed
    jne .L0x4b12ed
    jmp .L0x4b1307
.L0x4b12ed:
    inc ebp
    msvc_or ax, ax
    jns .L0x4b12f6
    neg ax
.L0x4b12f6:
    cmp ax, 0x190
    jae .L0x4b12fc
.L0x4b12fc:
    sar ax, 0x8
    call _sub_4CBB01
    jmp .L0x4b1333
.L0x4b1307:
    jne .L0x4b1315
    je .L0x4b1315
    jae .L0x4b1312
    call _sub_4CBB01
.L0x4b1312:
    inc ebp
    jmp .L0x4b1333
.L0x4b1315:
    je .L0x4b1329
    je .L0x4b1329
    push ebx
    push edi
    je .L0x4b131f
    jne .L0x4b1327
.L0x4b131f:
    jne .L0x4b1323
    push edx
    pop edx
.L0x4b1323:
    pop edi
    pop ebx
    jmp .L0x4b132d
.L0x4b1327:
    pop edi
    pop ebx
.L0x4b1329:
    jae .L0x4b132d
    jmp .L0x4b1333
.L0x4b132d:
    call _sub_4CBB01
    inc ebp
.L0x4b1333:
    je .L0x4b1337
    jmp .L0x4b12d9
.L0x4b1337:
    msvc_or ebp, ebp
    je .L0x4b1340
    pop ebp
    pop esi
    pop eax
    stc
    ret
.L0x4b1340:
    pop ebp
    pop esi
    pop eax
    msvc_and eax, eax
    ret

    .global _sub_4B15FF
_sub_4B15FF:
    cmp byte ptr [esi + 0x42], 1                         # 004B15FF
    je _sub_47C7FA                                       # 004B1603
    add eax, dword ptr [esi + 0x28]                      # 004B1609
    mov dword ptr [esi + 0x28], eax                      # 004B160C
    cmp eax, 0x368a                                      # 004B160F
    jl .L4B182C                                          # 004B1614
    mov eax, dword ptr [esi + 0xe]                       # 004B161A
    mov cx, word ptr [esi + 0x12]                        # 004B161D
    mov dword ptr [__113616A], eax                       # 004B1621
    mov word ptr [__113616E], cx                         # 004B1626
    call _sub_4CBB01                                     # 004B162D
.L4B1632:
    movzx edi, word ptr [esi + 0x2c]                     # 004B1632
    mov ax, word ptr [esi + 0x2e]                        # 004B1636
    inc ax                                               # 004B163A
    mov edi, dword ptr [edi*4 + __4D9724]                # 004B163C
    cmp ax, word ptr [edi - 2]                           # 004B1643
    jb .L4B1761                                          # 004B1647
    movzx ebx, word ptr [esi + 0x36]                     # 004B164D
    msvc_mov eax, ebx                                    # 004B1651
    and ebx, 0xffffffc0                                  # 004B1653
    inc eax                                              # 004B1656
    and eax, 0x3f                                        # 004B1657
    msvc_or ebx, eax                                     # 004B165A
    movzx edi, word ptr [ebx*2 + __96885C]               # 004B165C
    cmp di, -2                                           # 004B1664
    je .L4B183F                                          # 004B1668
    test dword ptr [__1136114], 0x8000                   # 004B166E
    je .L4B16A0                                          # 004B1678
    movzx eax, word ptr [esi + 0x26]                     # 004B167A
    shl eax, 7                                           # 004B167E
    add_offset eax, _things                              # 004B1681
    movzx eax, word ptr [eax + 0x3a]                     # 004B1686
    shl eax, 7                                           # 004B168A
    add_offset eax, _things                              # 004B168D
    mov ax, word ptr [eax + 0x36]                        # 004B1692
    cmp ax, word ptr [esi + 0x36]                        # 004B1696
    je .L4B182F                                          # 004B169A
.L4B16A0:
    and edi, 0x1ff                                       # 004B16A0
    push ebx                                             # 004B16A6
    push edi                                             # 004B16A7
    movzx ebp, word ptr [esi + 0x26]                     # 004B16A8
    shl ebp, 7                                           # 004B16AC
    add_offset ebp, _things                              # 004B16AF
    mov cx, word ptr [esi + 0x32]                        # 004B16B5
    mov bl, byte ptr [ebp + 0x53]                        # 004B16B9
    movzx dx, byte ptr [esi + 0x34]                      # 004B16BC
    mov byte ptr [__113601A], bl                         # 004B16C1
    mov byte ptr [__113601B], 0                          # 004B16C7
    mov ax, word ptr [esi + 0x30]                        # 004B16CE
    mov bl, byte ptr [esi + 0x21]                        # 004B16D2
    shl dx, 2                                            # 004B16D5
    mov bh, byte ptr [esi + 0x35]                        # 004B16D9
    movzx ebp, word ptr [esi + 0x2c]                     # 004B16DC
    mov_offset edi, __11360A0                            # 004B16E0
    call _sub_4A2604                                     # 004B16E5
    test byte ptr [__113607D], 1                         # 004B16EA
    je .L4B16FA                                          # 004B16F1
    or dword ptr [__1136114], 0x10                       # 004B16F3
.L4B16FA:
    pop edi                                              # 004B16FA
    pop ebx                                              # 004B16FB
    msvc_xor ebp, ebp                                    # 004B16FC
.L4B16FE:
    cmp ebp, dword ptr [__113609C]                       # 004B16FE
    jae .L4B1838                                         # 004B1704
    mov ax, word ptr [ebp*2 + __11360A0]                 # 004B170A
    and ax, 0x1ff                                        # 004B1712
    msvc_cmp ax, di                                      # 004B1716
    je .L4B171E                                          # 004B1719
    inc ebp                                              # 004B171B
    jmp .L4B16FE                                         # 004B171C
.L4B171E:
    mov word ptr [esi + 0x36], bx                        # 004B171E
    xchg word ptr [esi + 0x2c], di                       # 004B1722
    mov ax, word ptr [esi + 0x30]                        # 004B1726
    mov cx, word ptr [esi + 0x32]                        # 004B172A
    movzx dx, byte ptr [esi + 0x34]                      # 004B172E
    shl dx, 2                                            # 004B1733
    add ax, word ptr [edi*8 + __4F7B5E]                  # 004B1737
    add cx, word ptr [edi*8 + __4F7B60]                  # 004B173F
    add dx, word ptr [edi*8 + __4F7B62]                  # 004B1747
    shr dx, 2                                            # 004B174F
    mov word ptr [esi + 0x30], ax                        # 004B1753
    mov word ptr [esi + 0x32], cx                        # 004B1757
    mov byte ptr [esi + 0x34], dl                        # 004B175B
    msvc_xor ax, ax                                      # 004B175E
.L4B1761:
    mov word ptr [esi + 0x2e], ax                        # 004B1761
    movzx ebx, word ptr [esi + 0x2c]                     # 004B1765
    movzx edi, word ptr [esi + 0x2e]                     # 004B1769
    imul edi, edi, 8                                     # 004B176D
    add edi, dword ptr [ebx*4 + __4D9724]                # 004B1770
    mov ax, word ptr [edi]                               # 004B1777
    mov cx, word ptr [edi + 2]                           # 004B177A
    mov dx, word ptr [edi + 4]                           # 004B177E
    add ax, word ptr [esi + 0x30]                        # 004B1782
    add cx, word ptr [esi + 0x32]                        # 004B1786
    movzx bx, byte ptr [esi + 0x34]                      # 004B178A
    shl bx, 2                                            # 004B178F
    msvc_add dx, bx                                      # 004B1793
    msvc_xor ebx, ebx                                    # 004B1796
    cmp ax, word ptr [__113616A]                         # 004B1798
    je .L4B17A4                                          # 004B179F
    or ebx, 1                                            # 004B17A1
.L4B17A4:
    cmp cx, word ptr [__113616C]                         # 004B17A4
    je .L4B17B0                                          # 004B17AB
    or ebx, 2                                            # 004B17AD
.L4B17B0:
    cmp dx, word ptr [__113616E]                         # 004B17B0
    je .L4B17BC                                          # 004B17B7
    or ebx, 4                                            # 004B17B9
.L4B17BC:
    mov ebx, dword ptr [ebx*4 + __500120]                # 004B17BC
    sub dword ptr [esi + 0x28], ebx                      # 004B17C3
    mov word ptr [__113616A], ax                         # 004B17C6
    mov word ptr [__113616C], cx                         # 004B17CC
    mov word ptr [__113616E], dx                         # 004B17D3
    mov bl, byte ptr [edi + 6]                           # 004B17DA
    mov byte ptr [esi + 0x1e], bl                        # 004B17DD
    mov bl, byte ptr [edi + 7]                           # 004B17E0
    mov byte ptr [esi + 0x1f], bl                        # 004B17E3
    cmp byte ptr [esi + 1], 3                            # 004B17E6
    jne .L4B1801                                         # 004B17EA
    call _sub_4B1876                                     # 004B17EC
    jae .L4B1801                                         # 004B17F1
    or dword ptr [__1136114], 4                          # 004B17F3
    mov word ptr [__113610E], bp                         # 004B17FA
.L4B1801:
    cmp dword ptr [esi + 0x28], 0x368a                   # 004B1801
    jge .L4B1632                                         # 004B1808
    mov ax, word ptr [__113616A]                         # 004B180E
    mov cx, word ptr [__113616C]                         # 004B1814
    mov dx, word ptr [__113616E]                         # 004B181B
    call _sub_46FC83                                     # 004B1822
    call _sub_4CBB01                                     # 004B1827
.L4B182C:
    msvc_xor eax, eax                                    # 004B182C
    ret                                                  # 004B182E
.L4B182F:
    or dword ptr [__1136114], 8                          # 004B182F
    jmp .L4B183F                                         # 004B1836
.L4B1838:
    or dword ptr [__1136114], 2                          # 004B1838
.L4B183F:
    mov eax, dword ptr [esi + 0x28]                      # 004B183F
    sub eax, 0x3689                                      # 004B1842
    mov dword ptr [esi + 0x28], 0x3689                   # 004B1847
    push eax                                             # 004B184E
    mov ax, word ptr [__113616A]                         # 004B184F
    mov cx, word ptr [__113616C]                         # 004B1855
    mov dx, word ptr [__113616E]                         # 004B185C
    call _sub_46FC83                                     # 004B1863
    call _sub_4CBB01                                     # 004B1868
    pop eax                                              # 004B186D
    or dword ptr [__1136114], 1                          # 004B186E
    ret                                                  # 004B1875

    .global _sub_4B1876
_sub_4B1876:
    push eax                                             # 004B1876
    push ecx                                             # 004B1877
    push edx                                             # 004B1878
    push edi                                             # 004B1879
    push ebx                                             # 004B187A
    cmp byte ptr [esi + 0x42], 1                         # 004B187B
    je .L4B1B93                                          # 004B187F
    cmp byte ptr [esi + 0x42], 2                         # 004B1885
    je .L4B1B93                                          # 004B1889
    cmp byte ptr [esi + 0x42], 3                         # 004B188F
    je .L4B1B93                                          # 004B1893
    and eax, 0x3fe0                                      # 004B1899
    shr cx, 5                                            # 004B189E
    and cx, 0x1ff                                        # 004B18A2
    shl eax, 4                                           # 004B18A7
    msvc_or ax, cx                                       # 004B18AA
    mov_offset ebp, __500244                             # 004B18AD
.L4B18B2:
    and eax, 0x3ffff                                     # 004B18B2
    mov cx, word ptr [eax*2 + __1025A8C]                 # 004B18B7
    cmp cx, -1                                           # 004B18BF
    je .L4B1B81                                          # 004B18C3
.L4B18C9:
    movzx edi, cx                                        # 004B18C9
    shl edi, 7                                           # 004B18CC
    add_offset edi, _things                              # 004B18CF
    msvc_cmp edi, esi                                    # 004B18D5
    je .L4B1B73                                          # 004B18D7
    cmp byte ptr [edi], 0                                # 004B18DD
    jne .L4B1B73                                         # 004B18E0
    cmp byte ptr [edi + 0x42], 1                         # 004B18E6
    je .L4B1B73                                          # 004B18EA
    cmp byte ptr [edi + 0x42], 2                         # 004B18F0
    je .L4B1B73                                          # 004B18F4
    cmp byte ptr [edi + 0x42], 3                         # 004B18FA
    je .L4B1B73                                          # 004B18FE
    mov bx, word ptr [edi + 0x12]                        # 004B1904
    msvc_sub bx, dx                                      # 004B1908
    jns .L4B1910                                         # 004B190B
    neg bx                                               # 004B190D
.L4B1910:
    cmp bx, 0x10                                         # 004B1910
    ja .L4B1B73                                          # 004B1914
    mov bx, word ptr [esp + 0x10]                        # 004B191A
    mov cx, word ptr [esp + 0xc]                         # 004B191F
    sub bx, word ptr [edi + 0xe]                         # 004B1924
    jo .L4B1B73                                          # 004B1928
    jns .L4B1933                                         # 004B192E
    neg bx                                               # 004B1930
.L4B1933:
    sub cx, word ptr [edi + 0x10]                        # 004B1933
    jo .L4B1B73                                          # 004B1937
    jns .L4B1942                                         # 004B193D
    neg cx                                               # 004B193F
.L4B1942:
    msvc_add bx, cx                                      # 004B1942
    jb .L4B1B73                                          # 004B1945
    cmp bx, 0xc                                          # 004B194B
    jae .L4B1B73                                         # 004B194F
    cmp byte ptr [edi + 1], 0                            # 004B1955
    je .L4B1B73                                          # 004B1959
    cmp byte ptr [edi + 1], 1                            # 004B195F
    je .L4B1B73                                          # 004B1963
    cmp byte ptr [edi + 1], 2                            # 004B1969
    je .L4B1B73                                          # 004B196D
    cmp byte ptr [edi + 1], 6                            # 004B1973
    je .L4B1B73                                          # 004B1977
    mov bx, word ptr [edi + 0x3a]                        # 004B1989
    cmp bx, -1                                           # 004B198D
    je .L4B1A89                                          # 004B1991
    movzx ebx, bx                                        # 004B1997
    shl ebx, 7                                           # 004B199A
    add_offset ebx, _things                              # 004B199D
    msvc_cmp ebx, esi                                    # 004B19A3
    je .L4B1B73                                          # 004B19A5
    mov bx, word ptr [ebx + 0x3a]                        # 004B19AB
    cmp bx, -1                                           # 004B19AF
    je .L4B1A89                                          # 004B19B3
    movzx ebx, bx                                        # 004B19B9
    shl ebx, 7                                           # 004B19BC
    add_offset ebx, _things                              # 004B19BF
    msvc_cmp ebx, esi                                    # 004B19C5
    je .L4B1B73                                          # 004B19C7
    mov bx, word ptr [ebx + 0x3a]                        # 004B19CD
    cmp bx, -1                                           # 004B19D1
    je .L4B1A89                                          # 004B19D5
    movzx ebx, bx                                        # 004B19DB
    shl ebx, 7                                           # 004B19DE
    add_offset ebx, _things                              # 004B19E1
    msvc_cmp ebx, esi                                    # 004B19E7
    je .L4B1B73                                          # 004B19E9
    mov bx, word ptr [ebx + 0x3a]                        # 004B19EF
    cmp bx, -1                                           # 004B19F3
    je .L4B1A89                                          # 004B19F7
    movzx ebx, bx                                        # 004B19FD
    shl ebx, 7                                           # 004B1A00
    add_offset ebx, _things                              # 004B1A03
    msvc_cmp ebx, esi                                    # 004B1A09
    je .L4B1B73                                          # 004B1A0B
    mov bx, word ptr [ebx + 0x3a]                        # 004B1A11
    cmp bx, -1                                           # 004B1A15
    je .L4B1A89                                          # 004B1A19
    movzx ebx, bx                                        # 004B1A1B
    shl ebx, 7                                           # 004B1A1E
    add_offset ebx, _things                              # 004B1A21
    msvc_cmp ebx, esi                                    # 004B1A27
    je .L4B1B73                                          # 004B1A29
    mov bx, word ptr [ebx + 0x3a]                        # 004B1A2F
    cmp bx, -1                                           # 004B1A33
    je .L4B1A89                                          # 004B1A37
    movzx ebx, bx                                        # 004B1A39
    shl ebx, 7                                           # 004B1A3C
    add_offset ebx, _things                              # 004B1A3F
    msvc_cmp ebx, esi                                    # 004B1A45
    je .L4B1B73                                          # 004B1A47
    mov bx, word ptr [ebx + 0x3a]                        # 004B1A4D
    cmp bx, -1                                           # 004B1A51
    je .L4B1A89                                          # 004B1A55
    movzx ebx, bx                                        # 004B1A57
    shl ebx, 7                                           # 004B1A5A
    add_offset ebx, _things                              # 004B1A5D
    msvc_cmp ebx, esi                                    # 004B1A63
    je .L4B1B73                                          # 004B1A65
    mov bx, word ptr [ebx + 0x3a]                        # 004B1A6B
    cmp bx, -1                                           # 004B1A6F
    je .L4B1A89                                          # 004B1A73
    movzx ebx, bx                                        # 004B1A75
    shl ebx, 7                                           # 004B1A78
    add_offset ebx, _things                              # 004B1A7B
    msvc_cmp ebx, esi                                    # 004B1A81
    je .L4B1B73                                          # 004B1A83
.L4B1A89:
    mov bx, word ptr [esi + 0x3a]                        # 004B1A89
    cmp bx, -1                                           # 004B1A8D
    je .L4B1B71                                          # 004B1A91
    movzx ebx, bx                                        # 004B1A97
    shl ebx, 7                                           # 004B1A9A
    add_offset ebx, _things                              # 004B1A9D
    msvc_cmp ebx, edi                                    # 004B1AA3
    je .L4B1B73                                          # 004B1AA5
    mov bx, word ptr [ebx + 0x3a]                        # 004B1AAB
    cmp bx, -1                                           # 004B1AAF
    je .L4B1B71                                          # 004B1AB3
    movzx ebx, bx                                        # 004B1AB9
    shl ebx, 7                                           # 004B1ABC
    add_offset ebx, _things                              # 004B1ABF
    msvc_cmp ebx, edi                                    # 004B1AC5
    je .L4B1B73                                          # 004B1AC7
    mov bx, word ptr [ebx + 0x3a]                        # 004B1ACD
    cmp bx, -1                                           # 004B1AD1
    je .L4B1B71                                          # 004B1AD5
    movzx ebx, bx                                        # 004B1ADB
    shl ebx, 7                                           # 004B1ADE
    add_offset ebx, _things                              # 004B1AE1
    msvc_cmp ebx, edi                                    # 004B1AE7
    je .L4B1B73                                          # 004B1AE9
    mov bx, word ptr [ebx + 0x3a]                        # 004B1AEF
    cmp bx, -1                                           # 004B1AF3
    je .L4B1B71                                          # 004B1AF7
    movzx ebx, bx                                        # 004B1AF9
    shl ebx, 7                                           # 004B1AFC
    add_offset ebx, _things                              # 004B1AFF
    msvc_cmp ebx, edi                                    # 004B1B05
    je .L4B1B73                                          # 004B1B07
    mov bx, word ptr [ebx + 0x3a]                        # 004B1B09
    cmp bx, -1                                           # 004B1B0D
    je .L4B1B71                                          # 004B1B11
    movzx ebx, bx                                        # 004B1B13
    shl ebx, 7                                           # 004B1B16
    add_offset ebx, _things                              # 004B1B19
    msvc_cmp ebx, edi                                    # 004B1B1F
    je .L4B1B73                                          # 004B1B21
    mov bx, word ptr [ebx + 0x3a]                        # 004B1B23
    cmp bx, -1                                           # 004B1B27
    je .L4B1B71                                          # 004B1B2B
    movzx ebx, bx                                        # 004B1B2D
    shl ebx, 7                                           # 004B1B30
    add_offset ebx, _things                              # 004B1B33
    msvc_cmp ebx, edi                                    # 004B1B39
    je .L4B1B73                                          # 004B1B3B
    mov bx, word ptr [ebx + 0x3a]                        # 004B1B3D
    cmp bx, -1                                           # 004B1B41
    je .L4B1B71                                          # 004B1B45
    movzx ebx, bx                                        # 004B1B47
    shl ebx, 7                                           # 004B1B4A
    add_offset ebx, _things                              # 004B1B4D
    msvc_cmp ebx, edi                                    # 004B1B53
    je .L4B1B73                                          # 004B1B55
    mov bx, word ptr [ebx + 0x3a]                        # 004B1B57
    cmp bx, -1                                           # 004B1B5B
    je .L4B1B71                                          # 004B1B5F
    movzx ebx, bx                                        # 004B1B61
    shl ebx, 7                                           # 004B1B64
    add_offset ebx, _things                              # 004B1B67
    msvc_cmp ebx, edi                                    # 004B1B6D
    je .L4B1B73                                          # 004B1B6F
.L4B1B71:
    jmp .L4B1B9B                                         # 004B1B71
.L4B1B73:
    mov cx, word ptr [edi + 2]                           # 004B1B73
    cmp cx, -1                                           # 004B1B77
    jne .L4B18C9                                         # 004B1B7B
.L4B1B81:
    add eax, dword ptr [ebp]                             # 004B1B81
    add ebp, 4                                           # 004B1B84
    cmp_offset ebp, __500264                             # 004B1B87
    jbe .L4B18B2                                         # 004B1B8D
.L4B1B93:
    pop ebx                                              # 004B1B93
    pop edi                                              # 004B1B94
    pop edx                                              # 004B1B95
    pop ecx                                              # 004B1B96
    pop eax                                              # 004B1B97
    msvc_and eax, eax                                    # 004B1B98
    ret                                                  # 004B1B9A
.L4B1B9B:
    mov bp, word ptr [edi + 0xa]                         # 004B1B9B
    pop ebx                                              # 004B1B9F
    pop edi                                              # 004B1BA0
    pop edx                                              # 004B1BA1
    pop ecx                                              # 004B1BA2
    pop eax                                              # 004B1BA3
    stc                                                  # 004B1BA4
    ret                                                  # 004B1BA5

    .global _sub_4B1BA6
_sub_4B1BA6:
    cmp byte ptr [esi + 0x42], 1                         # 004B1BA6
    je .L4B1BFA                                          # 004B1BAA
    call _sub_4CBB01                                     # 004B1BAC
    movzx ebx, word ptr [esi + 0x2c]                     # 004B1BB1
    movzx edi, word ptr [esi + 0x2e]                     # 004B1BB5
    imul edi, edi, 8                                     # 004B1BB9
    add edi, dword ptr [ebx*4 + __4D9724]                # 004B1BBC
    mov ax, word ptr [edi]                               # 004B1BC3
    mov cx, word ptr [edi + 2]                           # 004B1BC6
    mov dx, word ptr [edi + 4]                           # 004B1BCA
    add ax, word ptr [esi + 0x30]                        # 004B1BCE
    add cx, word ptr [esi + 0x32]                        # 004B1BD2
    movzx bx, byte ptr [esi + 0x34]                      # 004B1BD6
    shl bx, 2                                            # 004B1BDB
    msvc_add dx, bx                                      # 004B1BDF
    mov bl, byte ptr [edi + 6]                           # 004B1BE2
    mov byte ptr [esi + 0x1e], bl                        # 004B1BE5
    movzx ebx, byte ptr [edi + 7]                        # 004B1BE8
    mov byte ptr [esi + 0x1f], bl                        # 004B1BEC
    call _sub_46FC83                                     # 004B1BEF
    call _sub_4CBB01                                     # 004B1BF4
    ret                                                  # 004B1BF9
.L4B1BFA:
    call _sub_4CBB01                                     # 004B1BFA
    movzx ebx, word ptr [esi + 0x2c]                     # 004B1BFF
    movzx edi, word ptr [esi + 0x2e]                     # 004B1C03
    imul edi, edi, 8                                     # 004B1C07
    add edi, dword ptr [ebx*4 + __5253B0]                # 004B1C0A
    mov ax, word ptr [edi]                               # 004B1C11
    mov cx, word ptr [edi + 2]                           # 004B1C14
    mov dx, word ptr [edi + 4]                           # 004B1C18
    add ax, word ptr [esi + 0x30]                        # 004B1C1C
    add cx, word ptr [esi + 0x32]                        # 004B1C20
    movzx bx, byte ptr [esi + 0x34]                      # 004B1C24
    shl bx, 2                                            # 004B1C29
    msvc_add dx, bx                                      # 004B1C2D
    mov bl, byte ptr [edi + 6]                           # 004B1C30
    mov byte ptr [esi + 0x1e], bl                        # 004B1C33
    movzx ebx, byte ptr [edi + 7]                        # 004B1C36
    mov byte ptr [esi + 0x1f], bl                        # 004B1C3A
    call _sub_46FC83                                     # 004B1C3D
    call _sub_4CBB01                                     # 004B1C42
    ret                                                  # 004B1C47

    .global _sub_4B1C48
_sub_4B1C48:
    pushal                                               # 004B1C48
    movzx esi, word ptr [esi + 0x3a]                     # 004B1C49
    shl esi, 7                                           # 004B1C4D
    add_offset esi, _things                              # 004B1C50
    movzx esi, word ptr [esi + 0x3a]                     # 004B1C56
    shl esi, 7                                           # 004B1C5A
    add_offset esi, _things                              # 004B1C5D
    mov ecx, dword ptr [esi + 0x28]                      # 004B1C63
    movzx esi, word ptr [esi + 0x3a]                     # 004B1C66
    shl esi, 7                                           # 004B1C6A
    add_offset esi, _things                              # 004B1C6D
.L4B1C73:
    cmp byte ptr [esi + 1], 6                            # 004B1C73
    je .L4B1D91                                          # 004B1C77
    movzx ebp, word ptr [esi + 0x40]                     # 004B1C7D
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B1C81
    movzx ebx, word ptr [esi + 0x3a]                     # 004B1C88
    shl ebx, 7                                           # 004B1C8C
    add_offset ebx, _things                              # 004B1C8F
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B1C95
    shl ebx, 7                                           # 004B1C99
    add_offset ebx, _things                              # 004B1C9C
    test byte ptr [ebx + 0x38], 2                        # 004B1CA2
    jne .L4B1D1B                                         # 004B1CA6
    movzx edx, byte ptr [ebp + 4]                        # 004B1CA8
    msvc_xor ebx, ebx                                    # 004B1CAC
.L4B1CAE:
    movzx eax, byte ptr [ebx + ebp + 0x24]               # 004B1CAE
    imul eax, eax, 0xfffff77d                            # 004B1CB3
    msvc_add eax, ecx                                    # 004B1CB9
    mov dword ptr [esi + 0x28], eax                      # 004B1CBB
    movzx esi, word ptr [esi + 0x3a]                     # 004B1CBE
    shl esi, 7                                           # 004B1CC2
    add_offset esi, _things                              # 004B1CC5
    mov al, byte ptr [ebx + ebp + 0x28]                  # 004B1CCB
    cmp al, 0xff                                         # 004B1CCF
    je .L4B1CE6                                          # 004B1CD1
    and eax, 0x7f                                        # 004B1CD3
    imul eax, eax, 0x1e                                  # 004B1CD6
    movzx eax, byte ptr [eax + ebp + 0x42]               # 004B1CD9
    imul eax, eax, 0xffffeefa                            # 004B1CDE
    msvc_add ecx, eax                                    # 004B1CE4
.L4B1CE6:
    movzx eax, byte ptr [ebx + ebp + 0x25]               # 004B1CE6
    imul eax, eax, 0x883                                 # 004B1CEB
    msvc_add eax, ecx                                    # 004B1CF1
    mov dword ptr [esi + 0x28], eax                      # 004B1CF3
    add ebx, 6                                           # 004B1CF6
    movzx esi, word ptr [esi + 0x3a]                     # 004B1CF9
    shl esi, 7                                           # 004B1CFD
    add_offset esi, _things                              # 004B1D00
    movzx esi, word ptr [esi + 0x3a]                     # 004B1D06
    shl esi, 7                                           # 004B1D0A
    add_offset esi, _things                              # 004B1D0D
    dec edx                                              # 004B1D13
    jne .L4B1CAE                                         # 004B1D14
    msvc_jmp .L4B1C73                                    # 004B1D16
.L4B1D1B:
    movzx edx, byte ptr [ebp + 4]                        # 004B1D1B
    msvc_mov ebx, edx                                    # 004B1D1F
    imul ebx, ebx, 6                                     # 004B1D21
.L4B1D24:
    sub ebx, 6                                           # 004B1D24
    movzx eax, byte ptr [ebx + ebp + 0x25]               # 004B1D27
    imul eax, eax, 0xfffff77d                            # 004B1D2C
    msvc_add eax, ecx                                    # 004B1D32
    mov dword ptr [esi + 0x28], eax                      # 004B1D34
    movzx esi, word ptr [esi + 0x3a]                     # 004B1D37
    shl esi, 7                                           # 004B1D3B
    add_offset esi, _things                              # 004B1D3E
    mov al, byte ptr [ebx + ebp + 0x28]                  # 004B1D44
    cmp al, 0xff                                         # 004B1D48
    je .L4B1D5F                                          # 004B1D4A
    and eax, 0x7f                                        # 004B1D4C
    imul eax, eax, 0x1e                                  # 004B1D4F
    movzx eax, byte ptr [eax + ebp + 0x42]               # 004B1D52
    imul eax, eax, 0xffffeefa                            # 004B1D57
    msvc_add ecx, eax                                    # 004B1D5D
.L4B1D5F:
    movzx eax, byte ptr [ebx + ebp + 0x24]               # 004B1D5F
    imul eax, eax, 0x883                                 # 004B1D64
    msvc_add eax, ecx                                    # 004B1D6A
    mov dword ptr [esi + 0x28], eax                      # 004B1D6C
    movzx esi, word ptr [esi + 0x3a]                     # 004B1D6F
    shl esi, 7                                           # 004B1D73
    add_offset esi, _things                              # 004B1D76
    movzx esi, word ptr [esi + 0x3a]                     # 004B1D7C
    shl esi, 7                                           # 004B1D80
    add_offset esi, _things                              # 004B1D83
    dec edx                                              # 004B1D89
    jne .L4B1D24                                         # 004B1D8A
    msvc_jmp .L4B1C73                                    # 004B1D8C
.L4B1D91:
    mov dword ptr [esi + 0x28], ecx                      # 004B1D91
    popal                                                # 004B1D94
    ret                                                  # 004B1D95

    .global _sub_4B1D96
_sub_4B1D96:
    pushal                                               # 004B1D96
    mov al, byte ptr [__9C68EB]                          # 004B1D97
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B1D9C
    je .L4B1DFC                                          # 004B1DA2
    cmp al, byte ptr [_scenarioChunk3+37]                # 004B1DA4
    je .L4B1DFC                                          # 004B1DAA
    msvc_xor al, al                                      # 004B1DAC
    mov_offset ebp, _companies                           # 004B1DAE
    msvc_xor cx, cx                                      # 004B1DB3
.L4B1DB6:
    cmp word ptr [ebp], 0                                # 004B1DB6
    je .L4B1DDD                                          # 004B1DBB
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B1DBD
    je .L4B1DDD                                          # 004B1DC3
    cmp al, byte ptr [_scenarioChunk3+37]                # 004B1DC5
    je .L4B1DDD                                          # 004B1DCB
    msvc_xor ebx, ebx                                    # 004B1DCD
.L4B1DCF:
    add cx, word ptr [ebp + ebx*2 + 0x8ba4]              # 004B1DCF
    inc ebx                                              # 004B1DD7
    cmp ebx, 6                                           # 004B1DD8
    jb .L4B1DCF                                          # 004B1DDB
.L4B1DDD:
    inc al                                               # 004B1DDD
    add ebp, 0x8fa8                                      # 004B1DDF
    cmp al, 0xf                                          # 004B1DE5
    jb .L4B1DB6                                          # 004B1DE7
    cmp cx, 0x1f4                                        # 004B1DE9
    jb .L4B1DFC                                          # 004B1DEE
    popal                                                # 004B1DF0
    mov word ptr [__9C68E6], 0x150                       # 004B1DF1
    stc                                                  # 004B1DFA
    ret                                                  # 004B1DFB
.L4B1DFC:
    popal                                                # 004B1DFC
    msvc_and eax, eax                                    # 004B1DFD
    ret                                                  # 004B1DFF

    .global _sub_4B1E00
_sub_4B1E00:
    call _sub_4B1D96                                     # 004B1E00
    jb .L4B1E2C                                          # 004B1E05
    push ecx                                             # 004B1E07
    push edi                                             # 004B1E08
    mov_offset edi, __96885C                             # 004B1E09
    msvc_xor eax, eax                                    # 004B1E0E
.L4B1E10:
    cmp word ptr [edi + eax*2], -1                       # 004B1E10
    je .L4B1E2E                                          # 004B1E15
    add eax, 0x40                                        # 004B1E17
    cmp eax, 0xfa00                                      # 004B1E1A
    jb .L4B1E10                                          # 004B1E1F
    mov word ptr [__9C68E6], 0x150                       # 004B1E21
    pop edi                                              # 004B1E2A
    pop ecx                                              # 004B1E2B
.L4B1E2C:
    stc                                                  # 004B1E2C
    ret                                                  # 004B1E2D
.L4B1E2E:
    mov ecx, 0x40                                        # 004B1E2E
.L4B1E33:
    mov word ptr [edi + eax*2], 0xfffe                   # 004B1E33
    add edi, 2                                           # 004B1E39
    dec ecx                                              # 004B1E3C
    jne .L4B1E33                                         # 004B1E3D
    pop edi                                              # 004B1E3F
    pop ecx                                              # 004B1E40
    msvc_and eax, eax                                    # 004B1E41
    ret                                                  # 004B1E43

    .global _sub_4B1E44
_sub_4B1E44:
    call _sub_4B1D96                                     # 004B1E44
    jb .L4B1E70                                          # 004B1E49
    push ecx                                             # 004B1E4B
    push edi                                             # 004B1E4C
    mov_offset edi, __96885C                             # 004B1E4D
    msvc_xor eax, eax                                    # 004B1E52
.L4B1E54:
    cmp word ptr [edi + eax*2], -1                       # 004B1E54
    je .L4B1E72                                          # 004B1E59
    add eax, 0x40                                        # 004B1E5B
    cmp eax, 0xfa00                                      # 004B1E5E
    jb .L4B1E54                                          # 004B1E63
    mov word ptr [__9C68E6], 0x150                       # 004B1E65
    pop edi                                              # 004B1E6E
    pop ecx                                              # 004B1E6F
.L4B1E70:
    stc                                                  # 004B1E70
    ret                                                  # 004B1E71
.L4B1E72:
    pop edi                                              # 004B1E72
    pop ecx                                              # 004B1E73
    msvc_and eax, eax                                    # 004B1E74
    ret                                                  # 004B1E76

    .global _sub_4B1E77
_sub_4B1E77:
    push ecx                                             # 004B1E77
    and eax, 0xffffffc0                                  # 004B1E78
    shl eax, 1                                           # 004B1E7B
    add_offset eax, __96885C                             # 004B1E7D
    mov ecx, 0x40                                        # 004B1E82
.L4B1E87:
    mov word ptr [eax], 0xffff                           # 004B1E87
    add eax, 2                                           # 004B1E8C
    dec ecx                                              # 004B1E8F
    jne .L4B1E87                                         # 004B1E90
    pop ecx                                              # 004B1E92
    ret                                                  # 004B1E93

    .global _sub_4B1E94
_sub_4B1E94:
    or dword ptr [esi + 0xc], 2                          # 004B1E94
    movzx ebx, word ptr [esi + 0x40]                     # 004B1E98
    shl ebx, 7                                           # 004B1E9C
    add_offset ebx, _things                              # 004B1E9F
    mov cl, byte ptr [ebx + 0x21]                        # 004B1EA5
    cmp cl, byte ptr [_scenarioChunk3+36]                # 004B1EA8
    je .L4B1EB4                                          # 004B1EAE
    and dword ptr [esi + 0xc], 0xfffffffd                # 004B1EB0
.L4B1EB4:
    ret                                                  # 004B1EB4

    .global _sub_4B1EB5
_sub_4B1EB5:
    movzx edx, word ptr [esi + 0x870]                    # 004B1EB5
    mov eax, dword ptr [edx*4 + __5002BC]                # 004B1EBC
    cmp eax, dword ptr [esi + 0x2c]                      # 004B1EC3
    je .L4B1ED0                                          # 004B1EC6
    mov dword ptr [esi + 0x2c], eax                      # 004B1EC8
    call _sub_4CA17F                                     # 004B1ECB
.L4B1ED0:
    mov edx, dword ptr [esi + 0x1c]                      # 004B1ED0
    and edx, 0xfffffe0f                                  # 004B1ED3
    movzx ecx, word ptr [esi + 0x870]                    # 004B1ED9
    add ecx, 4                                           # 004B1EE0
    bts edx, ecx                                         # 004B1EE3
    mov dword ptr [esi + 0x1c], edx                      # 004B1EE6
    movzx ebx, word ptr [esi + 0x40]                     # 004B1EE9
    shl ebx, 7                                           # 004B1EED
    add_offset ebx, _things                              # 004B1EF0
    mov byte ptr [_ui_vehicle___widgets_0+192], 9        # 004B1EF6
    mov byte ptr [_ui_vehicle___widgets_0+208], 9        # 004B1EFD
    mov byte ptr [_ui_vehicle___widgets_0+224], 9        # 004B1F04
    mov byte ptr [_ui_vehicle___widgets_0+240], 9        # 004B1F0B
    cmp byte ptr [ebx + 0x42], 0                         # 004B1F12
    je .L4B1F1F                                          # 004B1F16
    mov byte ptr [_ui_vehicle___widgets_0+224], 0        # 004B1F18
.L4B1F1F:
    cmp byte ptr [ebx + 0x42], 2                         # 004B1F1F
    jne .L4B1F2C                                         # 004B1F23
    mov byte ptr [_ui_vehicle___widgets_0+240], 0        # 004B1F25
.L4B1F2C:
    cmp byte ptr [ebx + 0x42], 3                         # 004B1F2C
    jne .L4B1F39                                         # 004B1F30
    mov byte ptr [_ui_vehicle___widgets_0+240], 0        # 004B1F32
.L4B1F39:
    mov eax, dword ptr [esi + 0x14]                      # 004B1F39
    and eax, 0xfffe0fff                                  # 004B1F3C
    movzx ebp, word ptr [ebx + 0x3a]                     # 004B1F41
    shl ebp, 7                                           # 004B1F45
    add_offset ebp, _things                              # 004B1F48
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B1F4E
    shl ebp, 7                                           # 004B1F52
    add_offset ebp, _things                              # 004B1F55
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B1F5B
    shl ebp, 7                                           # 004B1F5F
    add_offset ebp, _things                              # 004B1F62
    cmp byte ptr [ebp + 1], 6                            # 004B1F68
    jne .L4B1F73                                         # 004B1F6C
    or eax, 0x2000                                       # 004B1F6E
.L4B1F73:
    push ebx                                             # 004B1F73
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B1F74
    shl ebx, 7                                           # 004B1F78
    add_offset ebx, _things                              # 004B1F7B
    cmp dword ptr [ebx + 0x3c], 0x3689                   # 004B1F81
    jle .L4B1F8F                                         # 004B1F88
    or eax, 0xa000                                       # 004B1F8A
.L4B1F8F:
    pop ebx                                              # 004B1F8F
    cmp byte ptr [ebx + 0x42], 3                         # 004B1F90
    je .L4B1F9C                                          # 004B1F94
    cmp byte ptr [ebx + 0x42], 2                         # 004B1F96
    jne .L4B1FB4                                         # 004B1F9A
.L4B1F9C:
    cmp byte ptr [ebx + 0x5d], 1                         # 004B1F9C
    je .L4B1FB4                                          # 004B1FA0
    cmp byte ptr [ebx + 0x5d], 6                         # 004B1FA2
    je .L4B1FB4                                          # 004B1FA6
    cmp word ptr [ebx + 0x30], -1                        # 004B1FA8
    je .L4B1FB4                                          # 004B1FAD
    or eax, 0x2000                                       # 004B1FAF
.L4B1FB4:
    cmp word ptr [ebx + 0x30], -1                        # 004B1FB4
    jne .L4B1FE5                                         # 004B1FB9
    or eax, 0x1d000                                      # 004B1FBB
    bt dword ptr [__523368], 3                           # 004B1FC0
    jae .L4B1FE5                                         # 004B1FC8
    cmp byte ptr [__523392], 0x17                        # 004B1FCA
    jne .L4B1FE5                                         # 004B1FD1
    mov bp, word ptr [esi + 0x40]                        # 004B1FD3
    cmp bp, word ptr [__523390]                          # 004B1FD7
    jne .L4B1FE5                                         # 004B1FDE
    and eax, 0xffff7fff                                  # 004B1FE0
.L4B1FE5:
    cmp byte ptr [ebx + 0x5d], 3                         # 004B1FE5
    je .L4B1FF0                                          # 004B1FE9
    or eax, 0x4000                                       # 004B1FEB
.L4B1FF0:
    mov dword ptr [esi + 0x14], eax                      # 004B1FF0
    movzx ebp, byte ptr [ebx + 0x21]                     # 004B1FF3
    imul ebp, ebp, 0x8fa8                                # 004B1FF7
    mov ax, word ptr [ebp + _companies]                  # 004B1FFD
    mov word ptr [__112C828], ax                         # 004B2004
    mov ax, word ptr [ebx + 0x44]                        # 004B200A
    mov cx, word ptr [ebx + 0x22]                        # 004B200E
    mov word ptr [__112C82E], ax                         # 004B2012
    mov word ptr [__112C82C], cx                         # 004B2018
    mov word ptr [__112C826], 0x1db                      # 004B201F
    mov al, byte ptr [ebx + 0x21]                        # 004B2028
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B202B
    jne .L4B203C                                         # 004B2031
    mov word ptr [__112C826], 0x1dc                      # 004B2033
.L4B203C:
    mov ecx, 0x943                                       # 004B203C
    bt word ptr [ebx + 0xc], 6                           # 004B2041
    jb .L4B205B                                          # 004B2047
    mov ecx, 0x941                                       # 004B2049
    bt word ptr [ebx + 0xc], 1                           # 004B204E
    jb .L4B205B                                          # 004B2054
    mov ecx, 0x942                                       # 004B2056
.L4B205B:
    mov dword ptr [_ui_vehicle___widgets_0+202], ecx     # 004B205B
    cmp byte ptr [ebx + 0x42], 2                         # 004B2061
    je .L4B2088                                          # 004B2065
    cmp byte ptr [ebx + 0x42], 3                         # 004B2067
    je .L4B20A5                                          # 004B206B
    movzx ecx, byte ptr [ebx + 0x35]                     # 004B206D
    cmp byte ptr [ebx + 0x42], 1                         # 004B2071
    je .L4B20CB                                          # 004B2075
    mov ecx, dword ptr [ecx*4 + _trackObjects]           # 004B2077
    mov eax, dword ptr [ecx + 0x1e]                      # 004B207E
    add eax, 0x20000011                                  # 004B2081
    jmp .L4B20E6                                         # 004B2086
.L4B2088:
    mov eax, 0x20000945                                  # 004B2088
    mov bp, 0x101                                        # 004B208D
    cmp word ptr [ebx + 0x30], -1                        # 004B2091
    je .L4B20A3                                          # 004B2096
    test byte ptr [ebx + 0x38], 0x10                     # 004B2098
    jne .L4B20A3                                         # 004B209C
    dec eax                                              # 004B209E
    mov bp, 0x100                                        # 004B209F
.L4B20A3:
    jmp .L4B20FC                                         # 004B20A3
.L4B20A5:
    mov ecx, dword ptr [_waterObjects]                   # 004B20A5
    mov eax, dword ptr [ecx + 6]                         # 004B20AB
    add eax, 0x2000003b                                  # 004B20AE
    mov bp, 0x103                                        # 004B20B3
    cmp word ptr [ebx + 0x30], -1                        # 004B20B7
    je .L4B20C9                                          # 004B20BC
    test byte ptr [ebx + 0x38], 0x10                     # 004B20BE
    jne .L4B20C9                                         # 004B20C2
    dec eax                                              # 004B20C4
    mov bp, 0x102                                        # 004B20C5
.L4B20C9:
    jmp .L4B20FC                                         # 004B20C9
.L4B20CB:
    cmp cl, 0xff                                         # 004B20CB
    jne .L4B20D7                                         # 004B20CE
    movzx ecx, byte ptr [_scenarioChunk3+429]            # 004B20D0
.L4B20D7:
    mov ecx, dword ptr [ecx*4 + _roadObjects]            # 004B20D7
    mov eax, dword ptr [ecx + 0xe]                       # 004B20DE
    add eax, 0x20000021                                  # 004B20E1
.L4B20E6:
    mov bp, 0xff                                         # 004B20E6
    cmp word ptr [ebx + 0x30], -1                        # 004B20EA
    je .L4B20FC                                          # 004B20EF
    test byte ptr [ebx + 0x38], 0x10                     # 004B20F1
    jne .L4B20FC                                         # 004B20F5
    dec eax                                              # 004B20F7
    mov bp, 0xfe                                         # 004B20F8
.L4B20FC:
    mov dword ptr [_ui_vehicle___widgets_0+218], eax     # 004B20FC
    mov word ptr [_ui_vehicle___widgets_0+222], bp       # 004B2101
    movzx ebx, word ptr [esi + 0x40]                     # 004B2108
    shl ebx, 7                                           # 004B210C
    add_offset ebx, _things                              # 004B210F
    mov byte ptr [_ui_vehicle___widgets_0+176], 0        # 004B2115
    mov ax, word ptr [esi + 0x34]                        # 004B211C
    mov cx, word ptr [esi + 0x36]                        # 004B2120
    dec ax                                               # 004B2124
    dec cx                                               # 004B2126
    mov word ptr [_ui_vehicle___widgets_0+4], ax         # 004B2128
    mov word ptr [_ui_vehicle___widgets_0+8], cx         # 004B212E
    mov word ptr [_ui_vehicle___widgets_0+52], ax        # 004B2135
    mov word ptr [_ui_vehicle___widgets_0+56], cx        # 004B213B
    dec ax                                               # 004B2142
    mov word ptr [_ui_vehicle___widgets_0+20], ax        # 004B2144
    sub ax, 0xd                                          # 004B214A
    mov word ptr [_ui_vehicle___widgets_0+34], ax        # 004B214E
    add ax, 0xc                                          # 004B2154
    mov word ptr [_ui_vehicle___widgets_0+36], ax        # 004B2158
    sub ax, 0x17                                         # 004B215E
    test word ptr [ebx + 0xc], 0x40                      # 004B2162
    je .L4B2180                                          # 004B2168
    mov dl, byte ptr [ebx + 0x21]                        # 004B216A
    cmp dl, byte ptr [_scenarioChunk3+36]                # 004B216D
    jne .L4B2180                                         # 004B2173
    sub ax, 0x1b                                         # 004B2175
    mov byte ptr [_ui_vehicle___widgets_0+176], 5        # 004B2179
.L4B2180:
    sub cx, 0xd                                          # 004B2180
    mov word ptr [_ui_vehicle___widgets_0+148], ax       # 004B2184
    mov word ptr [_ui_vehicle___widgets_0+152], cx       # 004B218A
    add cx, 2                                            # 004B2191
    mov word ptr [_ui_vehicle___widgets_0+166], cx       # 004B2195
    add cx, 9                                            # 004B219C
    mov word ptr [_ui_vehicle___widgets_0+168], cx       # 004B21A0
    mov ax, word ptr [esi + 0x34]                        # 004B21A7
    sub ax, 0xe                                          # 004B21AB
    mov word ptr [_ui_vehicle___widgets_0+164], ax       # 004B21AF
    mov ax, word ptr [esi + 0x34]                        # 004B21B5
    sub ax, 2                                            # 004B21B9
    mov word ptr [_ui_vehicle___widgets_0+196], ax       # 004B21BD
    mov word ptr [_ui_vehicle___widgets_0+212], ax       # 004B21C3
    mov word ptr [_ui_vehicle___widgets_0+228], ax       # 004B21C9
    mov word ptr [_ui_vehicle___widgets_0+244], ax       # 004B21CF
    sub ax, 0x17                                         # 004B21D5
    mov word ptr [_ui_vehicle___widgets_0+194], ax       # 004B21D9
    mov word ptr [_ui_vehicle___widgets_0+210], ax       # 004B21DF
    mov word ptr [_ui_vehicle___widgets_0+226], ax       # 004B21E5
    mov word ptr [_ui_vehicle___widgets_0+242], ax       # 004B21EB
    sub ax, 0x1a                                         # 004B21F1
    mov word ptr [_ui_vehicle___widgets_0+178], ax       # 004B21F5
    add ax, 0x17                                         # 004B21FB
    mov word ptr [_ui_vehicle___widgets_0+180], ax       # 004B21FF
    mov al, byte ptr [ebx + 0x21]                        # 004B2205
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B2208
    je .L4B2234                                          # 004B220E
    mov byte ptr [_ui_vehicle___widgets_0+192], 0        # 004B2210
    mov byte ptr [_ui_vehicle___widgets_0+208], 0        # 004B2217
    mov byte ptr [_ui_vehicle___widgets_0+224], 0        # 004B221E
    mov byte ptr [_ui_vehicle___widgets_0+240], 0        # 004B2225
    add word ptr [_ui_vehicle___widgets_0+148], 0x16     # 004B222C
.L4B2234:
    mov ax, word ptr [_ui_vehicle___widgets_0+148]       # 004B2234
    mov cx, word ptr [_ui_vehicle___widgets_0+152]       # 004B223A
    dec ax                                               # 004B2241
    dec cx                                               # 004B2243
    mov word ptr [_ui_vehicle___widgets_0+260], ax       # 004B2245
    mov word ptr [_ui_vehicle___widgets_0+264], cx       # 004B224B
    sub ax, 0x17                                         # 004B2252
    sub cx, 0x17                                         # 004B2256
    mov word ptr [_ui_vehicle___widgets_0+258], ax       # 004B225A
    mov word ptr [_ui_vehicle___widgets_0+262], cx       # 004B2260
    call _sub_4B5ECD                                     # 004B2267
    ret                                                  # 004B226C

    .global _sub_4B226D
_sub_4B226D:
    call _sub_4CA4DF                                     # 004B226D
    call _sub_4B5F0D                                     # 004B2272
    cmp byte ptr [_ui_vehicle___widgets_0+208], 0        # 004B2277
    je .L4B22C9                                          # 004B227E
    test dword ptr [_ui_vehicle___widgets_0+218], 0x20000000 # 004B2280
    je .L4B22C9                                          # 004B228A
    test dword ptr [esi + 0x14], 0x2000                  # 004B228C
    jne .L4B22C9                                         # 004B2293
    push esi                                             # 004B2295
    movzx ebx, byte ptr [esi + 0x884]                    # 004B2296
    movzx ebx, byte ptr [ebx + __9C645C]                 # 004B229D
    shl ebx, 0x13                                        # 004B22A4
    add ebx, dword ptr [_ui_vehicle___widgets_0+218]     # 004B22A7
    mov cx, word ptr [_ui_vehicle___widgets_0+210]       # 004B22AD
    mov dx, word ptr [_ui_vehicle___widgets_0+214]       # 004B22B4
    add cx, word ptr [esi + 0x30]                        # 004B22BB
    add dx, word ptr [esi + 0x32]                        # 004B22BF
    call _sub_448C79                                     # 004B22C3
    pop esi                                              # 004B22C8
.L4B22C9:
    push esi                                             # 004B22C9
    movzx esi, word ptr [esi + 0x40]                     # 004B22CA
    shl esi, 7                                           # 004B22CE
    add_offset esi, _things                              # 004B22D1
    call _sub_4B671C                                     # 004B22D7
    mov word ptr [__112C826], bx                         # 004B22DC
    mov dword ptr [__112C828], eax                       # 004B22E3
    mov word ptr [__112C82C], cx                         # 004B22E8
    mov dword ptr [__112C82E], edx                       # 004B22EF
    mov esi, dword ptr [esp]                             # 004B22F5
    mov cx, word ptr [esi + 0x30]                        # 004B22F8
    mov dx, word ptr [esi + 0x32]                        # 004B22FC
    add cx, word ptr [_ui_vehicle___widgets_0+162]       # 004B2300
    add dx, word ptr [_ui_vehicle___widgets_0+166]       # 004B2307
    dec cx                                               # 004B230E
    dec dx                                               # 004B2310
    mov bx, 0x1c8                                        # 004B2312
    cmp word ptr [__112C82C], -1                         # 004B2316
    jne .L4B2324                                         # 004B231E
    mov bx, 0x1c7                                        # 004B2320
.L4B2324:
    mov bp, word ptr [_ui_vehicle___widgets_0+164]       # 004B2324
    sub bp, word ptr [_ui_vehicle___widgets_0+162]       # 004B232B
    msvc_xor al, al                                      # 004B2332
    mov_offset esi, __112C826                            # 004B2334
    call _sub_494BBF                                     # 004B2339
    pop esi                                              # 004B233E
    cmp byte ptr [_ui_vehicle___widgets_0+176], 0        # 004B233F
    je .L4B2427                                          # 004B2346
    push esi                                             # 004B234C
    mov cx, word ptr [_ui_vehicle___widgets_0+178]       # 004B234D
    mov dx, word ptr [_ui_vehicle___widgets_0+182]       # 004B2354
    add cx, word ptr [esi + 0x30]                        # 004B235B
    add dx, word ptr [esi + 0x32]                        # 004B235F
    add dx, 0xa                                          # 004B2363
    movzx ebx, byte ptr [esi + 0x887]                    # 004B2367
    shl ebx, 0x13                                        # 004B236E
    or ebx, 0x20000dd9                                   # 004B2371
    call _sub_448C79                                     # 004B2377
    pop esi                                              # 004B237C
    push esi                                             # 004B237D
    mov cx, word ptr [_ui_vehicle___widgets_0+178]       # 004B237E
    mov dx, word ptr [_ui_vehicle___widgets_0+182]       # 004B2385
    add cx, word ptr [_ui_vehicle___widgets_0+180]       # 004B238C
    shr cx, 1                                            # 004B2393
    add cx, word ptr [esi + 0x30]                        # 004B2396
    add dx, word ptr [esi + 0x32]                        # 004B239A
    sub dx, -4                                           # 004B239E
    mov bx, 0x784                                        # 004B23A2
    msvc_xor al, al                                      # 004B23A6
    call _sub_494DE8                                     # 004B23A8
    pop esi                                              # 004B23AD
    push esi                                             # 004B23AE
    mov cx, word ptr [_ui_vehicle___widgets_0+178]       # 004B23AF
    mov dx, word ptr [_ui_vehicle___widgets_0+184]       # 004B23B6
    add cx, word ptr [_ui_vehicle___widgets_0+180]       # 004B23BD
    shr cx, 1                                            # 004B23C4
    add cx, word ptr [esi + 0x30]                        # 004B23C7
    add dx, word ptr [esi + 0x32]                        # 004B23CB
    sub dx, 0xa                                          # 004B23CF
    mov bx, 0x785                                        # 004B23D3
    msvc_xor al, al                                      # 004B23D7
    call _sub_494DE8                                     # 004B23D9
    pop esi                                              # 004B23DE
    movzx ebx, byte ptr [esi + 0x887]                    # 004B23DF
    shl ebx, 0x13                                        # 004B23E6
    or ebx, 0x20000dda                                   # 004B23E9
    movzx ecx, word ptr [esi + 0x40]                     # 004B23EF
    shl ecx, 7                                           # 004B23F3
    add_offset ecx, _things                              # 004B23F6
    movsx dx, byte ptr [ecx + 0x6e]                      # 004B23FC
    neg dx                                               # 004B2401
    add dx, 0x39                                         # 004B2404
    mov cx, word ptr [_ui_vehicle___widgets_0+178]       # 004B2408
    add dx, word ptr [_ui_vehicle___widgets_0+182]       # 004B240F
    inc cx                                               # 004B2416
    add cx, word ptr [esi + 0x30]                        # 004B2418
    add dx, word ptr [esi + 0x32]                        # 004B241C
    push esi                                             # 004B2420
    call _sub_448C79                                     # 004B2421
    pop esi                                              # 004B2426
.L4B2427:
    cmp dword ptr [esi + 4], 0                           # 004B2427
    je .L4B2441                                          # 004B242B
    call _sub_45A0B3                                     # 004B242D
    mov edx, 0x10                                        # 004B2432
    call _sub_4CF487                                     # 004B2437
    msvc_jmp .L4B24D0                                    # 004B243C
.L4B2441:
    bt dword ptr [__523368], 3                           # 004B2441
    jae .L4B24D0                                         # 004B2449
    cmp byte ptr [__523392], 0x17                        # 004B244F
    jne .L4B24D0                                         # 004B2456
    mov bp, word ptr [esi + 0x40]                        # 004B2458
    cmp bp, word ptr [__523390]                          # 004B245C
    jne .L4B24D0                                         # 004B2463
    push esi                                             # 004B2465
    movzx ebx, word ptr [esi + 0x40]                     # 004B2466
    shl ebx, 7                                           # 004B246A
    add_offset ebx, _things                              # 004B246D
    movzx edx, byte ptr [ebx + 0x5e]                     # 004B2473
    add dx, 0x4fc                                        # 004B2477
    mov word ptr [__112C826], dx                         # 004B247C
    mov cx, word ptr [_ui_vehicle___widgets_0+146]       # 004B2483
    mov dx, word ptr [_ui_vehicle___widgets_0+150]       # 004B248A
    add cx, word ptr [_ui_vehicle___widgets_0+148]       # 004B2491
    add dx, word ptr [_ui_vehicle___widgets_0+152]       # 004B2498
    shr cx, 1                                            # 004B249F
    shr dx, 1                                            # 004B24A2
    add cx, word ptr [esi + 0x30]                        # 004B24A5
    add dx, word ptr [esi + 0x32]                        # 004B24A9
    mov bp, word ptr [_ui_vehicle___widgets_0+148]       # 004B24AD
    sub bp, word ptr [_ui_vehicle___widgets_0+146]       # 004B24B4
    sub bp, 5                                            # 004B24BB
    mov bx, 0x14e                                        # 004B24BF
    mov_offset esi, __112C826                            # 004B24C3
    msvc_xor al, al                                      # 004B24C8
    call _sub_494ECF                                     # 004B24CA
    pop esi                                              # 004B24CF
.L4B24D0:
    ret                                                  # 004B24D0

    .global _sub_4B24D1
_sub_4B24D1:
    cmp dx, 2                                            # 004B24D1
    je _sub_4CC6EA                                       # 004B24D5
    cmp dx, 4                                            # 004B24DB
    jb .L4B24E7                                          # 004B24DF
    cmp dx, 8                                            # 004B24E1
    jbe _sub_4B2566                                      # 004B24E5
.L4B24E7:
    cmp dx, 0xd                                          # 004B24E7
    je _sub_4B28E2                                       # 004B24EB
    cmp dx, 0xf                                          # 004B24F1
    je _sub_4B288F                                       # 004B24F5
    cmp dx, 0x10                                         # 004B24FB
    je _sub_4B3097                                       # 004B24FF
    cmp dx, 0xe                                          # 004B2505
    je _sub_4B272F                                       # 004B2509
    cmp dx, 1                                            # 004B250F
    je _sub_4B2680                                       # 004B2513
    ret                                                  # 004B2519

    .global _sub_4B251A
_sub_4B251A:
    cmp dx, 0xc                                          # 004B251A
    je _sub_4B274B                                       # 004B251E
    cmp dx, 0xb                                          # 004B2524
    je _sub_4B2637                                       # 004B2528
    ret                                                  # 004B252E

    .global _sub_4B252F
_sub_4B252F:
    cmp dx, 1                                            # 004B252F
    je _sub_4B26C0                                       # 004B2533
    ret                                                  # 004B2539

    .global _sub_4B253A
_sub_4B253A:
    cmp dx, 0xc                                          # 004B253A
    je _sub_4B2813                                       # 004B253E
    ret                                                  # 004B2544

    .global _sub_4B2545
_sub_4B2545:
    cmp dx, 0xd                                          # 004B2545
    je _sub_4B29C0                                       # 004B2549
    ret                                                  # 004B254F

    .global _sub_4B2550
_sub_4B2550:
    cmp dx, 0xd                                          # 004B2550
    je _sub_4B2C74                                       # 004B2554
    ret                                                  # 004B255A

    .global _sub_4B255B
_sub_4B255B:
    cmp dx, 0xd                                          # 004B255B
    je _sub_4B3035                                       # 004B255F
    ret                                                  # 004B2565

    .global _sub_4B2566
_sub_4B2566:
    bt dword ptr [__523368], 3                           # 004B2566
    jae .L4B2590                                         # 004B256E
    mov cl, byte ptr [esi + 0x882]                       # 004B2570
    cmp cl, byte ptr [__523392]                          # 004B2576
    jne .L4B2590                                         # 004B257C
    mov cx, word ptr [esi + 0x40]                        # 004B257E
    cmp cx, word ptr [__523390]                          # 004B2582
    jne .L4B2590                                         # 004B2589
    call _sub_4CE3D6                                     # 004B258B
.L4B2590:
    push edx                                             # 004B2590
    mov cl, byte ptr [esi + 0x882]                       # 004B2591
    mov dx, word ptr [esi + 0x40]                        # 004B2597
    call _sub_4CE6C9                                     # 004B259B
    pop edx                                              # 004B25A0
    sub dx, 4                                            # 004B25A1
    mov word ptr [esi + 0x870], dx                       # 004B25A5
    mov word ptr [esi + 0x872], 0                        # 004B25AC
    and dword ptr [esi + 0x42], 0xfffeffff               # 004B25B5
    mov word ptr [esi + 0x85c], 0xffff                   # 004B25BC
    msvc_xor edi, edi                                    # 004B25C5
    xchg dword ptr [esi + 4], edi                        # 004B25C7
    msvc_or edi, edi                                     # 004B25CA
    je .L4B25D3                                          # 004B25CC
    mov word ptr [edi], 0                                # 004B25CE
.L4B25D3:
    mov eax, dword ptr [edx*4 + __5002E4]                # 004B25D3
    mov dword ptr [esi + 0xc], eax                       # 004B25DA
    mov eax, dword ptr [edx*4 + __5002F8]                # 004B25DD
    mov dword ptr [esi + 0x24], eax                      # 004B25E4
    mov eax, dword ptr [edx*4 + __5002D0]                # 004B25E7
    mov dword ptr [esi], eax                             # 004B25EE
    mov dword ptr [esi + 0x1c], 0                        # 004B25F0
    mov eax, dword ptr [edx*4 + __5002BC]                # 004B25F7
    mov dword ptr [esi + 0x2c], eax                      # 004B25FE
    call _sub_4B5D82                                     # 004B2601
    call _sub_4CA4BD                                     # 004B2606
    mov word ptr [esi + 0x840], 0xffff                   # 004B260B
    mov word ptr [esi + 0x842], 0xffff                   # 004B2614
    mov ebp, dword ptr [esi]                             # 004B261D
    call dword ptr [ebp + 8]                             # 004B261F
    mov ebp, dword ptr [esi]                             # 004B2622
    call dword ptr [ebp + 0x68]                          # 004B2624
    call _sub_4CA17F                                     # 004B2627
    call _sub_4CA4BD                                     # 004B262C
    call _sub_4CD320                                     # 004B2631
    ret                                                  # 004B2636

    .global _sub_4B2637
_sub_4B2637:
    mov word ptr [__523376], 0x1f                        # 004B2637
    mov dx, word ptr [__5233A6]                          # 004B2640
    sub dx, word ptr [esi + 0x32]                        # 004B2647
    sub dx, word ptr [_ui_vehicle___widgets_0+182]       # 004B264B
    sub dx, 0x3a                                         # 004B2652
    cmp dx, -0x28                                        # 004B2656
    jge .L4B2660                                         # 004B265A
    mov dx, 0xffd8                                       # 004B265C
.L4B2660:
    cmp dx, 0x28                                         # 004B2660
    jle .L4B266A                                         # 004B2664
    mov dx, 0x28                                         # 004B2666
.L4B266A:
    neg dx                                               # 004B266A
    push esi                                             # 004B266D
    mov cx, word ptr [esi + 0x40]                        # 004B266E
    mov bl, 1                                            # 004B2672
    mov esi, 0x4a                                        # 004B2674
    call _sub_431315                                     # 004B2679
    pop esi                                              # 004B267E
    ret                                                  # 004B267F

    .global _sub_4B2680
_sub_4B2680:
    movzx edi, word ptr [esi + 0x40]                     # 004B2680
    shl edi, 7                                           # 004B2684
    add_offset edi, _things                              # 004B2687
    movzx eax, byte ptr [edi + 0x5e]                     # 004B268D
    add ax, 0x4fc                                        # 004B2691
    mov word ptr [__112C826], ax                         # 004B2695
    mov word ptr [__112C82E], ax                         # 004B269B
    mov eax, 0x177                                       # 004B26A1
    mov ebx, 0x178                                       # 004B26A6
    mov cx, word ptr [edi + 0x44]                        # 004B26AB
    mov word ptr [__112C836], cx                         # 004B26AF
    movzx ecx, word ptr [edi + 0x22]                     # 004B26B6
    call _sub_4CE523                                     # 004B26BA
    ret                                                  # 004B26BF

    .global _sub_4B26C0
_sub_4B26C0:
    msvc_or cl, cl                                       # 004B26C0
    je _sub_4B32FF                                       # 004B26C2
    push esi                                             # 004B26C8
    mov word ptr [__9C68E8], 0x179                       # 004B26C9
    mov cx, word ptr [esi + 0x40]                        # 004B26D2
    mov bl, 1                                            # 004B26D6
    push ebx                                             # 004B26D8
    push edi                                             # 004B26D9
    mov edx, dword ptr [edi]                             # 004B26DA
    mov ebp, dword ptr [edi + 4]                         # 004B26DC
    mov edi, dword ptr [edi + 8]                         # 004B26DF
    mov ax, 1                                            # 004B26E2
    mov esi, 0xa                                         # 004B26E6
    call _sub_431315                                     # 004B26EB
    pop edi                                              # 004B26F0
    pop ebx                                              # 004B26F1
    push ebx                                             # 004B26F2
    push edi                                             # 004B26F3
    mov edx, dword ptr [edi + 0xc]                       # 004B26F4
    mov ebp, dword ptr [edi + 0x10]                      # 004B26F7
    mov edi, dword ptr [edi + 0x14]                      # 004B26FA
    mov ax, 2                                            # 004B26FD
    msvc_xor cx, cx                                      # 004B2701
    mov esi, 0xa                                         # 004B2704
    call _sub_431315                                     # 004B2709
    pop edi                                              # 004B270E
    pop ebx                                              # 004B270F
    push ebx                                             # 004B2710
    push edi                                             # 004B2711
    mov edx, dword ptr [edi + 0x18]                      # 004B2712
    mov ebp, dword ptr [edi + 0x1c]                      # 004B2715
    mov edi, dword ptr [edi + 0x20]                      # 004B2718
    msvc_xor ax, ax                                      # 004B271B
    msvc_xor cx, cx                                      # 004B271E
    mov esi, 0xa                                         # 004B2721
    call _sub_431315                                     # 004B2726
    pop edi                                              # 004B272B
    pop ebx                                              # 004B272C
    pop esi                                              # 004B272D
    ret                                                  # 004B272E

    .global _sub_4B272F
_sub_4B272F:
    push esi                                             # 004B272F
    mov word ptr [__9C68E8], 0x48d                       # 004B2730
    mov di, word ptr [esi + 0x40]                        # 004B2739
    mov bl, 1                                            # 004B273D
    mov esi, 4                                           # 004B273F
    call _sub_431315                                     # 004B2744
    pop esi                                              # 004B2749
    ret                                                  # 004B274A

    .global _sub_4B274B
_sub_4B274B:
    push esi                                             # 004B274B
    mov word ptr [__113D850], 0x1a5                      # 004B274C
    mov word ptr [__113D852], 0x1a5                      # 004B2755
    mov word ptr [__113D854], 0x1a5                      # 004B275E
    mov word ptr [__113D8A0], 0x109                      # 004B2767
    mov word ptr [__113D8A8], 0x10a                      # 004B2770
    mov word ptr [__113D8B0], 0x10b                      # 004B2779
    mov al, byte ptr [esi + 0x887]                       # 004B2782
    mov bx, 2                                            # 004B2788
    movzx ebp, word ptr [esi + 0x40]                     # 004B278C
    shl ebp, 7                                           # 004B2790
    add_offset ebp, _things                              # 004B2793
    cmp byte ptr [ebp + 0x42], 0                         # 004B2799
    jne .L4B27AE                                         # 004B279D
    test word ptr [__508F14], 0x40                       # 004B279F
    je .L4B27AE                                          # 004B27A8
    mov bx, 3                                            # 004B27AA
.L4B27AE:
    mov cx, word ptr [edi + 2]                           # 004B27AE
    mov bp, word ptr [edi + 4]                           # 004B27B2
    msvc_sub bp, cx                                      # 004B27B6
    inc bp                                               # 004B27B9
    mov dx, word ptr [edi + 6]                           # 004B27BB
    mov di, word ptr [edi + 8]                           # 004B27BF
    msvc_sub di, dx                                      # 004B27C3
    inc di                                               # 004B27C6
    add cx, word ptr [esi + 0x30]                        # 004B27C8
    add dx, word ptr [esi + 0x32]                        # 004B27CC
    call _sub_4CCA6D                                     # 004B27D0
    pop esi                                              # 004B27D5
    movzx edi, word ptr [esi + 0x40]                     # 004B27D6
    shl edi, 7                                           # 004B27DA
    add_offset edi, _things                              # 004B27DD
    msvc_xor eax, eax                                    # 004B27E3
    test word ptr [edi + 0xc], 2                         # 004B27E5
    jne .L4B27EE                                         # 004B27EB
    inc eax                                              # 004B27ED
.L4B27EE:
    test word ptr [edi + 0xc], 0x40                      # 004B27EE
    je .L4B27FB                                          # 004B27F4
    mov eax, 2                                           # 004B27F6
.L4B27FB:
    bts dword ptr [__113DC64], eax                       # 004B27FB
    xor eax, 1                                           # 004B2802
    cmp eax, 2                                           # 004B2805
    jbe .L4B280C                                         # 004B2808
    msvc_xor eax, eax                                    # 004B280A
.L4B280C:
    mov word ptr [__113D84E], ax                         # 004B280C
    ret                                                  # 004B2812

    .global _sub_4B2813
_sub_4B2813:
    cmp ax, -1                                           # 004B2813
    jne .L4B281F                                         # 004B2817
    mov ax, word ptr [__113D84E]                         # 004B2819
.L4B281F:
    cmp ax, -1                                           # 004B281F
    je _sub_4B32FF                                       # 004B2823
    push esi                                             # 004B2829
    mov bh, 3                                            # 004B282A
    mov word ptr [__9C68E8], 0x105                       # 004B282C
    cmp ax, 2                                            # 004B2835
    je .L4B2856                                          # 004B2839
    mov bh, 1                                            # 004B283B
    mov word ptr [__9C68E8], 0x104                       # 004B283D
    msvc_or ax, ax                                       # 004B2846
    jne .L4B2856                                         # 004B2849
    msvc_xor bh, bh                                      # 004B284B
    mov word ptr [__9C68E8], 0x106                       # 004B284D
.L4B2856:
    movzx ecx, word ptr [esi + 0x40]                     # 004B2856
    shl ecx, 7                                           # 004B285A
    add_offset ecx, _things                              # 004B285D
    mov ax, word ptr [ecx + 0x22]                        # 004B2863
    mov word ptr [__112C82C], ax                         # 004B2867
    mov ax, word ptr [ecx + 0x44]                        # 004B286D
    mov word ptr [__112C82E], ax                         # 004B2871
    mov dx, word ptr [esi + 0x40]                        # 004B2877
    msvc_xor ax, ax                                      # 004B287B
    msvc_xor cx, cx                                      # 004B287E
    mov bl, 1                                            # 004B2881
    mov esi, 0xc                                         # 004B2883
    call _sub_431315                                     # 004B2888
    pop esi                                              # 004B288D
    ret                                                  # 004B288E

    .global _sub_4B288F
_sub_4B288F:
    bt dword ptr [__523368], 3                           # 004B288F
    jae .L4B28C6                                         # 004B2897
    mov cl, byte ptr [esi + 0x882]                       # 004B2899
    cmp cl, byte ptr [__523392]                          # 004B289F
    jne .L4B28C6                                         # 004B28A5
    mov cx, word ptr [esi + 0x40]                        # 004B28A7
    cmp cx, word ptr [__523390]                          # 004B28AB
    jne .L4B28C6                                         # 004B28B2
    cmp word ptr [__523394], 0xd                         # 004B28B4
    jne .L4B28C6                                         # 004B28BC
    xor byte ptr [_scenarioChunk3+408], 1                # 004B28BE
    ret                                                  # 004B28C5
.L4B28C6:
    push esi                                             # 004B28C6
    mov dx, word ptr [esi + 0x40]                        # 004B28C7
    mov bl, 1                                            # 004B28CB
    mov word ptr [__9C68E8], 0x184                       # 004B28CD
    mov esi, 3                                           # 004B28D6
    call _sub_431315                                     # 004B28DB
    pop esi                                              # 004B28E0
    ret                                                  # 004B28E1

    .global _sub_4B28E2
_sub_4B28E2:
    call _sub_4CA4BD                                     # 004B28E2
    movzx edi, word ptr [esi + 0x40]                     # 004B28E7
    shl edi, 7                                           # 004B28EB
    add_offset edi, _things                              # 004B28EE
    cmp word ptr [edi + 0x30], -1                        # 004B28F4
    je .L4B2901                                          # 004B28F9
    test byte ptr [edi + 0x38], 0x10                     # 004B28FB
    je .L4B292D                                          # 004B28FF
.L4B2901:
    movzx ecx, byte ptr [edi + 0x5e]                     # 004B2901
    shl ecx, 1                                           # 004B2905
    cmp byte ptr [_scenarioChunk3+408], 0                # 004B2907
    je .L4B2911                                          # 004B290E
    inc ecx                                              # 004B2910
.L4B2911:
    mov al, byte ptr [ecx + __50029C]                    # 004B2911
    call _sub_4CE367                                     # 004B2917
    jb _sub_4B32FF                                       # 004B291C
    mov dword ptr [__1136264], 0xffffffff                # 004B2922
    ret                                                  # 004B292C
.L4B292D:
    push esi                                             # 004B292D
    mov word ptr [__9C68E8], 0x48c                       # 004B292E
    push eax                                             # 004B2937
    movzx edx, word ptr [esi + 0x40]                     # 004B2938
    shl edx, 7                                           # 004B293C
    add_offset edx, _things                              # 004B293F
    mov ax, word ptr [edx + 0x22]                        # 004B2945
    mov word ptr [__112C82C], ax                         # 004B2949
    mov ax, word ptr [edx + 0x44]                        # 004B294F
    mov word ptr [__112C82E], ax                         # 004B2953
    pop eax                                              # 004B2959
    cmp byte ptr [edi + 0x42], 2                         # 004B295A
    je .L4B2980                                          # 004B295E
    cmp byte ptr [edi + 0x42], 3                         # 004B2960
    je .L4B299A                                          # 004B2964
    mov di, word ptr [edi + 0xa]                         # 004B2966
    mov bl, 1                                            # 004B296A
    mov esi, 2                                           # 004B296C
    call _sub_431315                                     # 004B2971
    cmp ebx, 0x80000000                                  # 004B2976
    jne .L4B29B4                                         # 004B297C
    pop esi                                              # 004B297E
    ret                                                  # 004B297F
.L4B2980:
    mov di, word ptr [edi + 0xa]                         # 004B2980
    mov bl, 1                                            # 004B2984
    mov esi, 0x3b                                        # 004B2986
    call _sub_431315                                     # 004B298B
    cmp ebx, 0x80000000                                  # 004B2990
    jne .L4B29B4                                         # 004B2996
    pop esi                                              # 004B2998
    ret                                                  # 004B2999
.L4B299A:
    mov di, word ptr [edi + 0xa]                         # 004B299A
    mov bl, 1                                            # 004B299E
    mov esi, 0x3f                                        # 004B29A0
    call _sub_431315                                     # 004B29A5
    cmp ebx, 0x80000000                                  # 004B29AA
    jne .L4B29B4                                         # 004B29B0
    pop esi                                              # 004B29B2
    ret                                                  # 004B29B3
.L4B29B4:
    pop esi                                              # 004B29B4
    mov edx, 5                                           # 004B29B5
    mov ebp, dword ptr [esi]                             # 004B29BA
    call dword ptr [ebp + 4]                             # 004B29BC
    ret                                                  # 004B29BF

    .global _sub_4B29C0
_sub_4B29C0:
    movzx ebp, word ptr [esi + 0x40]                     # 004B29C0
    shl ebp, 7                                           # 004B29C4
    add_offset ebp, _things                              # 004B29C7
    movzx edx, byte ptr [ebp + 0x5e]                     # 004B29CD
    shl edx, 1                                           # 004B29D1
    cmp byte ptr [_scenarioChunk3+408], 0                # 004B29D3
    je .L4B29DD                                          # 004B29DA
    inc edx                                              # 004B29DC
.L4B29DD:
    mov dl, byte ptr [edx + __50029C]                    # 004B29DD
    mov byte ptr [__523393], dl                          # 004B29E3
    cmp byte ptr [ebp + 0x42], 2                         # 004B29E9
    je .L4B2AFA                                          # 004B29ED
    cmp byte ptr [ebp + 0x42], 3                         # 004B29F3
    je .L4B2B9E                                          # 004B29F7
    cmp byte ptr [ebp + 0x42], 0                         # 004B29FD
    je .L4B2A11                                          # 004B2A01
    call _sub_479707                                     # 004B2A03
    jae .L4B2A1D                                         # 004B2A08
    mov ebx, 0xffffffff                                  # 004B2A0A
    jmp .L4B2A1D                                         # 004B2A0F
.L4B2A11:
    call _sub_4B6444                                     # 004B2A11
    jae .L4B2A1D                                         # 004B2A16
    mov ebx, 0xffffffff                                  # 004B2A18
.L4B2A1D:
    cmp ebp, dword ptr [__113625A]                       # 004B2A1D
    jne .L4B2A4C                                         # 004B2A23
    cmp ax, word ptr [__113625E]                         # 004B2A25
    jne .L4B2A4C                                         # 004B2A2C
    cmp cx, word ptr [__1136260]                         # 004B2A2E
    jne .L4B2A4C                                         # 004B2A35
    cmp di, word ptr [__1136262]                         # 004B2A37
    jne .L4B2A4C                                         # 004B2A3E
    cmp ebx, dword ptr [__1136264]                       # 004B2A40
    je _sub_4B32FF                                       # 004B2A46
.L4B2A4C:
    mov dword ptr [__113625A], ebp                       # 004B2A4C
    mov word ptr [__113625E], ax                         # 004B2A52
    mov word ptr [__1136260], cx                         # 004B2A58
    mov word ptr [__1136262], di                         # 004B2A5F
    mov dword ptr [__1136264], ebx                       # 004B2A66
    movzx edi, word ptr [esi + 0x40]                     # 004B2A6C
    shl edi, 7                                           # 004B2A70
    add_offset edi, _things                              # 004B2A73
    cmp word ptr [edi + 0x30], -1                        # 004B2A79
    je .L4B2A98                                          # 004B2A7E
    test byte ptr [edi + 0x38], 0x10                     # 004B2A80
    je .L4B2A98                                          # 004B2A84
    push esi                                             # 004B2A86
    mov di, word ptr [edi + 0xa]                         # 004B2A87
    mov bl, 0x49                                         # 004B2A8B
    mov esi, 2                                           # 004B2A8D
    call _sub_431315                                     # 004B2A92
    pop esi                                              # 004B2A97
.L4B2A98:
    mov ebp, dword ptr [__113625A]                       # 004B2A98
    mov ax, word ptr [__113625E]                         # 004B2A9E
    mov cx, word ptr [__1136260]                         # 004B2AA4
    mov dx, word ptr [__1136262]                         # 004B2AAB
    mov ebx, dword ptr [__1136264]                       # 004B2AB2
    shr dx, 2                                            # 004B2AB8
    cmp ebx, -1                                          # 004B2ABC
    je _sub_4B32FF                                       # 004B2ABF
    push esi                                             # 004B2AC5
    movzx esi, word ptr [esi + 0x40]                     # 004B2AC6
    shl esi, 7                                           # 004B2ACA
    add_offset esi, _things                              # 004B2ACD
    shl ebx, 0x10                                        # 004B2AD3
    mov di, word ptr [esi + 0xa]                         # 004B2AD6
    mov bl, 0x49                                         # 004B2ADA
    mov esi, 1                                           # 004B2ADC
    call _sub_431315                                     # 004B2AE1
    cmp ebx, 0x80000000                                  # 004B2AE6
    jne .L4B2AF8                                         # 004B2AEC
    mov dword ptr [__1136264], 0xffffffff                # 004B2AEE
.L4B2AF8:
    pop esi                                              # 004B2AF8
    ret                                                  # 004B2AF9
.L4B2AFA:
    call _sub_426F0B                                     # 004B2AFA
    jae .L4B2B05                                         # 004B2AFF
    mov bp, 0xffff                                       # 004B2B01
.L4B2B05:
    cmp bp, word ptr [__113625A]                         # 004B2B05
    jne .L4B2B1A                                         # 004B2B0C
    cmp dl, byte ptr [__1136264]                         # 004B2B0E
    je _sub_4B32FF                                       # 004B2B14
.L4B2B1A:
    mov word ptr [__113625A], bp                         # 004B2B1A
    mov byte ptr [__1136264], dl                         # 004B2B21
    movzx edi, word ptr [esi + 0x40]                     # 004B2B27
    shl edi, 7                                           # 004B2B2B
    add_offset edi, _things                              # 004B2B2E
    cmp word ptr [edi + 0x30], -1                        # 004B2B34
    je .L4B2B53                                          # 004B2B39
    test byte ptr [edi + 0x38], 0x10                     # 004B2B3B
    je .L4B2B53                                          # 004B2B3F
    push esi                                             # 004B2B41
    mov di, word ptr [edi + 0xa]                         # 004B2B42
    mov bl, 0x49                                         # 004B2B46
    mov esi, 0x3b                                        # 004B2B48
    call _sub_431315                                     # 004B2B4D
    pop esi                                              # 004B2B52
.L4B2B53:
    mov bp, word ptr [__113625A]                         # 004B2B53
    mov dl, byte ptr [__1136264]                         # 004B2B5A
    cmp bp, -1                                           # 004B2B60
    je _sub_4B32FF                                       # 004B2B64
    push esi                                             # 004B2B6A
    movzx esi, word ptr [esi + 0x40]                     # 004B2B6B
    shl esi, 7                                           # 004B2B6F
    add_offset esi, _things                              # 004B2B72
    mov di, word ptr [esi + 0xa]                         # 004B2B78
    mov ebx, 0x49                                        # 004B2B7C
    mov esi, 0x3a                                        # 004B2B81
    call _sub_431315                                     # 004B2B86
    cmp ebx, 0x80000000                                  # 004B2B8B
    jne .L4B2B9C                                         # 004B2B91
    mov word ptr [__113625A], 0xffff                     # 004B2B93
.L4B2B9C:
    pop esi                                              # 004B2B9C
    ret                                                  # 004B2B9D
.L4B2B9E:
    call _sub_427595                                     # 004B2B9E
    mov ebx, 0                                           # 004B2BA3
    jae .L4B2BAF                                         # 004B2BA8
    mov ebx, 0xffffffff                                  # 004B2BAA
.L4B2BAF:
    cmp ax, word ptr [__113625E]                         # 004B2BAF
    jne .L4B2BD6                                         # 004B2BB6
    cmp cx, word ptr [__1136260]                         # 004B2BB8
    jne .L4B2BD6                                         # 004B2BBF
    cmp di, word ptr [__1136262]                         # 004B2BC1
    jne .L4B2BD6                                         # 004B2BC8
    cmp ebx, dword ptr [__1136264]                       # 004B2BCA
    je _sub_4B32FF                                       # 004B2BD0
.L4B2BD6:
    mov word ptr [__113625E], ax                         # 004B2BD6
    mov word ptr [__1136260], cx                         # 004B2BDC
    mov word ptr [__1136262], di                         # 004B2BE3
    mov dword ptr [__1136264], ebx                       # 004B2BEA
    movzx edi, word ptr [esi + 0x40]                     # 004B2BF0
    shl edi, 7                                           # 004B2BF4
    add_offset edi, _things                              # 004B2BF7
    cmp word ptr [edi + 0x30], -1                        # 004B2BFD
    je .L4B2C1C                                          # 004B2C02
    test byte ptr [edi + 0x38], 0x10                     # 004B2C04
    je .L4B2C1C                                          # 004B2C08
    push esi                                             # 004B2C0A
    mov di, word ptr [edi + 0xa]                         # 004B2C0B
    mov bl, 0x49                                         # 004B2C0F
    mov esi, 0x3f                                        # 004B2C11
    call _sub_431315                                     # 004B2C16
    pop esi                                              # 004B2C1B
.L4B2C1C:
    mov ax, word ptr [__113625E]                         # 004B2C1C
    mov cx, word ptr [__1136260]                         # 004B2C22
    mov dx, word ptr [__1136262]                         # 004B2C29
    mov ebx, dword ptr [__1136264]                       # 004B2C30
    cmp ebx, -1                                          # 004B2C36
    je _sub_4B32FF                                       # 004B2C39
    push esi                                             # 004B2C3F
    movzx esi, word ptr [esi + 0x40]                     # 004B2C40
    shl esi, 7                                           # 004B2C44
    add_offset esi, _things                              # 004B2C47
    mov di, word ptr [esi + 0xa]                         # 004B2C4D
    mov ebx, 0x49                                        # 004B2C51
    mov esi, 0x3e                                        # 004B2C56
    call _sub_431315                                     # 004B2C5B
    cmp ebx, 0x80000000                                  # 004B2C60
    jne .L4B2C72                                         # 004B2C66
    mov dword ptr [__1136264], 0xffffffff                # 004B2C68
.L4B2C72:
    pop esi                                              # 004B2C72
    ret                                                  # 004B2C73

    .global _sub_4B2C74
_sub_4B2C74:
    movzx ebp, word ptr [esi + 0x40]                     # 004B2C74
    shl ebp, 7                                           # 004B2C78
    add_offset ebp, _things                              # 004B2C7B
    cmp byte ptr [ebp + 0x42], 2                         # 004B2C81
    je .L4B2E18                                          # 004B2C85
    cmp byte ptr [ebp + 0x42], 3                         # 004B2C8B
    je .L4B2F1C                                          # 004B2C8F
    cmp byte ptr [ebp + 0x42], 0                         # 004B2C95
    je .L4B2CA8                                          # 004B2C99
    call _sub_479707                                     # 004B2C9B
    jb .L4B2D8A                                          # 004B2CA0
    jmp .L4B2CB3                                         # 004B2CA6
.L4B2CA8:
    call _sub_4B6444                                     # 004B2CA8
    jb .L4B2D8A                                          # 004B2CAD
.L4B2CB3:
    cmp ebp, dword ptr [__113625A]                       # 004B2CB3
    jne .L4B2CFC                                         # 004B2CB9
    cmp ax, word ptr [__113625E]                         # 004B2CBB
    jne .L4B2CFC                                         # 004B2CC2
    cmp cx, word ptr [__1136260]                         # 004B2CC4
    jne .L4B2CFC                                         # 004B2CCB
    cmp di, word ptr [__1136262]                         # 004B2CCD
    jne .L4B2CFC                                         # 004B2CD4
    cmp ebx, dword ptr [__1136264]                       # 004B2CD6
    jne .L4B2CFC                                         # 004B2CDC
    movzx edi, word ptr [esi + 0x40]                     # 004B2CDE
    shl edi, 7                                           # 004B2CE2
    add_offset edi, _things                              # 004B2CE5
    cmp word ptr [edi + 0x30], -1                        # 004B2CEB
    je .L4B2CFC                                          # 004B2CF0
    test byte ptr [edi + 0x38], 0x10                     # 004B2CF2
    jne .L4B2DBB                                         # 004B2CF6
.L4B2CFC:
    pushal                                               # 004B2CFC
    movzx edi, word ptr [esi + 0x40]                     # 004B2CFD
    shl edi, 7                                           # 004B2D01
    add_offset edi, _things                              # 004B2D04
    cmp word ptr [edi + 0x30], -1                        # 004B2D0A
    je .L4B2D27                                          # 004B2D0F
    test byte ptr [edi + 0x38], 0x10                     # 004B2D11
    je .L4B2D27                                          # 004B2D15
    mov di, word ptr [edi + 0xa]                         # 004B2D17
    mov bl, 0x49                                         # 004B2D1B
    mov esi, 2                                           # 004B2D1D
    call _sub_431315                                     # 004B2D22
.L4B2D27:
    popal                                                # 004B2D27
    push esi                                             # 004B2D28
    mov word ptr [__9C68E8], 0x48b                       # 004B2D29
    push eax                                             # 004B2D32
    movzx edx, word ptr [esi + 0x40]                     # 004B2D33
    shl edx, 7                                           # 004B2D37
    add_offset edx, _things                              # 004B2D3A
    mov ax, word ptr [edx + 0x22]                        # 004B2D40
    mov word ptr [__112C82C], ax                         # 004B2D44
    mov ax, word ptr [edx + 0x44]                        # 004B2D4A
    mov word ptr [__112C82E], ax                         # 004B2D4E
    pop eax                                              # 004B2D54
    msvc_mov dx, di                                      # 004B2D55
    shr dx, 2                                            # 004B2D58
    shl ebx, 0x10                                        # 004B2D5C
    mov di, word ptr [esi + 0x40]                        # 004B2D5F
    mov bl, 1                                            # 004B2D63
    mov esi, 1                                           # 004B2D65
    call _sub_431315                                     # 004B2D6A
    cmp ebx, 0x80000000                                  # 004B2D6F
    jne .L4B2D79                                         # 004B2D75
    pop esi                                              # 004B2D77
    ret                                                  # 004B2D78
.L4B2D79:
    call _sub_4CE3D6                                     # 004B2D79
    pop esi                                              # 004B2D7E
    mov edx, 4                                           # 004B2D7F
    mov ebp, dword ptr [esi]                             # 004B2D84
    call dword ptr [ebp + 4]                             # 004B2D86
    ret                                                  # 004B2D89
.L4B2D8A:
    push esi                                             # 004B2D8A
    movzx edx, word ptr [esi + 0x40]                     # 004B2D8B
    shl edx, 7                                           # 004B2D8F
    add_offset edx, _things                              # 004B2D92
    mov ax, word ptr [edx + 0x22]                        # 004B2D98
    mov word ptr [__112C82C], ax                         # 004B2D9C
    mov ax, word ptr [edx + 0x44]                        # 004B2DA2
    mov word ptr [__112C82E], ax                         # 004B2DA6
    mov bx, 0x48b                                        # 004B2DAC
    mov dx, 0xffff                                       # 004B2DB0
    call _sub_431A8A                                     # 004B2DB4
    pop esi                                              # 004B2DB9
    ret                                                  # 004B2DBA
.L4B2DBB:
    push esi                                             # 004B2DBB
    mov word ptr [__9C68E8], 0x48b                       # 004B2DBC
    push eax                                             # 004B2DC5
    movzx edx, word ptr [esi + 0x40]                     # 004B2DC6
    shl edx, 7                                           # 004B2DCA
    add_offset edx, _things                              # 004B2DCD
    mov ax, word ptr [edx + 0x22]                        # 004B2DD3
    mov word ptr [__112C82C], ax                         # 004B2DD7
    mov ax, word ptr [edx + 0x44]                        # 004B2DDD
    mov word ptr [__112C82E], ax                         # 004B2DE1
    pop eax                                              # 004B2DE7
    mov dx, word ptr [__1136262]                         # 004B2DE8
    shr dx, 2                                            # 004B2DEF
    mov bx, 0xffff                                       # 004B2DF3
    shl ebx, 0x10                                        # 004B2DF7
    mov di, word ptr [esi + 0x40]                        # 004B2DFA
    mov bl, 1                                            # 004B2DFE
    mov esi, 1                                           # 004B2E00
    call _sub_431315                                     # 004B2E05
    cmp ebx, 0x80000000                                  # 004B2E0A
    jne .L4B2D79                                         # 004B2E10
    pop esi                                              # 004B2E16
    ret                                                  # 004B2E17
.L4B2E18:
    call _sub_426F0B                                     # 004B2E18
    jb .L4B2D8A                                          # 004B2E1D
    cmp bp, word ptr [__113625A]                         # 004B2E23
    jne .L4B2E4E                                         # 004B2E2A
    cmp dl, byte ptr [__1136264]                         # 004B2E2C
    jne .L4B2E4E                                         # 004B2E32
    movzx edi, word ptr [esi + 0x40]                     # 004B2E34
    shl edi, 7                                           # 004B2E38
    add_offset edi, _things                              # 004B2E3B
    cmp word ptr [edi + 0x30], -1                        # 004B2E41
    je .L4B2E4E                                          # 004B2E46
    test byte ptr [edi + 0x38], 0x10                     # 004B2E48
    jne .L4B2ECA                                         # 004B2E4C
.L4B2E4E:
    pushal                                               # 004B2E4E
    movzx edi, word ptr [esi + 0x40]                     # 004B2E4F
    shl edi, 7                                           # 004B2E53
    add_offset edi, _things                              # 004B2E56
    cmp word ptr [edi + 0x30], -1                        # 004B2E5C
    je .L4B2E79                                          # 004B2E61
    test byte ptr [edi + 0x38], 0x10                     # 004B2E63
    je .L4B2E79                                          # 004B2E67
    mov di, word ptr [edi + 0xa]                         # 004B2E69
    mov bl, 0x49                                         # 004B2E6D
    mov esi, 0x3b                                        # 004B2E6F
    call _sub_431315                                     # 004B2E74
.L4B2E79:
    popal                                                # 004B2E79
    push esi                                             # 004B2E7A
    mov word ptr [__9C68E8], 0x48b                       # 004B2E7B
    push eax                                             # 004B2E84
    push edx                                             # 004B2E85
    movzx edx, word ptr [esi + 0x40]                     # 004B2E86
    shl edx, 7                                           # 004B2E8A
    add_offset edx, _things                              # 004B2E8D
    mov ax, word ptr [edx + 0x22]                        # 004B2E93
    mov word ptr [__112C82C], ax                         # 004B2E97
    mov ax, word ptr [edx + 0x44]                        # 004B2E9D
    mov word ptr [__112C82E], ax                         # 004B2EA1
    pop edx                                              # 004B2EA7
    pop eax                                              # 004B2EA8
    mov di, word ptr [esi + 0x40]                        # 004B2EA9
    mov ebx, 1                                           # 004B2EAD
    mov esi, 0x3a                                        # 004B2EB2
    call _sub_431315                                     # 004B2EB7
    cmp ebx, 0x80000000                                  # 004B2EBC
    jne .L4B2D79                                         # 004B2EC2
    pop esi                                              # 004B2EC8
    ret                                                  # 004B2EC9
.L4B2ECA:
    push esi                                             # 004B2ECA
    mov word ptr [__9C68E8], 0x48b                       # 004B2ECB
    push eax                                             # 004B2ED4
    movzx edx, word ptr [esi + 0x40]                     # 004B2ED5
    shl edx, 7                                           # 004B2ED9
    add_offset edx, _things                              # 004B2EDC
    mov ax, word ptr [edx + 0x22]                        # 004B2EE2
    mov word ptr [__112C82C], ax                         # 004B2EE6
    mov ax, word ptr [edx + 0x44]                        # 004B2EEC
    mov word ptr [__112C82E], ax                         # 004B2EF0
    pop eax                                              # 004B2EF6
    mov bx, 0xffff                                       # 004B2EF7
    shl ebx, 0x10                                        # 004B2EFB
    mov di, word ptr [esi + 0x40]                        # 004B2EFE
    mov bl, 1                                            # 004B2F02
    mov esi, 0x3a                                        # 004B2F04
    call _sub_431315                                     # 004B2F09
    cmp ebx, 0x80000000                                  # 004B2F0E
    jne .L4B2D79                                         # 004B2F14
    pop esi                                              # 004B2F1A
    ret                                                  # 004B2F1B
.L4B2F1C:
    call _sub_427595                                     # 004B2F1C
    jb .L4B2D8A                                          # 004B2F21
    cmp ax, word ptr [__113625E]                         # 004B2F27
    jne .L4B2F64                                         # 004B2F2E
    cmp cx, word ptr [__1136260]                         # 004B2F30
    jne .L4B2F64                                         # 004B2F37
    cmp di, word ptr [__1136262]                         # 004B2F39
    jne .L4B2F64                                         # 004B2F40
    cmp ebx, dword ptr [__1136264]                       # 004B2F42
    jne .L4B2F64                                         # 004B2F48
    movzx edi, word ptr [esi + 0x40]                     # 004B2F4A
    shl edi, 7                                           # 004B2F4E
    add_offset edi, _things                              # 004B2F51
    cmp word ptr [edi + 0x30], -1                        # 004B2F57
    je .L4B2F64                                          # 004B2F5C
    test byte ptr [edi + 0x38], 0x10                     # 004B2F5E
    jne .L4B2FE3                                         # 004B2F62
.L4B2F64:
    pushal                                               # 004B2F64
    movzx edi, word ptr [esi + 0x40]                     # 004B2F65
    shl edi, 7                                           # 004B2F69
    add_offset edi, _things                              # 004B2F6C
    cmp word ptr [edi + 0x30], -1                        # 004B2F72
    je .L4B2F8F                                          # 004B2F77
    test byte ptr [edi + 0x38], 0x10                     # 004B2F79
    je .L4B2F8F                                          # 004B2F7D
    mov di, word ptr [edi + 0xa]                         # 004B2F7F
    mov bl, 0x49                                         # 004B2F83
    mov esi, 0x3f                                        # 004B2F85
    call _sub_431315                                     # 004B2F8A
.L4B2F8F:
    popal                                                # 004B2F8F
    push esi                                             # 004B2F90
    mov word ptr [__9C68E8], 0x48b                       # 004B2F91
    msvc_mov dx, di                                      # 004B2F9A
    push eax                                             # 004B2F9D
    push edx                                             # 004B2F9E
    movzx edx, word ptr [esi + 0x40]                     # 004B2F9F
    shl edx, 7                                           # 004B2FA3
    add_offset edx, _things                              # 004B2FA6
    mov ax, word ptr [edx + 0x22]                        # 004B2FAC
    mov word ptr [__112C82C], ax                         # 004B2FB0
    mov ax, word ptr [edx + 0x44]                        # 004B2FB6
    mov word ptr [__112C82E], ax                         # 004B2FBA
    pop edx                                              # 004B2FC0
    pop eax                                              # 004B2FC1
    mov di, word ptr [esi + 0x40]                        # 004B2FC2
    mov ebx, 1                                           # 004B2FC6
    mov esi, 0x3e                                        # 004B2FCB
    call _sub_431315                                     # 004B2FD0
    cmp ebx, 0x80000000                                  # 004B2FD5
    jne .L4B2D79                                         # 004B2FDB
    pop esi                                              # 004B2FE1
    ret                                                  # 004B2FE2
.L4B2FE3:
    push esi                                             # 004B2FE3
    mov word ptr [__9C68E8], 0x48b                       # 004B2FE4
    push eax                                             # 004B2FED
    movzx edx, word ptr [esi + 0x40]                     # 004B2FEE
    shl edx, 7                                           # 004B2FF2
    add_offset edx, _things                              # 004B2FF5
    mov ax, word ptr [edx + 0x22]                        # 004B2FFB
    mov word ptr [__112C82C], ax                         # 004B2FFF
    mov ax, word ptr [edx + 0x44]                        # 004B3005
    mov word ptr [__112C82E], ax                         # 004B3009
    pop eax                                              # 004B300F
    mov bx, 0xffff                                       # 004B3010
    shl ebx, 0x10                                        # 004B3014
    mov di, word ptr [esi + 0x40]                        # 004B3017
    mov bl, 1                                            # 004B301B
    mov esi, 0x3e                                        # 004B301D
    call _sub_431315                                     # 004B3022
    cmp ebx, 0x80000000                                  # 004B3027
    jne .L4B2D79                                         # 004B302D
    pop esi                                              # 004B3033
    ret                                                  # 004B3034

    .global _sub_4B3035
_sub_4B3035:
    pushal                                               # 004B3035
    movzx edi, word ptr [esi + 0x40]                     # 004B3036
    shl edi, 7                                           # 004B303A
    add_offset edi, _things                              # 004B303D
    cmp word ptr [edi + 0x30], -1                        # 004B3043
    je .L4B3090                                          # 004B3048
    test byte ptr [edi + 0x38], 0x10                     # 004B304A
    je .L4B3090                                          # 004B304E
    cmp byte ptr [edi + 0x42], 2                         # 004B3050
    jne .L4B3068                                         # 004B3054
    mov di, word ptr [edi + 0xa]                         # 004B3056
    mov bl, 0x49                                         # 004B305A
    mov esi, 0x3b                                        # 004B305C
    call _sub_431315                                     # 004B3061
    jmp .L4B3090                                         # 004B3066
.L4B3068:
    cmp byte ptr [edi + 0x42], 3                         # 004B3068
    jne .L4B3080                                         # 004B306C
    mov di, word ptr [edi + 0xa]                         # 004B306E
    mov bl, 0x49                                         # 004B3072
    mov esi, 0x3f                                        # 004B3074
    call _sub_431315                                     # 004B3079
    jmp .L4B3090                                         # 004B307E
.L4B3080:
    mov di, word ptr [edi + 0xa]                         # 004B3080
    mov bl, 0x49                                         # 004B3084
    mov esi, 2                                           # 004B3086
    call _sub_431315                                     # 004B308B
.L4B3090:
    popal                                                # 004B3090
    call _sub_4CA4BD                                     # 004B3091
    ret                                                  # 004B3096

    .global _sub_4B3097
_sub_4B3097:
    cmp dword ptr [esi + 4], 0                           # 004B3097
    je _sub_4B32FF                                       # 004B309B
    mov eax, dword ptr [esi + 0x848]                     # 004B30A1
    cmp eax, -1                                          # 004B30A7
    je _sub_4B32FF                                       # 004B30AA
    mov edx, dword ptr [esi + 0x84c]                     # 004B30B0
    test eax, 0x80000000                                 # 004B30B6
    je .L4B30D7                                          # 004B30BB
    movzx ebx, ax                                        # 004B30BD
    shl ebx, 7                                           # 004B30C0
    add_offset ebx, _things                              # 004B30C3
    mov ax, word ptr [ebx + 0xe]                         # 004B30C9
    mov cx, word ptr [ebx + 0x10]                        # 004B30CD
    mov dx, word ptr [ebx + 0x12]                        # 004B30D1
    jmp .L4B30E4                                         # 004B30D5
.L4B30D7:
    and eax, 0x3fffffff                                  # 004B30D7
    msvc_mov ecx, eax                                    # 004B30DC
    shr ecx, 0x10                                        # 004B30DE
    shr edx, 0x10                                        # 004B30E1
.L4B30E4:
    push esi                                             # 004B30E4
    call _sub_4CE438                                     # 004B30E5
    jb .L4B30F1                                          # 004B30EA
    call _sub_4C6827                                     # 004B30EC
.L4B30F1:
    pop esi                                              # 004B30F1
    ret                                                  # 004B30F2

    .global _sub_4B30F3
_sub_4B30F3:
    inc word ptr [esi + 0x872]                           # 004B30F3
    mov ebp, dword ptr [esi]                             # 004B30FA
    call dword ptr [ebp + 0x68]                          # 004B30FC
    mov ax, 0x497                                        # 004B30FF
    mov bx, word ptr [esi + 0x40]                        # 004B3103
    call _sub_4CB966                                     # 004B3107
    mov ax, 0xa97                                        # 004B310C
    mov bx, word ptr [esi + 0x40]                        # 004B3110
    call _sub_4CB966                                     # 004B3114
    mov ax, 0xe97                                        # 004B3119
    mov bx, word ptr [esi + 0x40]                        # 004B311D
    call _sub_4CB966                                     # 004B3121
    mov ax, 0xd97                                        # 004B3126
    mov bx, word ptr [esi + 0x40]                        # 004B312A
    call _sub_4CB966                                     # 004B312E
    mov ax, 0xf97                                        # 004B3133
    mov bx, word ptr [esi + 0x40]                        # 004B3137
    call _sub_4CB966                                     # 004B313B
    test dword ptr [esi + 0x14], 0x2000                  # 004B3140
    jne .L4B3182                                         # 004B3147
    movzx edi, word ptr [esi + 0x40]                     # 004B3149
    shl edi, 7                                           # 004B314D
    add_offset edi, _things                              # 004B3150
    cmp word ptr [edi + 0x30], -1                        # 004B3156
    je .L4B3167                                          # 004B315B
    test byte ptr [edi + 0x38], 0x10                     # 004B315D
    je .L4B31F1                                          # 004B3161
.L4B3167:
    msvc_mov edi, esi                                    # 004B3167
.L4B3169:
    add edi, 0x88e                                       # 004B3169
    cmp edi, dword ptr [__113D754]                       # 004B316F
    jae .L4B31A9                                         # 004B3175
    test dword ptr [edi + 0x42], 2                       # 004B3177
    jne .L4B3169                                         # 004B317E
    jmp .L4B31F1                                         # 004B3180
.L4B3182:
    bt dword ptr [__523368], 3                           # 004B3182
    jae .L4B31F1                                         # 004B318A
    cmp byte ptr [__523392], 0x17                        # 004B318C
    jne .L4B31F1                                         # 004B3193
    mov bp, word ptr [esi + 0x40]                        # 004B3195
    cmp bp, word ptr [__523390]                          # 004B3199
    jne .L4B31F1                                         # 004B31A0
    call _sub_4CE3D6                                     # 004B31A2
    jmp .L4B31F1                                         # 004B31A7
.L4B31A9:
    movzx ebp, word ptr [esi + 0x40]                     # 004B31A9
    shl ebp, 7                                           # 004B31AD
    add_offset ebp, _things                              # 004B31B0
    mov al, byte ptr [ebp + 0x21]                        # 004B31B6
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B31B9
    jne .L4B31F1                                         # 004B31BF
    mov dx, 0xd                                          # 004B31C1
    bt dword ptr [__523368], 3                           # 004B31C5
    jae _sub_4B28E2                                      # 004B31CD
    cmp byte ptr [__523392], 0x17                        # 004B31D3
    jne _sub_4B28E2                                      # 004B31DA
    mov bp, word ptr [esi + 0x40]                        # 004B31E0
    cmp bp, word ptr [__523390]                          # 004B31E4
    jne _sub_4B28E2                                      # 004B31EB
.L4B31F1:
    ret                                                  # 004B31F1

    .global _sub_4B31F2
_sub_4B31F2:
    movzx ebx, word ptr [esi + 0x40]                     # 004B31F2
    shl ebx, 7                                           # 004B31F6
    add_offset ebx, _things                              # 004B31F9
    movzx edx, byte ptr [ebx + 0x5e]                     # 004B31FF
    add dx, 0x4fc                                        # 004B3203
    mov word ptr [__112C828], dx                         # 004B3208
    ret                                                  # 004B320F

    .global _sub_4B3210
_sub_4B3210:
    call _sub_4B1E94                                     # 004B3210
    mov word ptr [esi + 0x38], 0xc0                      # 004B3215
    mov word ptr [esi + 0x3c], 0xb1                      # 004B321B
    mov word ptr [esi + 0x3a], 0x258                     # 004B3221
    mov word ptr [esi + 0x3e], 0x1b8                     # 004B3227
    mov ax, word ptr [esi + 0x38]                        # 004B322D
    cmp ax, word ptr [esi + 0x34]                        # 004B3231
    jbe .L4B3240                                         # 004B3235
    mov word ptr [esi + 0x34], ax                        # 004B3237
    call _sub_4CA4BD                                     # 004B323B
.L4B3240:
    mov ax, word ptr [esi + 0x3a]                        # 004B3240
    cmp ax, word ptr [esi + 0x34]                        # 004B3244
    jae .L4B3253                                         # 004B3248
    call _sub_4CA4BD                                     # 004B324A
    mov word ptr [esi + 0x34], ax                        # 004B324F
.L4B3253:
    mov ax, word ptr [esi + 0x3c]                        # 004B3253
    cmp ax, word ptr [esi + 0x36]                        # 004B3257
    jbe .L4B3266                                         # 004B325B
    mov word ptr [esi + 0x36], ax                        # 004B325D
    call _sub_4CA4BD                                     # 004B3261
.L4B3266:
    mov ax, word ptr [esi + 0x3e]                        # 004B3266
    cmp ax, word ptr [esi + 0x36]                        # 004B326A
    jae .L4B3279                                         # 004B326E
    call _sub_4CA4BD                                     # 004B3270
    mov word ptr [esi + 0x36], ax                        # 004B3275
.L4B3279:
    mov edi, dword ptr [esi + 4]                         # 004B3279
    msvc_or edi, edi                                     # 004B327C
    je _sub_4B32F9                                       # 004B327E
    movzx ebp, word ptr [esi + 0x40]                     # 004B3280
    shl ebp, 7                                           # 004B3284
    add_offset ebp, _things                              # 004B3287
    mov ax, word ptr [esi + 0x34]                        # 004B328D
    mov bx, word ptr [esi + 0x36]                        # 004B3291
    sub ax, 0x1e                                         # 004B3295
    mov cl, byte ptr [ebp + 0x21]                        # 004B3299
    cmp cl, byte ptr [_scenarioChunk3+36]                # 004B329C
    je .L4B32A8                                          # 004B32A2
    add ax, 0x16                                         # 004B32A4
.L4B32A8:
    sub bx, 0x3b                                         # 004B32A8
    test word ptr [ebp + 0xc], 0x40                      # 004B32AC
    je .L4B32C3                                          # 004B32B2
    mov cl, byte ptr [ebp + 0x21]                        # 004B32B4
    cmp cl, byte ptr [_scenarioChunk3+36]                # 004B32B7
    jne .L4B32C3                                         # 004B32BD
    sub ax, 0x1b                                         # 004B32BF
.L4B32C3:
    cmp ax, word ptr [edi]                               # 004B32C3
    jne .L4B32CE                                         # 004B32C6
    cmp bx, word ptr [edi + 2]                           # 004B32C8
    je _sub_4B32F9                                       # 004B32CC
.L4B32CE:
    movzx ecx, byte ptr [edi + 0x10]                     # 004B32CE
    cmp ax, word ptr [edi]                               # 004B32D2
    jne .L4B32DD                                         # 004B32D5
    cmp bx, word ptr [edi + 2]                           # 004B32D7
    je .L4B32E4                                          # 004B32DB
.L4B32DD:
    pushal                                               # 004B32DD
    call _sub_4CA4BD                                     # 004B32DE
    popal                                                # 004B32E3
.L4B32E4:
    mov word ptr [edi], ax                               # 004B32E4
    mov word ptr [edi + 2], bx                           # 004B32E7
    shl ax, cl                                           # 004B32EB
    shl bx, cl                                           # 004B32EE
    mov word ptr [edi + 0xc], ax                         # 004B32F1
    mov word ptr [edi + 0xe], bx                         # 004B32F5

    .global _sub_4B32F9
_sub_4B32F9:
    call _sub_4B5D88                                     # 004B32F9
    ret                                                  # 004B32FE

    .global _sub_4B32FF
_sub_4B32FF:
    ret                                                  # 004B32FF

    .global _sub_4B3300
_sub_4B3300:
    movzx edx, word ptr [esi + 0x870]                    # 004B3300
    mov eax, dword ptr [edx*4 + __5002BC]                # 004B3307
    cmp eax, dword ptr [esi + 0x2c]                      # 004B330E
    je .L4B331B                                          # 004B3311
    mov dword ptr [esi + 0x2c], eax                      # 004B3313
    call _sub_4CA17F                                     # 004B3316
.L4B331B:
    mov edx, dword ptr [esi + 0x1c]                      # 004B331B
    and edx, 0xfffffe0f                                  # 004B331E
    movzx ecx, word ptr [esi + 0x870]                    # 004B3324
    add ecx, 4                                           # 004B332B
    bts edx, ecx                                         # 004B332E
    mov dword ptr [esi + 0x1c], edx                      # 004B3331
    movzx ebx, word ptr [esi + 0x40]                     # 004B3334
    shl ebx, 7                                           # 004B3338
    add_offset ebx, _things                              # 004B333B
    mov byte ptr [_ui_vehicle___widgets_1+160], 9        # 004B3341
    cmp word ptr [ebx + 0x30], -1                        # 004B3348
    je .L4B335C                                          # 004B334D
    test byte ptr [ebx + 0x38], 0x10                     # 004B334F
    jne .L4B335C                                         # 004B3353
    mov byte ptr [_ui_vehicle___widgets_1+160], 0        # 004B3355
.L4B335C:
    mov ax, word ptr [ebx + 0x44]                        # 004B335C
    mov cx, word ptr [ebx + 0x22]                        # 004B3360
    mov word ptr [__112C828], ax                         # 004B3364
    mov word ptr [__112C826], cx                         # 004B336A
    mov ax, word ptr [esi + 0x34]                        # 004B3371
    mov cx, word ptr [esi + 0x36]                        # 004B3375
    dec ax                                               # 004B3379
    dec cx                                               # 004B337B
    mov word ptr [_ui_vehicle___widgets_1+4], ax         # 004B337D
    mov word ptr [_ui_vehicle___widgets_1+8], cx         # 004B3383
    mov word ptr [_ui_vehicle___widgets_1+52], ax        # 004B338A
    mov word ptr [_ui_vehicle___widgets_1+56], cx        # 004B3390
    dec ax                                               # 004B3397
    mov word ptr [_ui_vehicle___widgets_1+20], ax        # 004B3399
    sub ax, 0xd                                          # 004B339F
    mov word ptr [_ui_vehicle___widgets_1+34], ax        # 004B33A3
    add ax, 0xc                                          # 004B33A9
    mov word ptr [_ui_vehicle___widgets_1+36], ax        # 004B33AD
    sub ax, 0x17                                         # 004B33B3
    sub cx, 0x17                                         # 004B33B7
    mov word ptr [_ui_vehicle___widgets_1+196], ax       # 004B33BB
    mov word ptr [_ui_vehicle___widgets_1+200], cx       # 004B33C1
    mov ax, word ptr [esi + 0x34]                        # 004B33C8
    sub ax, 2                                            # 004B33CC
    mov word ptr [_ui_vehicle___widgets_1+148], ax       # 004B33D0
    mov word ptr [_ui_vehicle___widgets_1+164], ax       # 004B33D6
    mov word ptr [_ui_vehicle___widgets_1+180], ax       # 004B33DC
    sub ax, 0x17                                         # 004B33E2
    mov word ptr [_ui_vehicle___widgets_1+146], ax       # 004B33E6
    mov word ptr [_ui_vehicle___widgets_1+162], ax       # 004B33EC
    mov word ptr [_ui_vehicle___widgets_1+178], ax       # 004B33F2
    movzx eax, byte ptr [ebx + 0x5e]                     # 004B33F8
    movzx edx, byte ptr [esi + 0x884]                    # 004B33FC
    movzx edx, byte ptr [edx + __9C645C]                 # 004B3403
    shl edx, 0x13                                        # 004B340A
    msvc_add eax, edx                                    # 004B340D
    add eax, 0x6000019b                                  # 004B340F
    mov ebp, dword ptr [_interfaceSkinObjects]           # 004B3414
    add eax, dword ptr [ebp + 2]                         # 004B341A
    mov dword ptr [_ui_vehicle___widgets_1+154], eax     # 004B341D
    mov byte ptr [_ui_vehicle___widgets_1+144], 9        # 004B3422
    mov byte ptr [_ui_vehicle___widgets_1+176], 9        # 004B3429
    mov al, byte ptr [ebx + 0x21]                        # 004B3430
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B3433
    je .L4B3458                                          # 004B3439
    mov byte ptr [_ui_vehicle___widgets_1+144], 0        # 004B343B
    mov byte ptr [_ui_vehicle___widgets_1+160], 0        # 004B3442
    mov byte ptr [_ui_vehicle___widgets_1+176], 0        # 004B3449
    add word ptr [_ui_vehicle___widgets_1+196], 0x16     # 004B3450
.L4B3458:
    mov eax, dword ptr [esi + 0x14]                      # 004B3458
    and eax, 0xfffffbff                                  # 004B345B
    movzx ebp, word ptr [ebx + 0x3a]                     # 004B3460
    shl ebp, 7                                           # 004B3464
    add_offset ebp, _things                              # 004B3467
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B346D
    shl ebp, 7                                           # 004B3471
    add_offset ebp, _things                              # 004B3474
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B347A
    shl ebp, 7                                           # 004B347E
    add_offset ebp, _things                              # 004B3481
    cmp byte ptr [ebp + 1], 6                            # 004B3487
    jne .L4B3492                                         # 004B348B
    or eax, 0x400                                        # 004B348D
.L4B3492:
    mov dword ptr [esi + 0x14], eax                      # 004B3492
    cmp byte ptr [ebx + 0x42], 2                         # 004B3495
    je .L4B34BC                                          # 004B3499
    cmp byte ptr [ebx + 0x42], 3                         # 004B349B
    je .L4B34D9                                          # 004B349F
    movzx ecx, byte ptr [ebx + 0x35]                     # 004B34A1
    cmp byte ptr [ebx + 0x42], 1                         # 004B34A5
    je .L4B34FF                                          # 004B34A9
    mov ecx, dword ptr [ecx*4 + _trackObjects]           # 004B34AB
    mov eax, dword ptr [ecx + 0x1e]                      # 004B34B2
    add eax, 0x20000011                                  # 004B34B5
    jmp .L4B351A                                         # 004B34BA
.L4B34BC:
    mov eax, 0x20000945                                  # 004B34BC
    mov bp, 0x101                                        # 004B34C1
    cmp word ptr [ebx + 0x30], -1                        # 004B34C5
    je .L4B34D7                                          # 004B34CA
    test byte ptr [ebx + 0x38], 0x10                     # 004B34CC
    jne .L4B34D7                                         # 004B34D0
    dec eax                                              # 004B34D2
    mov bp, 0x100                                        # 004B34D3
.L4B34D7:
    jmp .L4B3530                                         # 004B34D7
.L4B34D9:
    mov ecx, dword ptr [_waterObjects]                   # 004B34D9
    mov eax, dword ptr [ecx + 6]                         # 004B34DF
    add eax, 0x2000003b                                  # 004B34E2
    mov bp, 0x103                                        # 004B34E7
    cmp word ptr [ebx + 0x30], -1                        # 004B34EB
    je .L4B34FD                                          # 004B34F0
    test byte ptr [ebx + 0x38], 0x10                     # 004B34F2
    jne .L4B34FD                                         # 004B34F6
    dec eax                                              # 004B34F8
    mov bp, 0x102                                        # 004B34F9
.L4B34FD:
    jmp .L4B3530                                         # 004B34FD
.L4B34FF:
    cmp cl, 0xff                                         # 004B34FF
    jne .L4B350B                                         # 004B3502
    movzx ecx, byte ptr [_scenarioChunk3+429]            # 004B3504
.L4B350B:
    mov ecx, dword ptr [ecx*4 + _roadObjects]            # 004B350B
    mov eax, dword ptr [ecx + 0xe]                       # 004B3512
    add eax, 0x20000021                                  # 004B3515
.L4B351A:
    mov bp, 0xff                                         # 004B351A
    cmp word ptr [ebx + 0x30], -1                        # 004B351E
    je .L4B3530                                          # 004B3523
    test byte ptr [ebx + 0x38], 0x10                     # 004B3525
    jne .L4B3530                                         # 004B3529
    dec eax                                              # 004B352B
    mov bp, 0xfe                                         # 004B352C
.L4B3530:
    mov dword ptr [_ui_vehicle___widgets_1+170], eax     # 004B3530
    mov word ptr [_ui_vehicle___widgets_1+174], bp       # 004B3535
    call _sub_4B5ECD                                     # 004B353C
    ret                                                  # 004B3541

    .global _sub_4B3542
_sub_4B3542:
    call _sub_4CA4DF                                     # 004B3542
    call _sub_4B5F0D                                     # 004B3547
    cmp byte ptr [_ui_vehicle___widgets_1+160], 0        # 004B354C
    je .L4B359E                                          # 004B3553
    test dword ptr [_ui_vehicle___widgets_1+170], 0x20000000 # 004B3555
    je .L4B359E                                          # 004B355F
    test dword ptr [esi + 0x14], 0x400                   # 004B3561
    jne .L4B359E                                         # 004B3568
    push esi                                             # 004B356A
    movzx ebx, byte ptr [esi + 0x884]                    # 004B356B
    movzx ebx, byte ptr [ebx + __9C645C]                 # 004B3572
    shl ebx, 0x13                                        # 004B3579
    add ebx, dword ptr [_ui_vehicle___widgets_1+170]     # 004B357C
    mov cx, word ptr [_ui_vehicle___widgets_1+162]       # 004B3582
    mov dx, word ptr [_ui_vehicle___widgets_1+166]       # 004B3589
    add cx, word ptr [esi + 0x30]                        # 004B3590
    add dx, word ptr [esi + 0x32]                        # 004B3594
    call _sub_448C79                                     # 004B3598
    pop esi                                              # 004B359D
.L4B359E:
    movzx ebp, word ptr [esi + 0x40]                     # 004B359E
    shl ebp, 7                                           # 004B35A2
    add_offset ebp, _things                              # 004B35A5
    mov cx, word ptr [esi + 0x30]                        # 004B35AB
    mov dx, word ptr [esi + 0x32]                        # 004B35AF
    add cx, 3                                            # 004B35B3
    add dx, word ptr [esi + 0x36]                        # 004B35B7
    sub dx, 0x17                                         # 004B35BB
    push ecx                                             # 004B35BF
    push edx                                             # 004B35C0
    push ebp                                             # 004B35C1
    push esi                                             # 004B35C2
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B35C3
    shl ebp, 7                                           # 004B35C7
    add_offset ebp, _things                              # 004B35CA
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B35D0
    shl ebp, 7                                           # 004B35D4
    add_offset ebp, _things                              # 004B35D7
    mov ax, word ptr [ebp + 0x50]                        # 004B35DD
    mov word ptr [__112C826], ax                         # 004B35E1
    movzx eax, word ptr [ebp + 0x52]                     # 004B35E7
    mov dword ptr [__112C828], eax                       # 004B35EB
    mov bx, 0x148                                        # 004B35F0
    cmp byte ptr [ebp + 0x42], 2                         # 004B35F4
    je .L4B3604                                          # 004B35F8
    cmp byte ptr [ebp + 0x42], 3                         # 004B35FA
    je .L4B3604                                          # 004B35FE
    mov bx, 0x149                                        # 004B3600
.L4B3604:
    mov esi, dword ptr [esp]                             # 004B3604
    mov bp, word ptr [esi + 0x34]                        # 004B3607
    sub bp, 6                                            # 004B360B
    msvc_xor al, al                                      # 004B360F
    mov_offset esi, __112C826                            # 004B3611
    call _sub_494BBF                                     # 004B3616
    pop esi                                              # 004B361B
    pop ebp                                              # 004B361C
    pop edx                                              # 004B361D
    pop ecx                                              # 004B361E
    add dx, 0xa                                          # 004B361F
    push ecx                                             # 004B3623
    push edx                                             # 004B3624
    push ebp                                             # 004B3625
    push esi                                             # 004B3626
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3627
    shl ebp, 7                                           # 004B362B
    add_offset ebp, _things                              # 004B362E
    movzx esi, word ptr [ebp + 0x3a]                     # 004B3634
    shl esi, 7                                           # 004B3638
    add_offset esi, _things                              # 004B363B
    movzx ax, byte ptr [esi + 0x72]                      # 004B3641
    msvc_or ax, ax                                       # 004B3646
    jne .L4B364F                                         # 004B3649
    mov ax, 0x64                                         # 004B364B
.L4B364F:
    mov word ptr [__112C82A], ax                         # 004B364F
    mov ax, word ptr [esi + 0x54]                        # 004B3655
    cmp ax, -1                                           # 004B3659
    jne .L4B3662                                         # 004B365D
    msvc_xor ax, ax                                      # 004B365F
.L4B3662:
    mov word ptr [__112C826], ax                         # 004B3662
    mov ax, word ptr [esi + 0x5c]                        # 004B3668
    cmp ax, -1                                           # 004B366C
    jne .L4B3675                                         # 004B3670
    msvc_xor ax, ax                                      # 004B3672
.L4B3675:
    mov word ptr [__112C828], ax                         # 004B3675
    mov bx, 0x14a                                        # 004B367B
    cmp byte ptr [ebp + 0x49], 0                         # 004B367F
    je .L4B3687                                          # 004B3683
    inc bx                                               # 004B3685
.L4B3687:
    msvc_xor al, al                                      # 004B3687
    mov esi, dword ptr [esp]                             # 004B3689
    mov bp, word ptr [esi + 0x34]                        # 004B368C
    sub bp, 0x10                                         # 004B3690
    mov_offset esi, __112C826                            # 004B3694
    call _sub_494BBF                                     # 004B3699
    pop esi                                              # 004B369E
    pop ebp                                              # 004B369F
    pop edx                                              # 004B36A0
    pop ecx                                              # 004B36A1
    ret                                                  # 004B36A2

    .global _sub_4B36A3
_sub_4B36A3:
    push esi                                             # 004B36A3
    movzx ebp, byte ptr [esi + 0x887]                    # 004B36A4
    movzx ebp, byte ptr [ebp*8 + __1136BA4]              # 004B36AB
    msvc_mov eax, ebp                                    # 004B36B3
    shl eax, 8                                           # 004B36B5
    msvc_or ebp, eax                                     # 004B36B8
    shl eax, 8                                           # 004B36BA
    msvc_or ebp, eax                                     # 004B36BD
    shl eax, 8                                           # 004B36BF
    msvc_or ebp, eax                                     # 004B36C2
    call _sub_447485                                     # 004B36C4
    movzx esi, word ptr [esi + 0x40]                     # 004B36C9
    shl esi, 7                                           # 004B36CD
    add_offset esi, _things                              # 004B36D0
    movzx esi, word ptr [esi + 0x3a]                     # 004B36D6
    shl esi, 7                                           # 004B36DA
    add_offset esi, _things                              # 004B36DD
    movzx esi, word ptr [esi + 0x3a]                     # 004B36E3
    shl esi, 7                                           # 004B36E7
    add_offset esi, _things                              # 004B36EA
    movzx esi, word ptr [esi + 0x3a]                     # 004B36F0
    shl esi, 7                                           # 004B36F4
    add_offset esi, _things                              # 004B36F7
    msvc_xor dx, dx                                      # 004B36FD
    cmp byte ptr [esi + 1], 6                            # 004B3700
    je .L4B37EC                                          # 004B3704
.L4B370A:
    mov ebx, dword ptr [esp]                             # 004B370A
    mov ax, 0x1c7                                        # 004B370D
    mov cx, word ptr [ebx + 0x840]                       # 004B3711
    cmp cx, word ptr [esi + 0xa]                         # 004B3718
    jne .L4B375D                                         # 004B371C
    push eax                                             # 004B371E
    push edx                                             # 004B371F
    push esi                                             # 004B3720
    mov word ptr [esp + 8], 0x1c9                        # 004B3721
    msvc_mov cx, dx                                      # 004B3728
    add dx, word ptr [ebx + 0x83e]                       # 004B372B
    dec dx                                               # 004B3732
    cmp dword ptr [__113614E], -1                        # 004B3734
    je .L4B3749                                          # 004B373B
    msvc_mov dx, cx                                      # 004B373D
    dec cx                                               # 004B3740
    mov word ptr [esp + 8], 0x1c7                        # 004B3742
.L4B3749:
    msvc_xor ax, ax                                      # 004B3749
    mov bx, word ptr [ebx + 0x34]                        # 004B374C
    mov ebp, 0x2000030                                   # 004B3750
    call _sub_4474BA                                     # 004B3755
    pop esi                                              # 004B375A
    pop edx                                              # 004B375B
    pop eax                                              # 004B375C
.L4B375D:
    push eax                                             # 004B375D
    push edx                                             # 004B375E
    push esi                                             # 004B375F
    mov ebp, dword ptr [esp + 0xc]                       # 004B3760
    mov cx, word ptr [ebp + 0x83e]                       # 004B3764
    sub cx, 0x16                                         # 004B376B
    shr cx, 1                                            # 004B376F
    msvc_add dx, cx                                      # 004B3772
    msvc_xor cx, cx                                      # 004B3775
    msvc_xor al, al                                      # 004B3778
    cmp esi, dword ptr [__113614E]                       # 004B377A
    jne .L4B378A                                         # 004B3780
    or al, 0xc                                           # 004B3782
    mov ah, byte ptr [ebp + 0x887]                       # 004B3784
.L4B378A:
    call _sub_4B743B                                     # 004B378A
    pop ebp                                              # 004B378F
    pop edx                                              # 004B3790
    pop eax                                              # 004B3791
    push esi                                             # 004B3792
    push ecx                                             # 004B3793
    push edx                                             # 004B3794
    push ebp                                             # 004B3795
    movzx ebp, word ptr [ebp + 0x40]                     # 004B3796
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B379A
    mov bx, word ptr [ebp]                               # 004B37A1
    mov word ptr [__112C826], bx                         # 004B37A5
    add cx, 2                                            # 004B37AC
    mov ebx, dword ptr [esp + 0x10]                      # 004B37B0
    mov bx, word ptr [ebx + 0x83e]                       # 004B37B4
    shr bx, 1                                            # 004B37BB
    sub bx, 6                                            # 004B37BE
    msvc_add dx, bx                                      # 004B37C2
    msvc_mov bx, ax                                      # 004B37C5
    msvc_xor al, al                                      # 004B37C8
    mov_offset esi, __112C826                            # 004B37CA
    call _sub_494B3F                                     # 004B37CF
    pop ebp                                              # 004B37D4
    pop edx                                              # 004B37D5
    pop ecx                                              # 004B37D6
    pop esi                                              # 004B37D7
    mov ebx, dword ptr [esp]                             # 004B37D8
    add dx, word ptr [ebx + 0x83e]                       # 004B37DB
    cmp byte ptr [esi + 1], 6                            # 004B37E2
    jne .L4B370A                                         # 004B37E6
.L4B37EC:
    mov ebx, dword ptr [esp]                             # 004B37EC
    mov cx, word ptr [ebx + 0x840]                       # 004B37EF
    cmp cx, word ptr [esi + 0xa]                         # 004B37F6
    jne .L4B3821                                         # 004B37FA
    cmp dword ptr [__113614E], -1                        # 004B37FC
    je .L4B3821                                          # 004B3803
    push eax                                             # 004B3805
    push edx                                             # 004B3806
    push esi                                             # 004B3807
    msvc_mov cx, dx                                      # 004B3808
    dec cx                                               # 004B380B
    msvc_xor ax, ax                                      # 004B380D
    mov bx, word ptr [ebx + 0x34]                        # 004B3810
    mov ebp, 0x2000030                                   # 004B3814
    call _sub_4474BA                                     # 004B3819
    pop esi                                              # 004B381E
    pop edx                                              # 004B381F
    pop eax                                              # 004B3820
.L4B3821:
    pop esi                                              # 004B3821
    ret                                                  # 004B3822

    .global _sub_4B3823
_sub_4B3823:
    cmp dx, 2                                            # 004B3823
    je _sub_4CC6EA                                       # 004B3827
    cmp dx, 4                                            # 004B382D
    jb .L4B383D                                          # 004B3831
    cmp dx, 8                                            # 004B3833
    jbe _sub_4B2566                                      # 004B3837
.L4B383D:
    cmp dx, 1                                            # 004B383D
    je _sub_4B2680                                       # 004B3841
    cmp dx, 9                                            # 004B3847
    je _sub_4B38B2                                       # 004B384B
    cmp dx, 0xb                                          # 004B384D
    je _sub_4B38BE                                       # 004B3851
    cmp dx, 0xa                                          # 004B3853
    je _sub_4B28E2                                       # 004B3857
    ret                                                  # 004B385D

    .global _sub_4B385E
_sub_4B385E:
    ret                                                  # 004B385E

    .global _sub_4B385F
_sub_4B385F:
    cmp dx, 0xa                                          # 004B385F
    je _sub_4B29C0                                       # 004B3863
    ret                                                  # 004B3869

    .global _sub_4B386A
_sub_4B386A:
    cmp dx, 0xa                                          # 004B386A
    je _sub_4B2C74                                       # 004B386E
    ret                                                  # 004B3874

    .global _sub_4B3875
_sub_4B3875:
    cmp dx, 0xa                                          # 004B3875
    je _sub_4B3035                                       # 004B3879
    ret                                                  # 004B387F

    .global _sub_4B3880
_sub_4B3880:
    mov word ptr [__112C826], 0xc7                       # 004B3880
    movzx ebx, word ptr [esi + 0x40]                     # 004B3889
    shl ebx, 7                                           # 004B388D
    add_offset ebx, _things                              # 004B3890
    movzx edx, byte ptr [ebx + 0x5e]                     # 004B3896
    add dx, 0x4fc                                        # 004B389A
    mov word ptr [__112C828], dx                         # 004B389F
    ret                                                  # 004B38A6

    .global _sub_4B38A7
_sub_4B38A7:
    cmp dx, 1                                            # 004B38A7
    je _sub_4B26C0                                       # 004B38AB
    ret                                                  # 004B38B1

    .global _sub_4B38B2
_sub_4B38B2:
    push esi                                             # 004B38B2
    movzx eax, word ptr [esi + 0x40]                     # 004B38B3
    call _sub_4C1AF7                                     # 004B38B7
    pop esi                                              # 004B38BC
    ret                                                  # 004B38BD

    .global _sub_4B38BE
_sub_4B38BE:
    push esi                                             # 004B38BE
    mov dx, word ptr [esi + 0x40]                        # 004B38BF
    movzx eax, dx                                        # 004B38C3
    shl eax, 7                                           # 004B38C6
    add_offset eax, _things                              # 004B38C9
    mov cx, word ptr [eax + 0x44]                        # 004B38CE
    mov ax, word ptr [eax + 0x22]                        # 004B38D2
    mov word ptr [__112C830], ax                         # 004B38D6
    mov word ptr [__112C832], cx                         # 004B38DC
    mov word ptr [__9C68E8], 0x186                       # 004B38E3
    mov bl, 1                                            # 004B38EC
    mov esi, 6                                           # 004B38EE
    call _sub_431315                                     # 004B38F3
    pop esi                                              # 004B38F8
    ret                                                  # 004B38F9

    .global _sub_4B38FA
_sub_4B38FA:
    movzx ebp, word ptr [esi + 0x40]                     # 004B38FA
    shl ebp, 7                                           # 004B38FE
    add_offset ebp, _things                              # 004B3901
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3907
    shl ebp, 7                                           # 004B390B
    add_offset ebp, _things                              # 004B390E
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3914
    shl ebp, 7                                           # 004B3918
    add_offset ebp, _things                              # 004B391B
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3921
    shl ebp, 7                                           # 004B3925
    add_offset ebp, _things                              # 004B3928
    msvc_xor edx, edx                                    # 004B392E
    cmp byte ptr [ebp + 1], 6                            # 004B3930
    je .L4B3993                                          # 004B3934
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3936
    shl ebp, 7                                           # 004B393A
    add_offset ebp, _things                              # 004B393D
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3943
    shl ebp, 7                                           # 004B3947
    add_offset ebp, _things                              # 004B394A
.L4B3950:
    inc edx                                              # 004B3950
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3951
    shl ebp, 7                                           # 004B3955
    add_offset ebp, _things                              # 004B3958
.L4B395E:
    cmp byte ptr [ebp + 1], 6                            # 004B395E
    je .L4B3993                                          # 004B3962
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3964
    shl ebp, 7                                           # 004B3968
    add_offset ebp, _things                              # 004B396B
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3971
    shl ebp, 7                                           # 004B3975
    add_offset ebp, _things                              # 004B3978
    cmp byte ptr [ebp + 1], 5                            # 004B397E
    jne .L4B3950                                         # 004B3982
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B3984
    shl ebp, 7                                           # 004B3988
    add_offset ebp, _things                              # 004B398B
    jmp .L4B395E                                         # 004B3991
.L4B3993:
    movzx ebp, word ptr [esi + 0x83e]                    # 004B3993
    imul edx, ebp                                        # 004B399A
    ret                                                  # 004B399D

    .global _sub_4B399E
_sub_4B399E:
    mov word ptr [__52338A], 0x7d0                       # 004B399E
    and dword ptr [esi + 0x42], 0xffffbfff               # 004B39A7
    call _sub_4B5CC1                                     # 004B39AE
    mov ax, 0xffff                                       # 004B39B3
    mov bx, 0xffff                                       # 004B39B7
    cmp ebp, -1                                          # 004B39BB
    je .L4B39C8                                          # 004B39BE
    mov ax, 0x151                                        # 004B39C0
    mov bx, word ptr [ebp + 0xa]                         # 004B39C4
.L4B39C8:
    cmp bx, word ptr [esi + 0x840]                       # 004B39C8
    je .L4B39DD                                          # 004B39CF
    mov word ptr [esi + 0x840], bx                       # 004B39D1
    call _sub_4CA4BD                                     # 004B39D8
.L4B39DD:
    cmp byte ptr [_str_337], 0                           # 004B39DD
    je .L4B39FC                                          # 004B39E4
    cmp ax, word ptr [_ui_vehicle___widgets_1+206]       # 004B39E6
    jne .L4B39FC                                         # 004B39ED
    cmp bx, word ptr [esi + 0x85c]                       # 004B39EF
    je _sub_4B3DDD                                       # 004B39F6
.L4B39FC:
    mov word ptr [_ui_vehicle___widgets_1+206], ax       # 004B39FC
    mov word ptr [esi + 0x85c], bx                       # 004B3A02
    call _sub_4C87B5                                     # 004B3A09
    cmp bx, -1                                           # 004B3A0E
    je _sub_4B3DDD                                       # 004B3A12
    mov byte ptr [__52336E], 1                           # 004B3A18
    movzx ebx, word ptr [ebp + 0x40]                     # 004B3A1F
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004B3A23
    push esi                                             # 004B3A2A
    mov_offset edi, _str_337                             # 004B3A2B
    push ebx                                             # 004B3A30
    mov eax, 0x153                                       # 004B3A31
    lea ecx, [ebx]                                       # 004B3A36
    call _sub_4958C6                                     # 004B3A38
    mov eax, 0x154                                       # 004B3A3D
    lea ecx, [ebp + 0x56]                                # 004B3A42
    call _sub_4958C6                                     # 004B3A45
    pop ebx                                              # 004B3A4A
    cmp word ptr [ebx + 0xd8], 0                         # 004B3A4B
    je .L4B3A73                                          # 004B3A53
    cmp byte ptr [ebx + 2], 2                            # 004B3A55
    je .L4B3A73                                          # 004B3A59
    cmp byte ptr [ebx + 2], 3                            # 004B3A5B
    je .L4B3A73                                          # 004B3A5F
    push ebx                                             # 004B3A61
    lea ecx, [ebx + 0xd8]                                # 004B3A62
    mov eax, 0x156                                       # 004B3A68
    call _sub_4958C6                                     # 004B3A6D
    pop ebx                                              # 004B3A72
.L4B3A73:
    push ebx                                             # 004B3A73
    lea ecx, [ebx + 0xde]                                # 004B3A74
    mov eax, 0x157                                       # 004B3A7A
    call _sub_4958C6                                     # 004B3A7F
    pop ebx                                              # 004B3A84
    push ebx                                             # 004B3A85
    lea ecx, [ebx + 0xda]                                # 004B3A86
    mov eax, 0x158                                       # 004B3A8C
    call _sub_4958C6                                     # 004B3A91
    pop ebx                                              # 004B3A96
    test word ptr [ebx + 0xe0], 0x40                     # 004B3A97
    je .L4B3AD7                                          # 004B3AA0
    push ebx                                             # 004B3AA2
    movzx ecx, byte ptr [ebx + 0x118]                    # 004B3AA3
    mov ecx, dword ptr [ecx*4 + _trackExtraObjects]      # 004B3AAA
    mov ax, word ptr [ecx]                               # 004B3AB1
    mov word ptr [__112C828], ax                         # 004B3AB4
    mov ax, word ptr [ebx + 0xdc]                        # 004B3ABA
    mov word ptr [__112C826], ax                         # 004B3AC1
    mov_offset ecx, __112C826                            # 004B3AC7
    mov eax, 0x159                                       # 004B3ACC
    call _sub_4958C6                                     # 004B3AD1
    pop ebx                                              # 004B3AD6
.L4B3AD7:
    push ebx                                             # 004B3AD7
    mov eax, dword ptr [ebp + 0x62]                      # 004B3AD8
    mov dword ptr [__112C826], eax                       # 004B3ADB
    mov_offset ecx, __112C826                            # 004B3AE0
    mov eax, 0x155                                       # 004B3AE5
    call _sub_4958C6                                     # 004B3AEA
    pop ebx                                              # 004B3AEF
    cmp word ptr [ebp + 0x66], 0                         # 004B3AF0
    je .L4B3B16                                          # 004B3AF5
    push ebx                                             # 004B3AF7
    mov ax, word ptr [ebp + 0x66]                        # 004B3AF8
    shr ax, 8                                            # 004B3AFC
    mov word ptr [__112C826], ax                         # 004B3B00
    mov_offset ecx, __112C826                            # 004B3B06
    mov eax, 0x15a                                       # 004B3B0B
    call _sub_4958C6                                     # 004B3B10
    pop ebx                                              # 004B3B15
.L4B3B16:
    pop esi                                              # 004B3B16
    ret                                                  # 004B3B17

    .global _sub_4B3B18
_sub_4B3B18:
    cmp ax, 0xc                                          # 004B3B18
    jne _sub_4B3DDD                                      # 004B3B1C
    movzx ebp, word ptr [esi + 0x40]                     # 004B3B22
    shl ebp, 7                                           # 004B3B26
    add_offset ebp, _things                              # 004B3B29
    mov al, byte ptr [ebp + 0x21]                        # 004B3B2F
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B3B32
    jne _sub_4B3DDD                                      # 004B3B38
    push ebx                                             # 004B3B3E
    call _sub_4B5CC1                                     # 004B3B3F
    pop ebx                                              # 004B3B44
    cmp ebp, -1                                          # 004B3B45
    je _sub_4B3DDD                                       # 004B3B48
    mov ebx, 0x19                                        # 004B3B4E
    ret                                                  # 004B3B53

    .global _sub_4B3B54
_sub_4B3B54:
    movzx ebp, word ptr [esi + 0x40]                     # 004B3B54
    shl ebp, 7                                           # 004B3B58
    add_offset ebp, _things                              # 004B3B5B
    mov bl, byte ptr [ebp + 0x21]                        # 004B3B61
    cmp bl, byte ptr [_scenarioChunk3+36]                # 004B3B64
    jne _sub_4B3DDD                                      # 004B3B6A
    call _sub_4B5CC1                                     # 004B3B70
    cmp ebp, -1                                          # 004B3B75
    je _sub_4B3DDD                                       # 004B3B78
    mov cl, 0x19                                         # 004B3B7E
    msvc_xor dx, dx                                      # 004B3B80
    call _sub_4CC692                                     # 004B3B83
    mov dword ptr [__113614E], ebp                       # 004B3B88
    mov bx, word ptr [esi + 0x40]                        # 004B3B8E
    mov word ptr [__1136156], bx                         # 004B3B92
    mov al, 0x17                                         # 004B3B99
    call _sub_4CB966                                     # 004B3B9B
    push esi                                             # 004B3BA0
    msvc_mov esi, ebp                                    # 004B3BA1
    msvc_xor cx, cx                                      # 004B3BA3
    mov al, 1                                            # 004B3BA6
    call _sub_4B743B                                     # 004B3BA8
    msvc_mov ax, cx                                      # 004B3BAD
    dec ax                                               # 004B3BB0
    mov word ptr [_ui_window_25_widgets+4], ax           # 004B3BB2
    mov ax, word ptr [__523388]                          # 004B3BB8
    sub ax, 0x1e                                         # 004B3BBE
    shl eax, 0x10                                        # 004B3BC2
    mov ax, word ptr [__523386]                          # 004B3BC5
    msvc_mov bx, cx                                      # 004B3BCB
    shr bx, 1                                            # 004B3BCE
    msvc_sub ax, bx                                      # 004B3BD1
    mov bx, 0x3c                                         # 004B3BD4
    shl ebx, 0x10                                        # 004B3BD8
    msvc_mov bx, cx                                      # 004B3BDB
    mov ecx, 0x1219                                      # 004B3BDE
    mov_offset edx, _ui__window_25___widgets___events    # 004B3BE3
    call _sub_4C9F5D                                     # 004B3BE8
    mov_dword_ptr_reg esi, 0x2c, _ui_window_25_widgets   # 004B3BED
    mov ax, word ptr [__523386]                          # 004B3BF4
    mov bx, word ptr [__523388]                          # 004B3BFA
    mov edx, 0                                           # 004B3C01
    call _sub_4C877D                                     # 004B3C06
    pop esi                                              # 004B3C0B
    mov cl, 0x17                                         # 004B3C0C
    mov dx, word ptr [__1136156]                         # 004B3C0E
    call _sub_4C9B56                                     # 004B3C15
    ret                                                  # 004B3C1A

    .global _sub_4B3C1B
_sub_4B3C1B:
    or dword ptr [esi + 0x42], 0x4000                    # 004B3C1B
    ret                                                  # 004B3C22

    .global _sub_4B3C23
_sub_4B3C23:
    test dword ptr [esi + 0x42], 0x4000                  # 004B3C23
    je .L4B3C44                                          # 004B3C2A
    cmp word ptr [esi + 0x840], -1                       # 004B3C2C
    je .L4B3C44                                          # 004B3C34
    mov word ptr [esi + 0x840], 0xffff                   # 004B3C36
    call _sub_4CA4BD                                     # 004B3C3F
.L4B3C44:
    ret                                                  # 004B3C44

    .global _sub_4B3C45
_sub_4B3C45:
    mov ax, word ptr [esi + 0x40]                        # 004B3C45
    cmp ax, word ptr [__1136156]                         # 004B3C49
    jne .L4B3C78                                         # 004B3C50
    push esi                                             # 004B3C52
    mov cl, 0x19                                         # 004B3C53
    msvc_xor dx, dx                                      # 004B3C55
    call _sub_4C9B56                                     # 004B3C58
    pop esi                                              # 004B3C5D
    jne .L4B3C78                                         # 004B3C5E
    mov word ptr [__1136156], 0xffff                     # 004B3C60
    mov dword ptr [__113614E], 0xffffffff                # 004B3C69
    call _sub_4CA4BD                                     # 004B3C73
.L4B3C78:
    inc word ptr [esi + 0x872]                           # 004B3C78
    mov ebp, dword ptr [esi]                             # 004B3C7F
    call dword ptr [ebp + 0x68]                          # 004B3C81
    mov ax, 0x597                                        # 004B3C84
    mov bx, word ptr [esi + 0x40]                        # 004B3C88
    call _sub_4CB966                                     # 004B3C8C
    cmp word ptr [__1136156], -1                         # 004B3C91
    jne .L4B3CB8                                         # 004B3C99
    test dword ptr [esi + 0x1c], 0x800                   # 004B3C9B
    je .L4B3CB8                                          # 004B3CA2
    and dword ptr [esi + 0x1c], 0xfffff7ff               # 004B3CA4
    mov ax, 0xb97                                        # 004B3CAB
    mov bx, word ptr [esi + 0x40]                        # 004B3CAF
    call _sub_4CB966                                     # 004B3CB3
.L4B3CB8:
    test dword ptr [esi + 0x14], 0x400                   # 004B3CB8
    jne .L4B3D03                                         # 004B3CBF
    movzx edi, word ptr [esi + 0x40]                     # 004B3CC1
    shl edi, 7                                           # 004B3CC5
    add_offset edi, _things                              # 004B3CC8
    cmp word ptr [edi + 0x30], -1                        # 004B3CCE
    je .L4B3CDF                                          # 004B3CD3
    test byte ptr [edi + 0x38], 0x10                     # 004B3CD5
    je .L4B3D72                                          # 004B3CD9
.L4B3CDF:
    msvc_mov edi, esi                                    # 004B3CDF
.L4B3CE1:
    add edi, 0x88e                                       # 004B3CE1
    cmp edi, dword ptr [__113D754]                       # 004B3CE7
    jae .L4B3D2A                                         # 004B3CED
    test dword ptr [edi + 0x42], 2                       # 004B3CEF
    jne .L4B3CE1                                         # 004B3CF6
    cmp byte ptr [edi + 0x882], 0x1c                     # 004B3CF8
    je .L4B3CE1                                          # 004B3CFF
    jmp .L4B3D72                                         # 004B3D01
.L4B3D03:
    bt dword ptr [__523368], 3                           # 004B3D03
    jae .L4B3D72                                         # 004B3D0B
    cmp byte ptr [__523392], 0x17                        # 004B3D0D
    jne .L4B3D72                                         # 004B3D14
    mov bp, word ptr [esi + 0x40]                        # 004B3D16
    cmp bp, word ptr [__523390]                          # 004B3D1A
    jne .L4B3D72                                         # 004B3D21
    call _sub_4CE3D6                                     # 004B3D23
    jmp .L4B3D72                                         # 004B3D28
.L4B3D2A:
    movzx ebp, word ptr [esi + 0x40]                     # 004B3D2A
    shl ebp, 7                                           # 004B3D2E
    add_offset ebp, _things                              # 004B3D31
    mov al, byte ptr [ebp + 0x21]                        # 004B3D37
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B3D3A
    jne .L4B3D72                                         # 004B3D40
    mov dx, 0xa                                          # 004B3D42
    bt dword ptr [__523368], 3                           # 004B3D46
    jae _sub_4B28E2                                      # 004B3D4E
    cmp byte ptr [__523392], 0x17                        # 004B3D54
    jne _sub_4B28E2                                      # 004B3D5B
    mov bp, word ptr [esi + 0x40]                        # 004B3D61
    cmp bp, word ptr [__523390]                          # 004B3D65
    jne _sub_4B28E2                                      # 004B3D6C
.L4B3D72:
    ret                                                  # 004B3D72

    .global _sub_4B3D73
_sub_4B3D73:
    call _sub_4B1E94                                     # 004B3D73
    mov word ptr [esi + 0x38], 0xc0                      # 004B3D78
    mov word ptr [esi + 0x3c], 0x94                      # 004B3D7E
    mov word ptr [esi + 0x3a], 0x190                     # 004B3D84
    mov word ptr [esi + 0x3e], 0x1b8                     # 004B3D8A
    mov ax, word ptr [esi + 0x38]                        # 004B3D90
    cmp ax, word ptr [esi + 0x34]                        # 004B3D94
    jbe .L4B3DA3                                         # 004B3D98
    mov word ptr [esi + 0x34], ax                        # 004B3D9A
    call _sub_4CA4BD                                     # 004B3D9E
.L4B3DA3:
    mov ax, word ptr [esi + 0x3a]                        # 004B3DA3
    cmp ax, word ptr [esi + 0x34]                        # 004B3DA7
    jae .L4B3DB6                                         # 004B3DAB
    call _sub_4CA4BD                                     # 004B3DAD
    mov word ptr [esi + 0x34], ax                        # 004B3DB2
.L4B3DB6:
    mov ax, word ptr [esi + 0x3c]                        # 004B3DB6
    cmp ax, word ptr [esi + 0x36]                        # 004B3DBA
    jbe .L4B3DC9                                         # 004B3DBE
    mov word ptr [esi + 0x36], ax                        # 004B3DC0
    call _sub_4CA4BD                                     # 004B3DC4
.L4B3DC9:
    mov ax, word ptr [esi + 0x3e]                        # 004B3DC9
    cmp ax, word ptr [esi + 0x36]                        # 004B3DCD
    jae .L4B3DDC                                         # 004B3DD1
    call _sub_4CA4BD                                     # 004B3DD3
    mov word ptr [esi + 0x36], ax                        # 004B3DD8
.L4B3DDC:
    ret                                                  # 004B3DDC

    .global _sub_4B3DDD
_sub_4B3DDD:
    ret                                                  # 004B3DDD

    .global _sub_4B3DDE
_sub_4B3DDE:
    movzx edx, word ptr [esi + 0x870]                    # 004B3DDE
    mov eax, dword ptr [edx*4 + __5002BC]                # 004B3DE5
    cmp eax, dword ptr [esi + 0x2c]                      # 004B3DEC
    je .L4B3DF9                                          # 004B3DEF
    mov dword ptr [esi + 0x2c], eax                      # 004B3DF1
    call _sub_4CA17F                                     # 004B3DF4
.L4B3DF9:
    mov edx, dword ptr [esi + 0x1c]                      # 004B3DF9
    and edx, 0xfffffe0f                                  # 004B3DFC
    movzx ecx, word ptr [esi + 0x870]                    # 004B3E02
    add ecx, 4                                           # 004B3E09
    bts edx, ecx                                         # 004B3E0C
    mov dword ptr [esi + 0x1c], edx                      # 004B3E0F
    movzx ebx, word ptr [esi + 0x40]                     # 004B3E12
    shl ebx, 7                                           # 004B3E16
    add_offset ebx, _things                              # 004B3E19
    mov ax, word ptr [ebx + 0x44]                        # 004B3E1F
    mov cx, word ptr [ebx + 0x22]                        # 004B3E23
    mov word ptr [__112C828], ax                         # 004B3E27
    mov word ptr [__112C826], cx                         # 004B3E2D
    mov ax, word ptr [esi + 0x34]                        # 004B3E34
    mov cx, word ptr [esi + 0x36]                        # 004B3E38
    dec ax                                               # 004B3E3C
    dec cx                                               # 004B3E3E
    mov word ptr [_ui_vehicle___widgets_2+4], ax         # 004B3E40
    mov word ptr [_ui_vehicle___widgets_2+8], cx         # 004B3E46
    mov word ptr [_ui_vehicle___widgets_2+52], ax        # 004B3E4D
    mov word ptr [_ui_vehicle___widgets_2+56], cx        # 004B3E53
    dec ax                                               # 004B3E5A
    mov word ptr [_ui_vehicle___widgets_2+20], ax        # 004B3E5C
    sub ax, 0xd                                          # 004B3E62
    mov word ptr [_ui_vehicle___widgets_2+34], ax        # 004B3E66
    add ax, 0xc                                          # 004B3E6C
    mov word ptr [_ui_vehicle___widgets_2+36], ax        # 004B3E70
    sub ax, 0x17                                         # 004B3E76
    sub cx, 0xd                                          # 004B3E7A
    mov word ptr [_ui_vehicle___widgets_2+164], ax       # 004B3E7E
    mov word ptr [_ui_vehicle___widgets_2+168], cx       # 004B3E84
    mov ax, word ptr [esi + 0x34]                        # 004B3E8B
    sub ax, 2                                            # 004B3E8F
    mov word ptr [_ui_vehicle___widgets_2+148], ax       # 004B3E93
    sub ax, 0x17                                         # 004B3E99
    mov word ptr [_ui_vehicle___widgets_2+146], ax       # 004B3E9D
    mov byte ptr [_ui_vehicle___widgets_2+144], 9        # 004B3EA3
    mov al, byte ptr [ebx + 0x21]                        # 004B3EAA
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B3EAD
    jne .L4B3EF8                                         # 004B3EB3
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B3EB5
    shl ebx, 7                                           # 004B3EB9
    add_offset ebx, _things                              # 004B3EBC
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B3EC2
    shl ebx, 7                                           # 004B3EC6
    add_offset ebx, _things                              # 004B3EC9
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B3ECF
    shl ebx, 7                                           # 004B3ED3
    add_offset ebx, _things                              # 004B3ED6
    cmp byte ptr [ebx + 1], 6                            # 004B3EDC
    je .L4B3EF8                                          # 004B3EE0
    movzx ebx, word ptr [ebx + 0x40]                     # 004B3EE2
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004B3EE6
    test word ptr [ebx + 0xe0], 0x4000                   # 004B3EED
    jne .L4B3F07                                         # 004B3EF6
.L4B3EF8:
    mov byte ptr [_ui_vehicle___widgets_2+144], 0        # 004B3EF8
    add word ptr [_ui_vehicle___widgets_2+164], 0x16     # 004B3EFF
.L4B3F07:
    call _sub_4B5ECD                                     # 004B3F07
    ret                                                  # 004B3F0C

    .global _sub_4B3F0D
_sub_4B3F0D:
    call _sub_4CA4DF                                     # 004B3F0D
    call _sub_4B5F0D                                     # 004B3F12
    push esi                                             # 004B3F17
    movzx esi, word ptr [esi + 0x40]                     # 004B3F18
    shl esi, 7                                           # 004B3F1C
    add_offset esi, _things                              # 004B3F1F
    call _sub_4B6658                                     # 004B3F25
    mov word ptr [__112C826], bx                         # 004B3F2A
    mov esi, dword ptr [esp]                             # 004B3F31
    mov cx, word ptr [esi + 0x30]                        # 004B3F34
    mov dx, word ptr [esi + 0x32]                        # 004B3F38
    add cx, 3                                            # 004B3F3C
    add dx, word ptr [esi + 0x36]                        # 004B3F40
    sub dx, 0xd                                          # 004B3F44
    mov bp, word ptr [esi + 0x34]                        # 004B3F48
    sub bp, 0xf                                          # 004B3F4C
    mov bx, 0x502                                        # 004B3F50
    mov_offset esi, __112C826                            # 004B3F54
    msvc_xor al, al                                      # 004B3F59
    call _sub_494BBF                                     # 004B3F5B
    pop esi                                              # 004B3F60
    ret                                                  # 004B3F61

    .global _sub_4B3F62
_sub_4B3F62:
    push esi                                             # 004B3F62
    movzx ebp, byte ptr [esi + 0x887]                    # 004B3F63
    movzx ebp, byte ptr [ebp*8 + __1136BA4]              # 004B3F6A
    msvc_mov eax, ebp                                    # 004B3F72
    shl eax, 8                                           # 004B3F74
    msvc_or ebp, eax                                     # 004B3F77
    shl eax, 8                                           # 004B3F79
    msvc_or ebp, eax                                     # 004B3F7C
    shl eax, 8                                           # 004B3F7E
    msvc_or ebp, eax                                     # 004B3F81
    call _sub_447485                                     # 004B3F83
    movzx esi, word ptr [esi + 0x40]                     # 004B3F88
    shl esi, 7                                           # 004B3F8C
    add_offset esi, _things                              # 004B3F8F
    movzx esi, word ptr [esi + 0x3a]                     # 004B3F95
    shl esi, 7                                           # 004B3F99
    add_offset esi, _things                              # 004B3F9C
    movzx esi, word ptr [esi + 0x3a]                     # 004B3FA2
    shl esi, 7                                           # 004B3FA6
    add_offset esi, _things                              # 004B3FA9
    movzx esi, word ptr [esi + 0x3a]                     # 004B3FAF
    shl esi, 7                                           # 004B3FB3
    add_offset esi, _things                              # 004B3FB6
    msvc_xor dx, dx                                      # 004B3FBC
.L4B3FBF:
    cmp byte ptr [esi + 1], 6                            # 004B3FBF
    je .L4B41BB                                          # 004B3FC3
    mov ebx, dword ptr [esp]                             # 004B3FC9
    mov ax, 0x1c7                                        # 004B3FCC
    mov cx, word ptr [ebx + 0x840]                       # 004B3FD0
    cmp cx, word ptr [esi + 0xa]                         # 004B3FD7
    jne .L4B4002                                         # 004B3FDB
    push edx                                             # 004B3FDD
    push esi                                             # 004B3FDE
    msvc_mov cx, dx                                      # 004B3FDF
    add dx, word ptr [ebx + 0x83e]                       # 004B3FE2
    dec dx                                               # 004B3FE9
    msvc_xor ax, ax                                      # 004B3FEB
    mov bx, word ptr [ebx + 0x34]                        # 004B3FEE
    mov ebp, 0x2000030                                   # 004B3FF2
    call _sub_4474BA                                     # 004B3FF7
    pop esi                                              # 004B3FFC
    pop edx                                              # 004B3FFD
    mov ax, 0x1c9                                        # 004B3FFE
.L4B4002:
    push eax                                             # 004B4002
    push esi                                             # 004B4003
    mov al, 1                                            # 004B4004
    msvc_xor cx, cx                                      # 004B4006
    call _sub_4B743B                                     # 004B4009
    pop esi                                              # 004B400E
    push esi                                             # 004B400F
    mov ebp, dword ptr [esp + 8]                         # 004B4010
    mov ax, word ptr [ebp + 0x83e]                       # 004B4014
    sub ax, 0x16                                         # 004B401B
    shr ax, 1                                            # 004B401F
    msvc_add dx, ax                                      # 004B4022
    neg cx                                               # 004B4025
    add cx, 0x18                                         # 004B4028
    msvc_xor al, al                                      # 004B402C
    call _sub_4B743B                                     # 004B402E
    pop ebp                                              # 004B4033
    pop eax                                              # 004B4034
    add cx, 2                                            # 004B4035
    movzx ebx, word ptr [ebp + 0x3a]                     # 004B4039
    shl ebx, 7                                           # 004B403D
    add_offset ebx, _things                              # 004B4040
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B4046
    shl ebx, 7                                           # 004B404A
    add_offset ebx, _things                              # 004B404D
    cmp byte ptr [ebx + 0x4c], 0xff                      # 004B4053
    je .L4B41AC                                          # 004B4057
    push eax                                             # 004B405D
    push edx                                             # 004B405E
    push esi                                             # 004B405F
    mov eax, dword ptr [esp + 0xc]                       # 004B4060
    mov ax, word ptr [eax + 0x83e]                       # 004B4064
    shr ax, 1                                            # 004B406B
    msvc_add dx, ax                                      # 004B406E
    mov eax, dword ptr [esp + 0xc]                       # 004B4071
    mov ax, word ptr [eax + 0x83e]                       # 004B4075
    sub ax, 0x16                                         # 004B407C
    shr ax, 1                                            # 004B4080
    msvc_sub dx, ax                                      # 004B4083
    sub dx, 0xa                                          # 004B4086
    mov al, byte ptr [ebp + 0x51]                        # 004B408A
    or al, byte ptr [ebx + 0x51]                         # 004B408D
    jne .L4B40B5                                         # 004B4090
    mov word ptr [__112C826], 0x493                      # 004B4092
    add dx, 5                                            # 004B409B
    mov_offset esi, __112C826                            # 004B409F
    mov bx, word ptr [esp + 8]                           # 004B40A4
    msvc_xor al, al                                      # 004B40A9
    call _sub_494B3F                                     # 004B40AB
    msvc_jmp .L4B41A9                                    # 004B40B0
.L4B40B5:
    msvc_xchg ebp, ebx                                   # 004B40B5
    cmp byte ptr [ebp + 0x51], 0                         # 004B40B7
    je .L4B40C3                                          # 004B40BB
    cmp byte ptr [ebx + 0x51], 0                         # 004B40BD
    jne .L4B40C7                                         # 004B40C1
.L4B40C3:
    add dx, 5                                            # 004B40C3
.L4B40C7:
    push ecx                                             # 004B40C7
    push ebx                                             # 004B40C8
    movzx eax, byte ptr [ebp + 0x51]                     # 004B40C9
    msvc_or eax, eax                                     # 004B40CD
    je .L4B4136                                          # 004B40CF
    mov dword ptr [__112C82A], eax                       # 004B40D1
    movzx ebx, byte ptr [ebp + 0x4c]                     # 004B40D6
    mov ebx, dword ptr [ebx*4 + _cargoObjects]           # 004B40DA
    cmp eax, 1                                           # 004B40E1
    mov ax, word ptr [ebx + 8]                           # 004B40E4
    je .L4B40EE                                          # 004B40E8
    mov ax, word ptr [ebx + 0xa]                         # 004B40EA
.L4B40EE:
    mov word ptr [__112C828], ax                         # 004B40EE
    movzx ebx, word ptr [ebp + 0x4e]                     # 004B40F4
    imul ebx, ebx, 0x3d2                                 # 004B40F8
    mov ax, word ptr [ebx + _stations]                   # 004B40FE
    mov word ptr [__112C82E], ax                         # 004B4105
    mov ax, word ptr [ebx + _stations+44]                # 004B410B
    mov word ptr [__112C830], ax                         # 004B4112
    msvc_xor al, al                                      # 004B4118
    mov word ptr [__112C826], 0x492                      # 004B411A
    mov bx, word ptr [esp + 0x10]                        # 004B4123
    mov_offset esi, __112C826                            # 004B4128
    call _sub_494B3F                                     # 004B412D
    add dx, 0xa                                          # 004B4132
.L4B4136:
    pop ebp                                              # 004B4136
    pop ecx                                              # 004B4137
    push ecx                                             # 004B4138
    push ebp                                             # 004B4139
    movzx eax, byte ptr [ebp + 0x51]                     # 004B413A
    msvc_or eax, eax                                     # 004B413E
    je .L4B41A7                                          # 004B4140
    mov dword ptr [__112C82A], eax                       # 004B4142
    movzx ebx, byte ptr [ebp + 0x4c]                     # 004B4147
    mov ebx, dword ptr [ebx*4 + _cargoObjects]           # 004B414B
    cmp eax, 1                                           # 004B4152
    mov ax, word ptr [ebx + 8]                           # 004B4155
    je .L4B415F                                          # 004B4159
    mov ax, word ptr [ebx + 0xa]                         # 004B415B
.L4B415F:
    mov word ptr [__112C828], ax                         # 004B415F
    movzx ebx, word ptr [ebp + 0x4e]                     # 004B4165
    imul ebx, ebx, 0x3d2                                 # 004B4169
    mov ax, word ptr [ebx + _stations]                   # 004B416F
    mov word ptr [__112C82E], ax                         # 004B4176
    mov ax, word ptr [ebx + _stations+44]                # 004B417C
    mov word ptr [__112C830], ax                         # 004B4183
    msvc_xor al, al                                      # 004B4189
    mov word ptr [__112C826], 0x492                      # 004B418B
    mov bx, word ptr [esp + 0x10]                        # 004B4194
    mov_offset esi, __112C826                            # 004B4199
    call _sub_494B3F                                     # 004B419E
    add dx, 0xa                                          # 004B41A3
.L4B41A7:
    pop ebp                                              # 004B41A7
    pop ecx                                              # 004B41A8
.L4B41A9:
    pop esi                                              # 004B41A9
    pop edx                                              # 004B41AA
    pop eax                                              # 004B41AB
.L4B41AC:
    mov ebx, dword ptr [esp]                             # 004B41AC
    add dx, word ptr [ebx + 0x83e]                       # 004B41AF
    msvc_jmp .L4B3FBF                                    # 004B41B6
.L4B41BB:
    pop esi                                              # 004B41BB
    ret                                                  # 004B41BC

    .global _sub_4B41BD
_sub_4B41BD:
    cmp dx, 2                                            # 004B41BD
    je _sub_4CC6EA                                       # 004B41C1
    cmp dx, 4                                            # 004B41C7
    jb .L4B41D7                                          # 004B41CB
    cmp dx, 8                                            # 004B41CD
    jbe _sub_4B2566                                      # 004B41D1
.L4B41D7:
    cmp dx, 1                                            # 004B41D7
    je _sub_4B2680                                       # 004B41DB
    ret                                                  # 004B41E1

    .global _sub_4B41E2
_sub_4B41E2:
    cmp dx, 9                                            # 004B41E2
    je _sub_4B41FF                                       # 004B41E6
    ret                                                  # 004B41E8

    .global _sub_4B41E9
_sub_4B41E9:
    cmp dx, 9                                            # 004B41E9
    je _sub_4B4304                                       # 004B41ED
    ret                                                  # 004B41F3

    .global _sub_4B41F4
_sub_4B41F4:
    cmp dx, 1                                            # 004B41F4
    je _sub_4B26C0                                       # 004B41F8
    ret                                                  # 004B41FE

    .global _sub_4B41FF
_sub_4B41FF:
    push edi                                             # 004B41FF
    movzx edi, word ptr [esi + 0x40]                     # 004B4200
    shl edi, 7                                           # 004B4204
    add_offset edi, _things                              # 004B4207
    movzx edi, word ptr [edi + 0x3a]                     # 004B420D
    shl edi, 7                                           # 004B4211
    add_offset edi, _things                              # 004B4214
    movzx edi, word ptr [edi + 0x3a]                     # 004B421A
    shl edi, 7                                           # 004B421E
    add_offset edi, _things                              # 004B4221
    movzx edi, word ptr [edi + 0x3a]                     # 004B4227
    shl edi, 7                                           # 004B422B
    add_offset edi, _things                              # 004B422E
    movzx ecx, word ptr [edi + 0x40]                     # 004B4234
    movzx edi, word ptr [edi + 0x3a]                     # 004B4238
    shl edi, 7                                           # 004B423C
    add_offset edi, _things                              # 004B423F
    movzx edi, word ptr [edi + 0x3a]                     # 004B4245
    shl edi, 7                                           # 004B4249
    add_offset edi, _things                              # 004B424C
    mov ecx, dword ptr [ecx*4 + _vehicleObjects]         # 004B4252
    movzx eax, byte ptr [ecx + 0xe2]                     # 004B4259
    bsf ebx, dword ptr [ecx + 0xe4]                      # 004B4260
    msvc_xor ecx, ecx                                    # 004B4267
    msvc_xor ebp, ebp                                    # 004B4269
.L4B426B:
    mov edx, dword ptr [ecx*4 + _cargoObjects]           # 004B426B
    cmp edx, -1                                          # 004B4272
    je .L4B42BF                                          # 004B4275
    test byte ptr [edx + 0x12], 2                        # 004B4277
    je .L4B42BF                                          # 004B427B
    push eax                                             # 004B427D
    push ebx                                             # 004B427E
    push ecx                                             # 004B427F
    push edx                                             # 004B4280
    call _sub_42F6B6                                     # 004B4281
    mov dword ptr [ebp*8 + __113D8A2], eax               # 004B4286
    pop edx                                              # 004B428D
    pop ecx                                              # 004B428E
    pop ebx                                              # 004B428F
    pop eax                                              # 004B4290
    mov word ptr [ebp*8 + __113D8A6], cx                 # 004B4291
    mov dx, word ptr [edx + 0xa]                         # 004B4299
    mov word ptr [ebp*8 + __113D8A0], dx                 # 004B429D
    mov word ptr [ebp*2 + __113D850], 0x1a5              # 004B42A5
    cmp cl, byte ptr [edi + 0x4c]                        # 004B42AF
    jne .L4B42BE                                         # 004B42B2
    mov word ptr [ebp*2 + __113D850], 0x1a6              # 004B42B4
.L4B42BE:
    inc ebp                                              # 004B42BE
.L4B42BF:
    inc ecx                                              # 004B42BF
    cmp ecx, 0x20                                        # 004B42C0
    jb .L4B426B                                          # 004B42C3
    msvc_mov bx, bp                                      # 004B42C5
    pop edi                                              # 004B42C8
    push esi                                             # 004B42C9
    mov al, byte ptr [esi + 0x887]                       # 004B42CA
    mov cx, word ptr [edi + 2]                           # 004B42D0
    mov bp, word ptr [edi + 4]                           # 004B42D4
    msvc_sub bp, cx                                      # 004B42D8
    inc bp                                               # 004B42DB
    mov dx, word ptr [edi + 6]                           # 004B42DD
    mov di, word ptr [edi + 8]                           # 004B42E1
    msvc_sub di, dx                                      # 004B42E5
    inc di                                               # 004B42E8
    add cx, word ptr [esi + 0x30]                        # 004B42EA
    add dx, word ptr [esi + 0x32]                        # 004B42EE
    call _sub_4CCA6D                                     # 004B42F2
    msvc_mov edi, esi                                    # 004B42F7
    pop esi                                              # 004B42F9
    mov word ptr [__113D84E], 0                          # 004B42FA
    ret                                                  # 004B4303

    .global _sub_4B4304
_sub_4B4304:
    movzx eax, word ptr [__113D84E]                      # 004B4304
    cmp ax, -1                                           # 004B430B
    je _sub_4B468B                                       # 004B430F
    mov dx, word ptr [eax*8 + __113D8A6]                 # 004B4315
    push esi                                             # 004B431D
    mov di, word ptr [esi + 0x40]                        # 004B431E
    mov bl, 1                                            # 004B4322
    mov word ptr [__9C68E8], 0x5fd                       # 004B4324
    mov esi, 0x40                                        # 004B432D
    call _sub_431315                                     # 004B4332
    pop esi                                              # 004B4337
    ret                                                  # 004B4338

    .global _sub_4B4339
_sub_4B4339:
    mov word ptr [__112C826], 0xc7                       # 004B4339
    movzx ebx, word ptr [esi + 0x40]                     # 004B4342
    shl ebx, 7                                           # 004B4346
    add_offset ebx, _things                              # 004B4349
    movzx edx, byte ptr [ebx + 0x5e]                     # 004B434F
    add dx, 0x4fc                                        # 004B4353
    mov word ptr [__112C828], dx                         # 004B4358
    ret                                                  # 004B435F

    .global _sub_4B4360
_sub_4B4360:
    movzx ebp, word ptr [esi + 0x40]                     # 004B4360
    shl ebp, 7                                           # 004B4364
    add_offset ebp, _things                              # 004B4367
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B436D
    shl ebp, 7                                           # 004B4371
    add_offset ebp, _things                              # 004B4374
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B437A
    shl ebp, 7                                           # 004B437E
    add_offset ebp, _things                              # 004B4381
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B4387
    shl ebp, 7                                           # 004B438B
    add_offset ebp, _things                              # 004B438E
    msvc_xor edx, edx                                    # 004B4394
    cmp byte ptr [ebp + 1], 6                            # 004B4396
    je .L4B43F9                                          # 004B439A
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B439C
    shl ebp, 7                                           # 004B43A0
    add_offset ebp, _things                              # 004B43A3
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B43A9
    shl ebp, 7                                           # 004B43AD
    add_offset ebp, _things                              # 004B43B0
.L4B43B6:
    inc edx                                              # 004B43B6
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B43B7
    shl ebp, 7                                           # 004B43BB
    add_offset ebp, _things                              # 004B43BE
.L4B43C4:
    cmp byte ptr [ebp + 1], 6                            # 004B43C4
    je .L4B43F9                                          # 004B43C8
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B43CA
    shl ebp, 7                                           # 004B43CE
    add_offset ebp, _things                              # 004B43D1
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B43D7
    shl ebp, 7                                           # 004B43DB
    add_offset ebp, _things                              # 004B43DE
    cmp byte ptr [ebp + 1], 5                            # 004B43E4
    jne .L4B43B6                                         # 004B43E8
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B43EA
    shl ebp, 7                                           # 004B43EE
    add_offset ebp, _things                              # 004B43F1
    jmp .L4B43C4                                         # 004B43F7
.L4B43F9:
    movzx ebp, word ptr [esi + 0x83e]                    # 004B43F9
    imul edx, ebp                                        # 004B4400
    ret                                                  # 004B4403

    .global _sub_4B4404
_sub_4B4404:
    mov word ptr [__52338A], 0x7d0                       # 004B4404
    and dword ptr [esi + 0x42], 0xffffbfff               # 004B440D
    call _sub_4B5CC1                                     # 004B4414
    mov ax, 0xffff                                       # 004B4419
    mov bx, 0xffff                                       # 004B441D
    cmp ebp, -1                                          # 004B4421
    je .L4B442E                                          # 004B4424
    mov ax, 0x151                                        # 004B4426
    mov bx, word ptr [ebp + 0xa]                         # 004B442A
.L4B442E:
    cmp bx, word ptr [esi + 0x840]                       # 004B442E
    je .L4B4443                                          # 004B4435
    mov word ptr [esi + 0x840], bx                       # 004B4437
    call _sub_4CA4BD                                     # 004B443E
.L4B4443:
    cmp byte ptr [_str_337], 0                           # 004B4443
    je .L4B4462                                          # 004B444A
    cmp ax, word ptr [_ui_vehicle___widgets_2+174]       # 004B444C
    jne .L4B4462                                         # 004B4453
    cmp bx, word ptr [esi + 0x85c]                       # 004B4455
    je _sub_4B468B                                       # 004B445C
.L4B4462:
    mov word ptr [_ui_vehicle___widgets_2+174], ax       # 004B4462
    mov word ptr [esi + 0x85c], bx                       # 004B4468
    call _sub_4C87B5                                     # 004B446F
    cmp bx, -1                                           # 004B4474
    je _sub_4B468B                                       # 004B4478
    mov byte ptr [__52336E], 1                           # 004B447E
    movzx ebx, word ptr [ebp + 0x40]                     # 004B4485
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004B4489
    push esi                                             # 004B4490
    mov_offset edi, _str_337                             # 004B4491
    mov eax, 0x494                                       # 004B4496
    lea ecx, [ebx]                                       # 004B449B
    call _sub_4958C6                                     # 004B449D
    movzx ebx, word ptr [ebp + 0x3a]                     # 004B44A2
    shl ebx, 7                                           # 004B44A6
    add_offset ebx, _things                              # 004B44A9
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B44AF
    shl ebx, 7                                           # 004B44B3
    add_offset ebx, _things                              # 004B44B6
    cmp byte ptr [ebx + 0x4c], 0xff                      # 004B44BC
    je .L4B45DA                                          # 004B44C0
    movzx eax, byte ptr [ebx + 0x4d]                     # 004B44C6
    mov dword ptr [__112C828], eax                       # 004B44CA
    mov edx, dword ptr [ebx + 0x48]                      # 004B44CF
    movzx eax, byte ptr [ebx + 0x4c]                     # 004B44D2
    btr edx, eax                                         # 004B44D6
    mov eax, dword ptr [eax*4 + _cargoObjects]           # 004B44D9
    mov bx, word ptr [eax + 8]                           # 004B44E0
    cmp dword ptr [__112C828], 1                         # 004B44E4
    je .L4B44F1                                          # 004B44EB
    mov bx, word ptr [eax + 0xa]                         # 004B44ED
.L4B44F1:
    mov word ptr [__112C826], bx                         # 004B44F1
    mov_offset ecx, __112C826                            # 004B44F8
    mov eax, 0x495                                       # 004B44FD
    push edx                                             # 004B4502
    call _sub_4958C6                                     # 004B4503
    pop edx                                              # 004B4508
    msvc_or edx, edx                                     # 004B4509
    je .L4B454B                                          # 004B450B
    mov word ptr [edi], 0x2820                           # 004B450D
    add edi, 2                                           # 004B4512
.L4B4515:
    bsf eax, edx                                         # 004B4515
    btr edx, eax                                         # 004B4518
    mov eax, dword ptr [eax*4 + _cargoObjects]           # 004B451B
    mov bx, word ptr [eax]                               # 004B4522
    mov word ptr [__112C826], bx                         # 004B4525
    mov_offset ecx, __112C826                            # 004B452C
    mov eax, 0x4ed                                       # 004B4531
    push edx                                             # 004B4536
    call _sub_4958C6                                     # 004B4537
    pop edx                                              # 004B453C
    mov byte ptr [edi], 0x20                             # 004B453D
    inc edi                                              # 004B4540
    msvc_or edx, edx                                     # 004B4541
    jne .L4B4515                                         # 004B4543
    mov word ptr [edi - 1], 0x29                         # 004B4545
.L4B454B:
    cmp byte ptr [ebp + 0x4c], 0xff                      # 004B454B
    je .L4B45DA                                          # 004B454F
    movzx eax, byte ptr [ebp + 0x4d]                     # 004B4555
    mov dword ptr [__112C828], eax                       # 004B4559
    mov edx, dword ptr [ebp + 0x48]                      # 004B455E
    movzx eax, byte ptr [ebp + 0x4c]                     # 004B4561
    btr edx, eax                                         # 004B4565
    mov eax, dword ptr [eax*4 + _cargoObjects]           # 004B4568
    mov bx, word ptr [eax + 8]                           # 004B456F
    cmp dword ptr [__112C828], 1                         # 004B4573
    je .L4B4580                                          # 004B457A
    mov bx, word ptr [eax + 0xa]                         # 004B457C
.L4B4580:
    mov word ptr [__112C826], bx                         # 004B4580
    mov_offset ecx, __112C826                            # 004B4587
    mov eax, 0x496                                       # 004B458C
    push edx                                             # 004B4591
    call _sub_4958C6                                     # 004B4592
    pop edx                                              # 004B4597
    msvc_or edx, edx                                     # 004B4598
    je .L4B45DA                                          # 004B459A
    mov word ptr [edi], 0x2820                           # 004B459C
    add edi, 2                                           # 004B45A1
.L4B45A4:
    bsf eax, edx                                         # 004B45A4
    btr edx, eax                                         # 004B45A7
    mov eax, dword ptr [eax*4 + _cargoObjects]           # 004B45AA
    mov bx, word ptr [eax]                               # 004B45B1
    mov word ptr [__112C826], bx                         # 004B45B4
    mov_offset ecx, __112C826                            # 004B45BB
    mov eax, 0x4ed                                       # 004B45C0
    push edx                                             # 004B45C5
    call _sub_4958C6                                     # 004B45C6
    pop edx                                              # 004B45CB
    mov byte ptr [edi], 0x20                             # 004B45CC
    inc edi                                              # 004B45CF
    msvc_or edx, edx                                     # 004B45D0
    jne .L4B45A4                                         # 004B45D2
    mov word ptr [edi - 1], 0x29                         # 004B45D4
.L4B45DA:
    pop esi                                              # 004B45DA
    ret                                                  # 004B45DB

    .global _sub_4B45DC
_sub_4B45DC:
    ret                                                  # 004B45DC

    .global _sub_4B45DD
_sub_4B45DD:
    or dword ptr [esi + 0x42], 0x4000                    # 004B45DD
    ret                                                  # 004B45E4

    .global _sub_4B45E5
_sub_4B45E5:
    test dword ptr [esi + 0x42], 0x4000                  # 004B45E5
    je .L4B4606                                          # 004B45EC
    cmp word ptr [esi + 0x840], -1                       # 004B45EE
    je .L4B4606                                          # 004B45F6
    mov word ptr [esi + 0x840], 0xffff                   # 004B45F8
    call _sub_4CA4BD                                     # 004B4601
.L4B4606:
    ret                                                  # 004B4606

    .global _sub_4B4607
_sub_4B4607:
    inc word ptr [esi + 0x872]                           # 004B4607
    mov ebp, dword ptr [esi]                             # 004B460E
    call dword ptr [ebp + 0x68]                          # 004B4610
    mov ax, 0x697                                        # 004B4613
    mov bx, word ptr [esi + 0x40]                        # 004B4617
    call _sub_4CB966                                     # 004B461B
    ret                                                  # 004B4620

    .global _sub_4B4621
_sub_4B4621:
    call _sub_4B1E94                                     # 004B4621
    mov word ptr [esi + 0x38], 0xc0                      # 004B4626
    mov word ptr [esi + 0x3c], 0x8e                      # 004B462C
    mov word ptr [esi + 0x3a], 0x190                     # 004B4632
    mov word ptr [esi + 0x3e], 0x1b8                     # 004B4638
    mov ax, word ptr [esi + 0x38]                        # 004B463E
    cmp ax, word ptr [esi + 0x34]                        # 004B4642
    jbe .L4B4651                                         # 004B4646
    mov word ptr [esi + 0x34], ax                        # 004B4648
    call _sub_4CA4BD                                     # 004B464C
.L4B4651:
    mov ax, word ptr [esi + 0x3a]                        # 004B4651
    cmp ax, word ptr [esi + 0x34]                        # 004B4655
    jae .L4B4664                                         # 004B4659
    call _sub_4CA4BD                                     # 004B465B
    mov word ptr [esi + 0x34], ax                        # 004B4660
.L4B4664:
    mov ax, word ptr [esi + 0x3c]                        # 004B4664
    cmp ax, word ptr [esi + 0x36]                        # 004B4668
    jbe .L4B4677                                         # 004B466C
    mov word ptr [esi + 0x36], ax                        # 004B466E
    call _sub_4CA4BD                                     # 004B4672
.L4B4677:
    mov ax, word ptr [esi + 0x3e]                        # 004B4677
    cmp ax, word ptr [esi + 0x36]                        # 004B467B
    jae .L4B468A                                         # 004B467F
    call _sub_4CA4BD                                     # 004B4681
    mov word ptr [esi + 0x36], ax                        # 004B4686
.L4B468A:
    ret                                                  # 004B468A

    .global _sub_4B468B
_sub_4B468B:
    ret                                                  # 004B468B

    .global _sub_4B468C
_sub_4B468C:
    movzx edx, word ptr [esi + 0x870]                    # 004B468C
    mov eax, dword ptr [edx*4 + __5002BC]                # 004B4693
    cmp eax, dword ptr [esi + 0x2c]                      # 004B469A
    je .L4B46A7                                          # 004B469D
    mov dword ptr [esi + 0x2c], eax                      # 004B469F
    call _sub_4CA17F                                     # 004B46A2
.L4B46A7:
    mov edx, dword ptr [esi + 0x1c]                      # 004B46A7
    and edx, 0xfffffe0f                                  # 004B46AA
    movzx ecx, word ptr [esi + 0x870]                    # 004B46B0
    add ecx, 4                                           # 004B46B7
    bts edx, ecx                                         # 004B46BA
    mov dword ptr [esi + 0x1c], edx                      # 004B46BD
    movzx ebx, word ptr [esi + 0x40]                     # 004B46C0
    shl ebx, 7                                           # 004B46C4
    add_offset ebx, _things                              # 004B46C7
    mov ax, word ptr [ebx + 0x44]                        # 004B46CD
    mov cx, word ptr [ebx + 0x22]                        # 004B46D1
    mov word ptr [__112C828], ax                         # 004B46D5
    mov word ptr [__112C826], cx                         # 004B46DB
    mov word ptr [_ui_vehicle___widgets_4+174], 0x4d5    # 004B46E2
    bt dword ptr [__523368], 3                           # 004B46EB
    jae .L4B4714                                         # 004B46F3
    cmp byte ptr [__523392], 0x17                        # 004B46F5
    jne .L4B4714                                         # 004B46FC
    mov bp, word ptr [esi + 0x40]                        # 004B46FE
    cmp bp, word ptr [__523390]                          # 004B4702
    je .L4B4714                                          # 004B4709
    mov word ptr [_ui_vehicle___widgets_4+174], 0x4d6    # 004B470B
.L4B4714:
    mov ax, word ptr [esi + 0x34]                        # 004B4714
    mov cx, word ptr [esi + 0x36]                        # 004B4718
    dec ax                                               # 004B471C
    dec cx                                               # 004B471E
    mov word ptr [_ui_vehicle___widgets_4+4], ax         # 004B4720
    mov word ptr [_ui_vehicle___widgets_4+8], cx         # 004B4726
    mov word ptr [_ui_vehicle___widgets_4+52], ax        # 004B472D
    mov word ptr [_ui_vehicle___widgets_4+56], cx        # 004B4733
    dec ax                                               # 004B473A
    mov word ptr [_ui_vehicle___widgets_4+20], ax        # 004B473C
    sub ax, 0xd                                          # 004B4742
    mov word ptr [_ui_vehicle___widgets_4+34], ax        # 004B4746
    add ax, 0xc                                          # 004B474C
    mov word ptr [_ui_vehicle___widgets_4+36], ax        # 004B4750
    sub ax, 0x17                                         # 004B4756
    sub cx, 0xd                                          # 004B475A
    mov word ptr [_ui_vehicle___widgets_4+164], ax       # 004B475E
    mov word ptr [_ui_vehicle___widgets_4+168], cx       # 004B4764
    mov ax, word ptr [esi + 0x34]                        # 004B476B
    sub ax, 2                                            # 004B476F
    mov word ptr [_ui_vehicle___widgets_4+196], ax       # 004B4773
    mov word ptr [_ui_vehicle___widgets_4+180], ax       # 004B4779
    mov word ptr [_ui_vehicle___widgets_4+212], ax       # 004B477F
    mov word ptr [_ui_vehicle___widgets_4+228], ax       # 004B4785
    mov word ptr [_ui_vehicle___widgets_4+244], ax       # 004B478B
    mov word ptr [_ui_vehicle___widgets_4+260], ax       # 004B4791
    sub ax, 0x17                                         # 004B4797
    mov word ptr [_ui_vehicle___widgets_4+194], ax       # 004B479B
    mov word ptr [_ui_vehicle___widgets_4+178], ax       # 004B47A1
    mov word ptr [_ui_vehicle___widgets_4+210], ax       # 004B47A7
    mov word ptr [_ui_vehicle___widgets_4+226], ax       # 004B47AD
    mov word ptr [_ui_vehicle___widgets_4+242], ax       # 004B47B3
    mov word ptr [_ui_vehicle___widgets_4+258], ax       # 004B47B9
    or dword ptr [esi + 0x14], 0x7800                    # 004B47BF
    cmp word ptr [ebx + 0x4c], 1                         # 004B47C6
    je .L4B47D4                                          # 004B47CB
    and dword ptr [esi + 0x14], 0xffff9fff               # 004B47CD
.L4B47D4:
    cmp dword ptr [ebx + 0x4e], 0                        # 004B47D4
    je .L4B47E1                                          # 004B47D8
    and dword ptr [esi + 0x14], 0xffffe7ff               # 004B47DA
.L4B47E1:
    mov byte ptr [_ui_vehicle___widgets_4+176], 9        # 004B47E1
    mov byte ptr [_ui_vehicle___widgets_4+192], 9        # 004B47E8
    mov byte ptr [_ui_vehicle___widgets_4+208], 9        # 004B47EF
    mov byte ptr [_ui_vehicle___widgets_4+224], 9        # 004B47F6
    mov byte ptr [_ui_vehicle___widgets_4+240], 9        # 004B47FD
    mov byte ptr [_ui_vehicle___widgets_4+256], 9        # 004B4804
    mov al, byte ptr [ebx + 0x21]                        # 004B480B
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B480E
    je .L4B4848                                          # 004B4814
    mov byte ptr [_ui_vehicle___widgets_4+176], 0        # 004B4816
    mov byte ptr [_ui_vehicle___widgets_4+192], 0        # 004B481D
    mov byte ptr [_ui_vehicle___widgets_4+208], 0        # 004B4824
    mov byte ptr [_ui_vehicle___widgets_4+224], 0        # 004B482B
    mov byte ptr [_ui_vehicle___widgets_4+240], 0        # 004B4832
    mov byte ptr [_ui_vehicle___widgets_4+256], 0        # 004B4839
    add word ptr [_ui_vehicle___widgets_4+164], 0x16     # 004B4840
.L4B4848:
    or dword ptr [esi + 0x14], 0x18000                   # 004B4848
    cmp word ptr [esi + 0x842], -1                       # 004B484F
    je .L4B4860                                          # 004B4857
    and dword ptr [esi + 0x14], 0xfffe7fff               # 004B4859
.L4B4860:
    call _sub_4B5ECD                                     # 004B4860
    ret                                                  # 004B4865

    .global _sub_4B4866
_sub_4B4866:
    call _sub_4CA4DF                                     # 004B4866
    call _sub_4B5F0D                                     # 004B486B
    mov cx, word ptr [esi + 0x30]                        # 004B4870
    mov dx, word ptr [esi + 0x32]                        # 004B4874
    add cx, 3                                            # 004B4878
    add dx, word ptr [esi + 0x36]                        # 004B487C
    sub dx, 0xd                                          # 004B4880
    bt dword ptr [__523368], 3                           # 004B4884
    jae .L4B48B9                                         # 004B488C
    cmp byte ptr [__523392], 0x17                        # 004B488E
    jne .L4B48B9                                         # 004B4895
    mov bp, word ptr [esi + 0x40]                        # 004B4897
    cmp bp, word ptr [__523390]                          # 004B489B
    jne .L4B48B9                                         # 004B48A2
    push esi                                             # 004B48A4
    mov bx, 0x4d4                                        # 004B48A5
    mov bp, word ptr [esi + 0x34]                        # 004B48A9
    sub bp, 0xe                                          # 004B48AD
    msvc_xor al, al                                      # 004B48B1
    call _sub_494BBF                                     # 004B48B3
    pop esi                                              # 004B48B8
.L4B48B9:
    ret                                                  # 004B48B9

    .global _sub_4B48BA
_sub_4B48BA:
    push esi                                             # 004B48BA
    movzx ebp, byte ptr [esi + 0x887]                    # 004B48BB
    movzx ebp, byte ptr [ebp*8 + __1136BA4]              # 004B48C2
    msvc_mov eax, ebp                                    # 004B48CA
    shl eax, 8                                           # 004B48CC
    msvc_or ebp, eax                                     # 004B48CF
    shl eax, 8                                           # 004B48D1
    msvc_or ebp, eax                                     # 004B48D4
    shl eax, 8                                           # 004B48D6
    msvc_or ebp, eax                                     # 004B48D9
    call _sub_447485                                     # 004B48DB
    movzx esi, word ptr [esi + 0x40]                     # 004B48E0
    shl esi, 7                                           # 004B48E4
    add_offset esi, _things                              # 004B48E7
    mov ax, 0x1c7                                        # 004B48ED
    mov ebx, dword ptr [esp]                             # 004B48F1
    cmp word ptr [ebx + 0x840], 0                        # 004B48F4
    jne .L4B4921                                         # 004B48FC
    push esi                                             # 004B48FE
    msvc_mov esi, ebx                                    # 004B48FF
    msvc_xor dx, dx                                      # 004B4901
    msvc_mov cx, dx                                      # 004B4904
    add dx, 9                                            # 004B4907
    msvc_xor ax, ax                                      # 004B490B
    mov bx, word ptr [ebx + 0x34]                        # 004B490E
    mov ebp, 0x2000030                                   # 004B4912
    call _sub_4474BA                                     # 004B4917
    pop esi                                              # 004B491C
    mov ax, 0x1c9                                        # 004B491D
.L4B4921:
    push eax                                             # 004B4921
    push esi                                             # 004B4922
    movzx esi, word ptr [esi + 0x3a]                     # 004B4923
    shl esi, 7                                           # 004B4927
    add_offset esi, _things                              # 004B492A
    mov bx, 0x4c0                                        # 004B4930
    test byte ptr [esi + 0x48], 2                        # 004B4934
    je .L4B493E                                          # 004B4938
    mov bx, 0x4c1                                        # 004B493A
.L4B493E:
    mov word ptr [__112C826], bx                         # 004B493E
    msvc_mov bx, ax                                      # 004B4945
    mov_offset esi, __112C826                            # 004B4948
    mov dx, 0xffff                                       # 004B494D
    mov cx, 8                                            # 004B4951
    msvc_xor al, al                                      # 004B4955
    call _sub_494B3F                                     # 004B4957
    pop esi                                              # 004B495C
    pop eax                                              # 004B495D
    add edx, 0xa                                         # 004B495E
    cmp word ptr [esi + 0x4c], 1                         # 004B4961
    je .L4B4B2C                                          # 004B4966
    mov ebp, dword ptr [esi + 0x46]                      # 004B496C
    mov edx, 1                                           # 004B496F
    mov byte ptr [__113646A], 1                          # 004B4974
.L4B497B:
    mov ebx, dword ptr [esp]                             # 004B497B
    cmp dx, word ptr [ebx + 0x842]                       # 004B497E
    jne .L4B49AD                                         # 004B4985
    push ecx                                             # 004B4987
    push edx                                             # 004B4988
    push ebp                                             # 004B4989
    push esi                                             # 004B498A
    msvc_mov esi, ebx                                    # 004B498B
    imul dx, dx, 0xa                                     # 004B498D
    msvc_mov cx, dx                                      # 004B4991
    add dx, 9                                            # 004B4994
    msvc_xor ax, ax                                      # 004B4998
    mov bx, word ptr [esi + 0x34]                        # 004B499B
    mov ebp, 0xa                                         # 004B499F
    call _sub_4474BA                                     # 004B49A4
    pop esi                                              # 004B49A9
    pop ebp                                              # 004B49AA
    pop edx                                              # 004B49AB
    pop ecx                                              # 004B49AC
.L4B49AD:
    mov ebx, dword ptr [esp]                             # 004B49AD
    mov ax, 0x1c7                                        # 004B49B0
    cmp dx, word ptr [ebx + 0x840]                       # 004B49B4
    jne .L4B49E7                                         # 004B49BB
    push ecx                                             # 004B49BD
    push edx                                             # 004B49BE
    push ebp                                             # 004B49BF
    push esi                                             # 004B49C0
    msvc_mov esi, ebx                                    # 004B49C1
    imul dx, dx, 0xa                                     # 004B49C3
    msvc_mov cx, dx                                      # 004B49C7
    add dx, 9                                            # 004B49CA
    msvc_xor ax, ax                                      # 004B49CE
    mov bx, word ptr [esi + 0x34]                        # 004B49D1
    mov ebp, 0x2000030                                   # 004B49D5
    call _sub_4474BA                                     # 004B49DA
    pop esi                                              # 004B49DF
    pop ebp                                              # 004B49E0
    pop edx                                              # 004B49E1
    pop ecx                                              # 004B49E2
    mov ax, 0x1c9                                        # 004B49E3
.L4B49E7:
    mov cl, byte ptr [ebp + __987C5C]                    # 004B49E7
    and ecx, 7                                           # 004B49ED
    push ecx                                             # 004B49F0
    jmp dword ptr [ecx*4 + __50051C]                     # 004B49F1
    .global _loc_4B49F8
_loc_4B49F8:
    mov bl, byte ptr [ebp + __987C5C]                    # 004B49F8
    and ebx, 0xc0                                        # 004B49FE
    shl ebx, 2                                           # 004B4A04
    mov bl, byte ptr [ebp + __987C5C+1]                  # 004B4A07
    imul ebx, ebx, 0x3d2                                 # 004B4A0D
    mov cx, word ptr [ebx + _stations]                   # 004B4A13
    mov word ptr [__112C828], cx                         # 004B4A1A
    mov cx, word ptr [ebx + _stations+44]                # 004B4A21
    mov word ptr [__112C82A], cx                         # 004B4A28
    jmp _loc_4B4A58                                      # 004B4A2F
    .global _loc_4B4A31
_loc_4B4A31:
    movzx ebx, byte ptr [ebp + __987C5C]                 # 004B4A31
    shr ebx, 3                                           # 004B4A38
    mov ebx, dword ptr [ebx*4 + _cargoObjects]           # 004B4A3B
    mov cx, word ptr [ebx]                               # 004B4A42
    mov word ptr [__112C828], cx                         # 004B4A45
    mov ecx, dword ptr [ebx + 0xc]                       # 004B4A4C
    add ecx, 0                                           # 004B4A4F
    mov dword ptr [__112C82A], ecx                       # 004B4A52
    .global _loc_4B4A58
_loc_4B4A58:
    pop ecx                                              # 004B4A58
    push ecx                                             # 004B4A59
    push edx                                             # 004B4A5A
    push ebp                                             # 004B4A5B
    push esi                                             # 004B4A5C
    msvc_mov bx, cx                                      # 004B4A5D
    add bx, 0x4c3                                        # 004B4A60
    mov word ptr [__112C826], bx                         # 004B4A65
    msvc_mov bx, ax                                      # 004B4A6C
    mov cx, 8                                            # 004B4A6F
    imul dx, dx, 0xa                                     # 004B4A73
    mov esi, dword ptr [esp + 0x10]                      # 004B4A77
    dec dx                                               # 004B4A7B
    msvc_xor al, al                                      # 004B4A7D
    mov bp, word ptr [esi + 0x842]                       # 004B4A7F
    cmp bp, word ptr [esp + 8]                           # 004B4A86
    jne .L4B4A91                                         # 004B4A8B
    mov bx, 0x1ca                                        # 004B4A8D
.L4B4A91:
    mov_offset esi, __112C826                            # 004B4A91
    call _sub_494B3F                                     # 004B4A96
    mov eax, dword ptr [esp + 0xc]                       # 004B4A9B
    test byte ptr [eax + __4FE088], 2                    # 004B4A9F
    je .L4B4AEC                                          # 004B4AA6
    bt dword ptr [__523368], 3                           # 004B4AA8
    jae .L4B4AE6                                         # 004B4AB0
    cmp byte ptr [__523392], 0x17                        # 004B4AB2
    jne .L4B4AE6                                         # 004B4AB9
    mov esi, dword ptr [esp + 0x10]                      # 004B4ABB
    mov si, word ptr [esi + 0x40]                        # 004B4ABF
    cmp si, word ptr [__523390]                          # 004B4AC3
    jne .L4B4AE6                                         # 004B4ACA
    movzx ebx, byte ptr [__113646A]                      # 004B4ACC
    add ebx, 0x20100ca6                                  # 004B4AD3
    add cx, 3                                            # 004B4AD9
    add dx, 1                                            # 004B4ADD
    call _sub_448C79                                     # 004B4AE1
.L4B4AE6:
    inc byte ptr [__113646A]                             # 004B4AE6
.L4B4AEC:
    pop esi                                              # 004B4AEC
    pop ebp                                              # 004B4AED
    pop edx                                              # 004B4AEE
    pop ecx                                              # 004B4AEF
    movzx eax, word ptr [esi + 0x4a]                     # 004B4AF0
    add eax, dword ptr [esi + 0x46]                      # 004B4AF4
    msvc_cmp eax, ebp                                    # 004B4AF7
    jne .L4B4B18                                         # 004B4AF9
    push ecx                                             # 004B4AFB
    push edx                                             # 004B4AFC
    push ebp                                             # 004B4AFD
    push esi                                             # 004B4AFE
    mov bx, 0x4cb                                        # 004B4AFF
    mov cx, 1                                            # 004B4B03
    imul dx, dx, 0xa                                     # 004B4B07
    msvc_xor al, al                                      # 004B4B0B
    dec dx                                               # 004B4B0D
    call _sub_494B3F                                     # 004B4B0F
    pop esi                                              # 004B4B14
    pop ebp                                              # 004B4B15
    pop edx                                              # 004B4B16
    pop ecx                                              # 004B4B17
.L4B4B18:
    add ebp, dword ptr [ecx*4 + __4FE070]                # 004B4B18
    inc dx                                               # 004B4B1F
    cmp cl, 0                                            # 004B4B21
    jne .L4B497B                                         # 004B4B24
    jmp .L4B4B41                                         # 004B4B2A
.L4B4B2C:
    push esi                                             # 004B4B2C
    mov bx, 0x4c2                                        # 004B4B2D
    mov cx, 8                                            # 004B4B31
    mov dx, 9                                            # 004B4B35
    msvc_xor al, al                                      # 004B4B39
    call _sub_494B3F                                     # 004B4B3B
    pop esi                                              # 004B4B40
.L4B4B41:
    pop esi                                              # 004B4B41
    ret                                                  # 004B4B42

    .global _sub_4B4B43
_sub_4B4B43:
    cmp dx, 2                                            # 004B4B43
    je _sub_4CC6EA                                       # 004B4B47
    cmp dx, 4                                            # 004B4B4D
    jb .L4B4B5D                                          # 004B4B51
    cmp dx, 8                                            # 004B4B53
    jbe _sub_4B2566                                      # 004B4B57
.L4B4B5D:
    cmp dx, 1                                            # 004B4B5D
    je _sub_4B2680                                       # 004B4B61
    cmp dx, 0xe                                          # 004B4B67
    je _sub_4B4F6D                                       # 004B4B6B
    cmp dx, 0xd                                          # 004B4B71
    je _sub_4B4F51                                       # 004B4B75
    cmp dx, 0xf                                          # 004B4B7B
    je _sub_4B4BC1                                       # 004B4B7F
    cmp dx, 0x10                                         # 004B4B81
    je _sub_4B4C78                                       # 004B4B85
    ret                                                  # 004B4B8B

    .global _sub_4B4B8C
_sub_4B4B8C:
    cmp dx, 0xb                                          # 004B4B8C
    je _sub_4B4DC9                                       # 004B4B90
    cmp dx, 0xc                                          # 004B4B96
    je _sub_4B4DCF                                       # 004B4B9A
    ret                                                  # 004B4BA0

    .global _sub_4B4BA1
_sub_4B4BA1:
    cmp dx, 1                                            # 004B4BA1
    je _sub_4B26C0                                       # 004B4BA5
    ret                                                  # 004B4BAB

    .global _sub_4B4BAC
_sub_4B4BAC:
    cmp dx, 0xb                                          # 004B4BAC
    je _sub_4B4E7B                                       # 004B4BB0
    cmp dx, 0xc                                          # 004B4BB6
    je _sub_4B4EA4                                       # 004B4BBA
    ret                                                  # 004B4BC0

    .global _sub_4B4BC1
_sub_4B4BC1:
    mov cx, word ptr [esi + 0x842]                       # 004B4BC1
    movzx ebp, word ptr [esi + 0x40]                     # 004B4BC8
    shl ebp, 7                                           # 004B4BCC
    add_offset ebp, _things                              # 004B4BCF
    cmp word ptr [ebp + 0x4c], 1                         # 004B4BD5
    jbe _sub_4B56CD                                      # 004B4BDA
    cmp cx, -1                                           # 004B4BE0
    je _sub_4B56CD                                       # 004B4BE4
    dec cx                                               # 004B4BEA
    js _sub_4B56CD                                       # 004B4BEC
    mov edi, dword ptr [ebp + 0x46]                      # 004B4BF2
.L4B4BF5:
    mov bl, byte ptr [edi + __987C5C]                    # 004B4BF5
    and ebx, 7                                           # 004B4BFB
    cmp bl, 0                                            # 004B4BFE
    je _sub_4B56CD                                       # 004B4C01
    dec cx                                               # 004B4C07
    js .L4B4C14                                          # 004B4C09
    add edi, dword ptr [ebx*4 + __4FE070]                # 004B4C0B
    jmp .L4B4BF5                                         # 004B4C12
.L4B4C14:
    push esi                                             # 004B4C14
    msvc_mov edx, edi                                    # 004B4C15
    mov di, word ptr [esi + 0x40]                        # 004B4C17
    movzx ebp, di                                        # 004B4C1B
    shl ebp, 7                                           # 004B4C1E
    add_offset ebp, _things                              # 004B4C21
    sub edx, dword ptr [ebp + 0x46]                      # 004B4C27
    mov bl, 1                                            # 004B4C2A
    mov word ptr [__9C68E8], 0                           # 004B4C2C
    mov esi, 0x4b                                        # 004B4C35
    call _sub_431315                                     # 004B4C3A
    pop esi                                              # 004B4C3F
    cmp ebx, 0x80000000                                  # 004B4C40
    je .L4B4C63                                          # 004B4C46
    cmp word ptr [esi + 0x842], -1                       # 004B4C48
    je .L4B4C63                                          # 004B4C50
    cmp word ptr [esi + 0x842], 1                        # 004B4C52
    jbe .L4B4C63                                         # 004B4C5A
    dec word ptr [esi + 0x842]                           # 004B4C5C
.L4B4C63:
    push esi                                             # 004B4C63
    movzx esi, word ptr [esi + 0x40]                     # 004B4C64
    shl esi, 7                                           # 004B4C68
    add_offset esi, _things                              # 004B4C6B
    call _sub_470824                                     # 004B4C71
    pop esi                                              # 004B4C76
    ret                                                  # 004B4C77

    .global _sub_4B4C78
_sub_4B4C78:
    mov cx, word ptr [esi + 0x842]                       # 004B4C78
    movzx ebp, word ptr [esi + 0x40]                     # 004B4C7F
    shl ebp, 7                                           # 004B4C83
    add_offset ebp, _things                              # 004B4C86
    cmp word ptr [ebp + 0x4c], 1                         # 004B4C8C
    jbe _sub_4B56CD                                      # 004B4C91
    cmp cx, -1                                           # 004B4C97
    je _sub_4B56CD                                       # 004B4C9B
    dec cx                                               # 004B4CA1
    js _sub_4B56CD                                       # 004B4CA3
    mov edi, dword ptr [ebp + 0x46]                      # 004B4CA9
.L4B4CAC:
    mov bl, byte ptr [edi + __987C5C]                    # 004B4CAC
    and ebx, 7                                           # 004B4CB2
    cmp bl, 0                                            # 004B4CB5
    je _sub_4B56CD                                       # 004B4CB8
    dec cx                                               # 004B4CBE
    js .L4B4CCB                                          # 004B4CC0
    add edi, dword ptr [ebx*4 + __4FE070]                # 004B4CC2
    jmp .L4B4CAC                                         # 004B4CC9
.L4B4CCB:
    push esi                                             # 004B4CCB
    msvc_mov edx, edi                                    # 004B4CCC
    mov di, word ptr [esi + 0x40]                        # 004B4CCE
    movzx ebp, di                                        # 004B4CD2
    shl ebp, 7                                           # 004B4CD5
    add_offset ebp, _things                              # 004B4CD8
    sub edx, dword ptr [ebp + 0x46]                      # 004B4CDE
    mov bl, 1                                            # 004B4CE1
    mov word ptr [__9C68E8], 0                           # 004B4CE3
    mov esi, 0x4c                                        # 004B4CEC
    call _sub_431315                                     # 004B4CF1
    pop esi                                              # 004B4CF6
    cmp ebx, 0x80000000                                  # 004B4CF7
    je .L4B4D5F                                          # 004B4CFD
    cmp word ptr [esi + 0x842], -1                       # 004B4CFF
    je .L4B4D5F                                          # 004B4D07
    movzx edi, word ptr [esi + 0x40]                     # 004B4D09
    shl edi, 7                                           # 004B4D0D
    add_offset edi, _things                              # 004B4D10
    mov edi, dword ptr [edi + 0x46]                      # 004B4D16
    mov cx, word ptr [esi + 0x842]                       # 004B4D19
    dec cx                                               # 004B4D20
    js .L4B4D5F                                          # 004B4D22
    msvc_xor edx, edx                                    # 004B4D24
.L4B4D26:
    mov bl, byte ptr [edx + edi + __987C5C]              # 004B4D26
    and ebx, 7                                           # 004B4D2D
    cmp bl, 0                                            # 004B4D30
    je .L4B4D5F                                          # 004B4D33
    dec cx                                               # 004B4D35
    js .L4B4D42                                          # 004B4D37
    add edx, dword ptr [ebx*4 + __4FE070]                # 004B4D39
    jmp .L4B4D26                                         # 004B4D40
.L4B4D42:
    add edx, dword ptr [ebx*4 + __4FE070]                # 004B4D42
    mov bl, byte ptr [edx + edi + __987C5C]              # 004B4D49
    and ebx, 7                                           # 004B4D50
    cmp bl, 0                                            # 004B4D53
    je .L4B4D5F                                          # 004B4D56
    inc word ptr [esi + 0x842]                           # 004B4D58
.L4B4D5F:
    push esi                                             # 004B4D5F
    movzx esi, word ptr [esi + 0x40]                     # 004B4D60
    shl esi, 7                                           # 004B4D64
    add_offset esi, _things                              # 004B4D67
    call _sub_470824                                     # 004B4D6D
    pop esi                                              # 004B4D72
    ret                                                  # 004B4D73

    .global _sub_4B4D74
_sub_4B4D74:
    mov word ptr [__112C826], 0xcb                       # 004B4D74
    movzx ebx, word ptr [esi + 0x40]                     # 004B4D7D
    shl ebx, 7                                           # 004B4D81
    add_offset ebx, _things                              # 004B4D84
    movzx edx, byte ptr [ebx + 0x5e]                     # 004B4D8A
    add dx, 0x4fc                                        # 004B4D8E
    mov word ptr [__112C828], dx                         # 004B4D93
    ret                                                  # 004B4D9A

    .global _sub_4B4D9B
_sub_4B4D9B:
    movzx ebp, word ptr [esi + 0x40]                     # 004B4D9B
    shl ebp, 7                                           # 004B4D9F
    add_offset ebp, _things                              # 004B4DA2
    mov ebx, dword ptr [ebp + 0x46]                      # 004B4DA8
    mov dx, 0xa                                          # 004B4DAB
.L4B4DAF:
    mov cl, byte ptr [ebx + __987C5C]                    # 004B4DAF
    and ecx, 7                                           # 004B4DB5
    add ebx, dword ptr [ecx*4 + __4FE070]                # 004B4DB8
    add dx, 0xa                                          # 004B4DBF
    cmp cl, 0                                            # 004B4DC3
    jne .L4B4DAF                                         # 004B4DC6
    ret                                                  # 004B4DC8

    .global _sub_4B4DC9
_sub_4B4DC9:
    mov bp, 0x4c9                                        # 004B4DC9
    jmp _sub_4B4DD3                                      # 004B4DCD

    .global _sub_4B4DCF
_sub_4B4DCF:
    mov bp, 0x4ca                                        # 004B4DCF

    .global _sub_4B4DD3
_sub_4B4DD3:
    push edi                                             # 004B4DD3
    movzx edi, word ptr [esi + 0x40]                     # 004B4DD4
    shl edi, 7                                           # 004B4DD8
    add_offset edi, _things                              # 004B4DDB
    msvc_xor ebx, ebx                                    # 004B4DE1
    msvc_xor edx, edx                                    # 004B4DE3
.L4B4DE5:
    bt dword ptr [edi + 0x4e], ebx                       # 004B4DE5
    jae .L4B4E1B                                         # 004B4DE9
    mov ecx, dword ptr [ebx*4 + _cargoObjects]           # 004B4DEB
    mov ax, word ptr [ecx]                               # 004B4DF2
    mov word ptr [edx*8 + __113D8A0], ax                 # 004B4DF5
    mov eax, dword ptr [ecx + 0xc]                       # 004B4DFD
    add eax, 0                                           # 004B4E00
    mov dword ptr [edx*8 + __113D8A2], eax               # 004B4E03
    mov word ptr [edx*8 + __113D8A6], bx                 # 004B4E0A
    mov word ptr [edx*2 + __113D850], bp                 # 004B4E12
    inc edx                                              # 004B4E1A
.L4B4E1B:
    inc ebx                                              # 004B4E1B
    cmp ebx, 0x20                                        # 004B4E1C
    jb .L4B4DE5                                          # 004B4E1F
    pop edi                                              # 004B4E21
    push esi                                             # 004B4E22
    mov al, byte ptr [esi + 0x887]                       # 004B4E23
    movzx edx, word ptr [esi + 0x40]                     # 004B4E29
    shl edx, 7                                           # 004B4E2D
    add_offset edx, _things                              # 004B4E30
    msvc_xor ecx, ecx                                    # 004B4E36
    msvc_xor ebx, ebx                                    # 004B4E38
.L4B4E3A:
    bt dword ptr [edx + 0x4e], ecx                       # 004B4E3A
    jae .L4B4E41                                         # 004B4E3E
    inc ebx                                              # 004B4E40
.L4B4E41:
    inc ecx                                              # 004B4E41
    cmp ecx, 0x20                                        # 004B4E42
    jb .L4B4E3A                                          # 004B4E45
    mov cx, word ptr [edi + 2]                           # 004B4E47
    mov bp, word ptr [edi + 4]                           # 004B4E4B
    msvc_sub bp, cx                                      # 004B4E4F
    inc bp                                               # 004B4E52
    mov dx, word ptr [edi + 6]                           # 004B4E54
    mov di, word ptr [edi + 8]                           # 004B4E58
    msvc_sub di, dx                                      # 004B4E5C
    inc di                                               # 004B4E5F
    add cx, word ptr [esi + 0x30]                        # 004B4E61
    add dx, word ptr [esi + 0x32]                        # 004B4E65
    call _sub_4CCA6D                                     # 004B4E69
    msvc_mov edi, esi                                    # 004B4E6E
    pop esi                                              # 004B4E70
    mov word ptr [__113D84E], 0                          # 004B4E71
    ret                                                  # 004B4E7A

    .global _sub_4B4E7B
_sub_4B4E7B:
    cmp ax, -1                                           # 004B4E7B
    jne .L4B4E87                                         # 004B4E7F
    mov ax, word ptr [__113D84E]                         # 004B4E81
.L4B4E87:
    cmp ax, -1                                           # 004B4E87
    je _sub_4B56CD                                       # 004B4E8B
    movzx eax, ax                                        # 004B4E91
    mov ax, word ptr [eax*8 + __113D8A6]                 # 004B4E94
    shl ax, 3                                            # 004B4E9C
    or al, 4                                             # 004B4EA0
    jmp _sub_4B4ECB                                      # 004B4EA2

    .global _sub_4B4EA4
_sub_4B4EA4:
    cmp ax, -1                                           # 004B4EA4
    jne .L4B4EB0                                         # 004B4EA8
    mov ax, word ptr [__113D84E]                         # 004B4EAA
.L4B4EB0:
    cmp ax, -1                                           # 004B4EB0
    je _sub_4B56CD                                       # 004B4EB4
    movzx eax, ax                                        # 004B4EBA
    mov ax, word ptr [eax*8 + __113D8A6]                 # 004B4EBD
    shl ax, 3                                            # 004B4EC5
    or al, 5                                             # 004B4EC9

    .global _sub_4B4ECB
_sub_4B4ECB:
    push esi                                             # 004B4ECB
    mov bp, word ptr [esi + 0x842]                       # 004B4ECC
    mov di, word ptr [esi + 0x40]                        # 004B4ED3
    movzx esi, di                                        # 004B4ED7
    shl esi, 7                                           # 004B4EDA
    add_offset esi, _things                              # 004B4EDD
    movzx edx, word ptr [esi + 0x4c]                     # 004B4EE3
    dec edx                                              # 004B4EE7
    cmp bp, -1                                           # 004B4EE8
    je .L4B4F13                                          # 004B4EEC
    dec bp                                               # 004B4EEE
    js .L4B4F13                                          # 004B4EF0
    mov edx, dword ptr [esi + 0x46]                      # 004B4EF2
.L4B4EF5:
    mov bl, byte ptr [edx + __987C5C]                    # 004B4EF5
    and ebx, 7                                           # 004B4EFB
    cmp bl, 0                                            # 004B4EFE
    je .L4B4F10                                          # 004B4F01
    dec bp                                               # 004B4F03
    js .L4B4F10                                          # 004B4F05
    add edx, dword ptr [ebx*4 + __4FE070]                # 004B4F07
    jmp .L4B4EF5                                         # 004B4F0E
.L4B4F10:
    sub edx, dword ptr [esi + 0x46]                      # 004B4F10
.L4B4F13:
    mov bp, word ptr [esi + 0x4c]                        # 004B4F13
    push esi                                             # 004B4F17
    push ebp                                             # 004B4F18
    mov bl, 1                                            # 004B4F19
    mov word ptr [__9C68E8], 0x4cc                       # 004B4F1B
    mov esi, 0x23                                        # 004B4F24
    call _sub_431315                                     # 004B4F29
    pop ebp                                              # 004B4F2E
    pop esi                                              # 004B4F2F
    call _sub_470824                                     # 004B4F30
    cmp bp, word ptr [esi + 0x4c]                        # 004B4F35
    je .L4B4F4F                                          # 004B4F39
    mov esi, dword ptr [esp]                             # 004B4F3B
    cmp word ptr [esi + 0x842], -1                       # 004B4F3E
    je .L4B4F4F                                          # 004B4F46
    inc word ptr [esi + 0x842]                           # 004B4F48
.L4B4F4F:
    pop esi                                              # 004B4F4F
    ret                                                  # 004B4F50

    .global _sub_4B4F51
_sub_4B4F51:
    push esi                                             # 004B4F51
    mov di, word ptr [esi + 0x40]                        # 004B4F52
    mov bl, 1                                            # 004B4F56
    mov word ptr [__9C68E8], 0                           # 004B4F58
    mov esi, 0x25                                        # 004B4F61
    call _sub_431315                                     # 004B4F66
    pop esi                                              # 004B4F6B
    ret                                                  # 004B4F6C

    .global _sub_4B4F6D
_sub_4B4F6D:
    mov cx, word ptr [esi + 0x842]                       # 004B4F6D
    movzx ebp, word ptr [esi + 0x40]                     # 004B4F74
    shl ebp, 7                                           # 004B4F78
    add_offset ebp, _things                              # 004B4F7B
    cmp word ptr [ebp + 0x4c], 1                         # 004B4F81
    jbe _sub_4B56CD                                      # 004B4F86
    cmp cx, -1                                           # 004B4F8C
    je .L4B4FB8                                          # 004B4F90
    dec cx                                               # 004B4F92
    js _sub_4B56CD                                       # 004B4F94
    mov edi, dword ptr [ebp + 0x46]                      # 004B4F9A
.L4B4F9D:
    mov bl, byte ptr [edi + __987C5C]                    # 004B4F9D
    and ebx, 7                                           # 004B4FA3
    cmp bl, 0                                            # 004B4FA6
    je .L4B4FB8                                          # 004B4FA9
    dec cx                                               # 004B4FAB
    js .L4B4FD6                                          # 004B4FAD
    add edi, dword ptr [ebx*4 + __4FE070]                # 004B4FAF
    jmp .L4B4F9D                                         # 004B4FB6
.L4B4FB8:
    mov ebp, dword ptr [ebp + 0x46]                      # 004B4FB8
    msvc_mov edi, ebp                                    # 004B4FBB
.L4B4FBD:
    mov bl, byte ptr [ebp + __987C5C]                    # 004B4FBD
    and ebx, 7                                           # 004B4FC3
    cmp bl, 0                                            # 004B4FC6
    je .L4B4FD6                                          # 004B4FC9
    msvc_mov edi, ebp                                    # 004B4FCB
    add ebp, dword ptr [ebx*4 + __4FE070]                # 004B4FCD
    jmp .L4B4FBD                                         # 004B4FD4
.L4B4FD6:
    push esi                                             # 004B4FD6
    msvc_mov edx, edi                                    # 004B4FD7
    mov di, word ptr [esi + 0x40]                        # 004B4FD9
    movzx ebp, di                                        # 004B4FDD
    shl ebp, 7                                           # 004B4FE0
    add_offset ebp, _things                              # 004B4FE3
    sub edx, dword ptr [ebp + 0x46]                      # 004B4FE9
    mov bl, 1                                            # 004B4FEC
    mov word ptr [__9C68E8], 0                           # 004B4FEE
    mov esi, 0x24                                        # 004B4FF7
    call _sub_431315                                     # 004B4FFC
    pop esi                                              # 004B5001
    push esi                                             # 004B5002
    movzx esi, word ptr [esi + 0x40]                     # 004B5003
    shl esi, 7                                           # 004B5007
    add_offset esi, _things                              # 004B500A
    call _sub_470824                                     # 004B5010
    pop esi                                              # 004B5015
    cmp word ptr [esi + 0x842], -1                       # 004B5016
    jne .L4B5021                                         # 004B501E
    ret                                                  # 004B5020
.L4B5021:
    movzx edi, word ptr [esi + 0x40]                     # 004B5021
    shl edi, 7                                           # 004B5025
    add_offset edi, _things                              # 004B5028
    mov edi, dword ptr [edi + 0x46]                      # 004B502E
    mov cx, word ptr [esi + 0x842]                       # 004B5031
.L4B5038:
    mov bl, byte ptr [edi + __987C5C]                    # 004B5038
    and ebx, 7                                           # 004B503E
    cmp bl, 0                                            # 004B5041
    je .L4B5053                                          # 004B5044
    dec cx                                               # 004B5046
    js .L4B505C                                          # 004B5048
    add edi, dword ptr [ebx*4 + __4FE070]                # 004B504A
    jmp .L4B5038                                         # 004B5051
.L4B5053:
    mov word ptr [esi + 0x842], 0xffff                   # 004B5053
.L4B505C:
    ret                                                  # 004B505C

    .global _sub_4B505D
_sub_4B505D:
    mov dx, 9                                            # 004B505D
    mov al, 0xc                                          # 004B5061
    call _sub_4CE367                                     # 004B5063
    jb _sub_4B56CD                                       # 004B5068
    call _sub_4CA4BD                                     # 004B506E
    push esi                                             # 004B5073
    movzx esi, word ptr [esi + 0x40]                     # 004B5074
    shl esi, 7                                           # 004B5078
    add_offset esi, _things                              # 004B507B
    call _sub_470824                                     # 004B5081
    pop esi                                              # 004B5086
    ret                                                  # 004B5087

    .global _sub_4B5088
_sub_4B5088:
    call _sub_4CA4BD                                     # 004B5088
    and word ptr [__F24484], 0xffef                      # 004B508D
    call _sub_4CD406                                     # 004B5095
    ret                                                  # 004B509A

    .global _sub_4B509B
_sub_4B509B:
    bt dword ptr [__523368], 3                           # 004B509B
    jae _sub_4B56CD                                      # 004B50A3
    cmp byte ptr [__523392], 0x17                        # 004B50A9
    jne _sub_4B56CD                                      # 004B50B0
    mov bp, word ptr [esi + 0x40]                        # 004B50B6
    cmp bp, word ptr [__523390]                          # 004B50BA
    jne _sub_4B56CD                                      # 004B50C1
    call _sub_4CE3D6                                     # 004B50C7
    ret                                                  # 004B50CC

    .global _sub_4B50CD
_sub_4B50CD:
    ret                                                  # 004B50CD

    .global _sub_4B50CE
_sub_4B50CE:
    call _sub_4B5A1A                                     # 004B50CE
    cmp bl, 0                                            # 004B50D3
    je .L4B50DD                                          # 004B50D6
    mov edi, 0x25                                        # 004B50D8
.L4B50DD:
    ret                                                  # 004B50DD

    .global _sub_4B50DE
_sub_4B50DE:
    msvc_mov cx, bx                                      # 004B50DE
    mov bl, 0                                            # 004B50E1
    call _sub_4B5A1A                                     # 004B50E3
    cmp bl, 4                                            # 004B50E8
    je .L4B5160                                          # 004B50EB
    cmp bl, 0x10                                         # 004B50ED
    je .L4B5223                                          # 004B50F0
    cmp bl, 0xf                                          # 004B50F6
    je .L4B52E6                                          # 004B50F9
    cmp bl, 0xb                                          # 004B50FF
    je .L4B5105                                          # 004B5102
    ret                                                  # 004B5104
.L4B5105:
    mov ax, word ptr [__113623C]                         # 004B5105
    mov cx, word ptr [__113623E]                         # 004B510B
    call _sub_467297                                     # 004B5112
    test edx, 0xffff0000                                 # 004B5117
    je .L4B5122                                          # 004B511D
    shr edx, 0x10                                        # 004B511F
.L4B5122:
    shr cx, 5                                            # 004B5122
    msvc_xchg ch, cl                                     # 004B5126
    shl cl, 7                                            # 004B5128
    shr dx, 3                                            # 004B512B
    msvc_or cl, dl                                       # 004B512F
    shl ecx, 0x10                                        # 004B5131
    shr ax, 5                                            # 004B5134
    msvc_xchg ah, al                                     # 004B5138
    shl al, 7                                            # 004B513A
    movzx eax, ax                                        # 004B513D
    msvc_or eax, ecx                                     # 004B5140
    or al, 3                                             # 004B5142
    movsx ebp, word ptr [__523378]                       # 004B5144
    push eax                                             # 004B514B
    push ebx                                             # 004B514C
    msvc_mov ebx, ebp                                    # 004B514D
    mov eax, 0xa                                         # 004B514F
    call _sub_489CB5                                     # 004B5154
    pop ebx                                              # 004B5159
    pop eax                                              # 004B515A
    msvc_jmp _sub_4B4ECB                                 # 004B515B
.L4B5160:
    mov ax, word ptr [__113623C]                         # 004B5160
    mov cx, word ptr [__113623E]                         # 004B5166
    push edx                                             # 004B516D
    push esi                                             # 004B516E
    msvc_mov esi, edx                                    # 004B516F
    movzx dx, byte ptr [esi + 2]                         # 004B5171
    shl dx, 2                                            # 004B5176
    mov bl, byte ptr [esi + 4]                           # 004B517A
    and ebx, 0x3f                                        # 004B517D
    mov ebx, dword ptr [ebx*4 + __4F73D8]                # 004B5180
    mov bp, word ptr [esi + 5]                           # 004B5187
    and ebp, 0xf                                         # 004B518B
    imul ebp, ebp, 0xa                                   # 004B518E
    mov si, word ptr [esi]                               # 004B5191
    and esi, 3                                           # 004B5194
    jmp dword ptr [esi*4 + __500534]                     # 004B5197
    .global _loc_4B519E
_loc_4B519E:
    sub ax, word ptr [ebp + ebx + 1]                     # 004B519E
    sub cx, word ptr [ebp + ebx + 3]                     # 004B51A3
    jmp .L4B51CC                                         # 004B51A8
    .global _loc_4B51AA
_loc_4B51AA:
    sub ax, word ptr [ebp + ebx + 3]                     # 004B51AA
    add cx, word ptr [ebp + ebx + 1]                     # 004B51AF
    jmp .L4B51CC                                         # 004B51B4
    .global _loc_4B51B6
_loc_4B51B6:
    add ax, word ptr [ebp + ebx + 1]                     # 004B51B6
    add cx, word ptr [ebp + ebx + 3]                     # 004B51BB
    jmp .L4B51CC                                         # 004B51C0
    .global _loc_4B51C2
_loc_4B51C2:
    add ax, word ptr [ebp + ebx + 3]                     # 004B51C2
    sub cx, word ptr [ebp + ebx + 1]                     # 004B51C7
.L4B51CC:
    sub dx, word ptr [ebp + ebx + 5]                     # 004B51CC
    pop esi                                              # 004B51D1
    pop edi                                              # 004B51D2
    shr cx, 5                                            # 004B51D3
    msvc_xchg ch, cl                                     # 004B51D7
    shl cl, 7                                            # 004B51D9
    shr dx, 3                                            # 004B51DC
    msvc_or cl, dl                                       # 004B51E0
    shl ecx, 0x10                                        # 004B51E2
    shr ax, 5                                            # 004B51E5
    msvc_xchg ah, al                                     # 004B51E9
    shl al, 7                                            # 004B51EB
    movzx eax, ax                                        # 004B51EE
    msvc_or eax, ecx                                     # 004B51F1
    mov cl, byte ptr [edi + 4]                           # 004B51F3
    and cx, 0x3f                                         # 004B51F6
    shl cx, 3                                            # 004B51FA
    mov bl, byte ptr [edi]                               # 004B51FE
    and bl, 3                                            # 004B5200
    msvc_or cl, bl                                       # 004B5203
    or al, 3                                             # 004B5205
    movsx ebp, word ptr [__523378]                       # 004B5207
    push eax                                             # 004B520E
    push ebx                                             # 004B520F
    msvc_mov ebx, ebp                                    # 004B5210
    mov eax, 0xa                                         # 004B5212
    call _sub_489CB5                                     # 004B5217
    pop ebx                                              # 004B521C
    pop eax                                              # 004B521D
    msvc_jmp _sub_4B4ECB                                 # 004B521E
.L4B5223:
    mov ax, word ptr [__113623C]                         # 004B5223
    mov cx, word ptr [__113623E]                         # 004B5229
    push edx                                             # 004B5230
    push esi                                             # 004B5231
    msvc_mov esi, edx                                    # 004B5232
    movzx dx, byte ptr [esi + 2]                         # 004B5234
    shl dx, 2                                            # 004B5239
    mov bl, byte ptr [esi + 4]                           # 004B523D
    and ebx, 0xf                                         # 004B5240
    mov ebx, dword ptr [ebx*4 + __4F6D1C]                # 004B5243
    mov bp, word ptr [esi + 5]                           # 004B524A
    and ebp, 3                                           # 004B524E
    imul ebp, ebp, 0xa                                   # 004B5251
    mov si, word ptr [esi]                               # 004B5254
    and esi, 3                                           # 004B5257
    jmp dword ptr [esi*4 + __500544]                     # 004B525A
    .global _loc_4B5261
_loc_4B5261:
    sub ax, word ptr [ebp + ebx + 1]                     # 004B5261
    sub cx, word ptr [ebp + ebx + 3]                     # 004B5266
    jmp .L4B528F                                         # 004B526B
    .global _loc_4B526D
_loc_4B526D:
    sub ax, word ptr [ebp + ebx + 3]                     # 004B526D
    add cx, word ptr [ebp + ebx + 1]                     # 004B5272
    jmp .L4B528F                                         # 004B5277
    .global _loc_4B5279
_loc_4B5279:
    add ax, word ptr [ebp + ebx + 1]                     # 004B5279
    add cx, word ptr [ebp + ebx + 3]                     # 004B527E
    jmp .L4B528F                                         # 004B5283
    .global _loc_4B5285
_loc_4B5285:
    add ax, word ptr [ebp + ebx + 3]                     # 004B5285
    sub cx, word ptr [ebp + ebx + 1]                     # 004B528A
.L4B528F:
    sub dx, word ptr [ebp + ebx + 5]                     # 004B528F
    pop esi                                              # 004B5294
    pop edi                                              # 004B5295
    shr cx, 5                                            # 004B5296
    msvc_xchg ch, cl                                     # 004B529A
    shl cl, 7                                            # 004B529C
    shr dx, 3                                            # 004B529F
    msvc_or cl, dl                                       # 004B52A3
    shl ecx, 0x10                                        # 004B52A5
    shr ax, 5                                            # 004B52A8
    msvc_xchg ah, al                                     # 004B52AC
    shl al, 7                                            # 004B52AE
    movzx eax, ax                                        # 004B52B1
    msvc_or eax, ecx                                     # 004B52B4
    mov cl, byte ptr [edi + 4]                           # 004B52B6
    and cx, 0xf                                          # 004B52B9
    shl cx, 3                                            # 004B52BD
    mov bl, byte ptr [edi]                               # 004B52C1
    and bl, 3                                            # 004B52C3
    msvc_or cl, bl                                       # 004B52C6
    or al, 3                                             # 004B52C8
    movsx ebp, word ptr [__523378]                       # 004B52CA
    push eax                                             # 004B52D1
    push ebx                                             # 004B52D2
    msvc_mov ebx, ebp                                    # 004B52D3
    mov eax, 0xa                                         # 004B52D5
    call _sub_489CB5                                     # 004B52DA
    pop ebx                                              # 004B52DF
    pop eax                                              # 004B52E0
    msvc_jmp _sub_4B4ECB                                 # 004B52E1
.L4B52E6:
    msvc_mov ax, dx                                      # 004B52E6
    msvc_xchg ah, al                                     # 004B52E9
    shl al, 6                                            # 004B52EB
    or al, 1                                             # 004B52EE
    movsx ebp, word ptr [__523378]                       # 004B52F0
    push eax                                             # 004B52F7
    push ebx                                             # 004B52F8
    msvc_mov ebx, ebp                                    # 004B52F9
    mov eax, 0xa                                         # 004B52FB
    call _sub_489CB5                                     # 004B5300
    pop ebx                                              # 004B5305
    pop eax                                              # 004B5306
    msvc_jmp _sub_4B4ECB                                 # 004B5307

    .global _sub_4B530C
_sub_4B530C:
    and dword ptr [esi + 0x42], 0xffffbfff               # 004B530C
    movzx eax, dx                                        # 004B5313
    msvc_xor edx, edx                                    # 004B5316
    mov ecx, 0xa                                         # 004B5318
    div ecx                                              # 004B531D
    cmp ax, word ptr [esi + 0x840]                       # 004B531F
    je _sub_4B56CD                                       # 004B5326
    mov word ptr [esi + 0x840], ax                       # 004B532C
    call _sub_4CA4BD                                     # 004B5333
    ret                                                  # 004B5338

    .global _sub_4B5339
_sub_4B5339:
    cmp ax, 0xa                                          # 004B5339
    jne _sub_4B56CD                                      # 004B533D
    bt dword ptr [__523368], 3                           # 004B5343
    jae .L4B5368                                         # 004B534B
    cmp byte ptr [__523392], 0x17                        # 004B534D
    jne .L4B5368                                         # 004B5354
    mov bp, word ptr [esi + 0x40]                        # 004B5356
    cmp bp, word ptr [__523390]                          # 004B535A
    je .L4B5368                                          # 004B5361
    mov ebx, 0x25                                        # 004B5363
.L4B5368:
    ret                                                  # 004B5368

    .global _sub_4B5369
_sub_4B5369:
    movzx eax, dx                                        # 004B5369
    msvc_xor edx, edx                                    # 004B536C
    mov ecx, 0xa                                         # 004B536E
    div ecx                                              # 004B5373
    movzx edi, word ptr [esi + 0x40]                     # 004B5375
    shl edi, 7                                           # 004B5379
    add_offset edi, _things                              # 004B537C
    mov edi, dword ptr [edi + 0x46]                      # 004B5382
    msvc_mov cx, ax                                      # 004B5385
    dec cx                                               # 004B5388
    js .L4B53AB                                          # 004B538A
.L4B538C:
    mov bl, byte ptr [edi + __987C5C]                    # 004B538C
    and ebx, 7                                           # 004B5392
    cmp bl, 0                                            # 004B5395
    je .L4B53A7                                          # 004B5398
    dec cx                                               # 004B539A
    js .L4B53AB                                          # 004B539C
    add edi, dword ptr [ebx*4 + __4FE070]                # 004B539E
    jmp .L4B538C                                         # 004B53A5
.L4B53A7:
    mov ax, 0xffff                                       # 004B53A7
.L4B53AB:
    bt dword ptr [__523368], 3                           # 004B53AB
    jae .L4B53CF                                         # 004B53B3
    cmp byte ptr [__523392], 0x17                        # 004B53B5
    jne .L4B53CF                                         # 004B53BC
    mov bp, word ptr [esi + 0x40]                        # 004B53BE
    cmp bp, word ptr [__523390]                          # 004B53C2
    jne .L4B54D7                                         # 004B53C9
.L4B53CF:
    msvc_or ax, ax                                       # 004B53CF
    je .L4B5494                                          # 004B53D2
    cmp ax, word ptr [esi + 0x842]                       # 004B53D8
    je .L4B53EE                                          # 004B53DF
    mov word ptr [esi + 0x842], ax                       # 004B53E1
    call _sub_4CA4BD                                     # 004B53E8
    ret                                                  # 004B53ED
.L4B53EE:
    cmp ax, -1                                           # 004B53EE
    je _sub_4B56CD                                       # 004B53F2
    cmp bl, 1                                            # 004B53F8
    je .L4B5408                                          # 004B53FB
    cmp bl, 2                                            # 004B53FD
    je .L4B5408                                          # 004B5400
    cmp bl, 3                                            # 004B5402
    je .L4B5445                                          # 004B5405
    ret                                                  # 004B5407
.L4B5408:
    mov bh, byte ptr [edi + __987C5C]                    # 004B5408
    shr bh, 6                                            # 004B540E
    mov bl, byte ptr [edi + __987C5C+1]                  # 004B5411
    imul ebx, ebx, 0x3d2                                 # 004B5417
    mov ax, word ptr [ebx + _stations+2]                 # 004B541D
    mov cx, word ptr [ebx + _stations+4]                 # 004B5424
    mov dx, word ptr [ebx + _stations+6]                 # 004B542B
    add dx, 0x20                                         # 004B5432
    push esi                                             # 004B5436
    call _sub_4CE438                                     # 004B5437
    jb .L4B5443                                          # 004B543C
    call _sub_4C6827                                     # 004B543E
.L4B5443:
    pop esi                                              # 004B5443
    ret                                                  # 004B5444
.L4B5445:
    mov ah, byte ptr [edi + __987C5C]                    # 004B5445
    mov al, byte ptr [edi + __987C5C+1]                  # 004B544B
    shr ah, 7                                            # 004B5451
    mov ch, byte ptr [edi + __987C5C+2]                  # 004B5454
    mov cl, byte ptr [edi + __987C5C+3]                  # 004B545A
    shr ch, 7                                            # 004B5460
    mov dl, byte ptr [edi + __987C5C+2]                  # 004B5463
    and dx, 0x7f                                         # 004B5469
    shl ax, 5                                            # 004B546D
    shl cx, 5                                            # 004B5471
    shl dx, 3                                            # 004B5475
    add ax, 0x10                                         # 004B5479
    add cx, 0x10                                         # 004B547D
    add dx, 0x20                                         # 004B5481
    push esi                                             # 004B5485
    call _sub_4CE438                                     # 004B5486
    jb .L4B5492                                          # 004B548B
    call _sub_4C6827                                     # 004B548D
.L4B5492:
    pop esi                                              # 004B5492
    ret                                                  # 004B5493
.L4B5494:
    movzx edx, word ptr [esi + 0x40]                     # 004B5494
    shl edx, 7                                           # 004B5498
    add_offset edx, _things                              # 004B549B
    mov dl, byte ptr [edx + 0x21]                        # 004B54A1
    cmp dl, byte ptr [_scenarioChunk3+36]                # 004B54A4
    jne _sub_4B56CD                                      # 004B54AA
    push esi                                             # 004B54B0
    mov dx, word ptr [esi + 0x40]                        # 004B54B1
    mov bh, 2                                            # 004B54B5
    mov bl, 1                                            # 004B54B7
    mov word ptr [__9C68E8], 0                           # 004B54B9
    mov esi, 0xc                                         # 004B54C2
    call _sub_431315                                     # 004B54C7
    pop esi                                              # 004B54CC
    mov word ptr [esi + 0x842], 0xffff                   # 004B54CD
    ret                                                  # 004B54D6
.L4B54D7:
    msvc_or ax, ax                                       # 004B54D7
    je _sub_4B56CD                                       # 004B54DA
    cmp ax, -1                                           # 004B54E0
    je .L4B5527                                          # 004B54E4
    push esi                                             # 004B54E6
    mov cl, 0x17                                         # 004B54E7
    mov dx, word ptr [__523390]                          # 004B54E9
    call _sub_4C9B56                                     # 004B54F0
    je .L4B5525                                          # 004B54F5
    movsx ebp, word ptr [__523378]                       # 004B54F7
    push eax                                             # 004B54FE
    push ebx                                             # 004B54FF
    msvc_mov ebx, ebp                                    # 004B5500
    mov eax, 0xa                                         # 004B5502
    call _sub_489CB5                                     # 004B5507
    pop ebx                                              # 004B550C
    pop eax                                              # 004B550D
    mov eax, dword ptr [edi + __987C5C]                  # 004B550E
    mov cx, word ptr [edi + __987C5C+4]                  # 004B5514
    call _sub_4B4ECB                                     # 004B551B
    call _sub_4CC750                                     # 004B5520
.L4B5525:
    pop esi                                              # 004B5525
    ret                                                  # 004B5526
.L4B5527:
    movsx ebp, word ptr [__523378]                       # 004B5527
    push eax                                             # 004B552E
    push ebx                                             # 004B552F
    msvc_mov ebx, ebp                                    # 004B5530
    mov eax, 0xa                                         # 004B5532
    call _sub_489CB5                                     # 004B5537
    pop ebx                                              # 004B553C
    pop eax                                              # 004B553D
    movzx ebp, word ptr [esi + 0x40]                     # 004B553E
    shl ebp, 7                                           # 004B5542
    add_offset ebp, _things                              # 004B5545
    msvc_xor edi, edi                                    # 004B554B
.L4B554D:
    push edi                                             # 004B554D
    push esi                                             # 004B554E
    push ebp                                             # 004B554F
    add edi, dword ptr [ebp + 0x46]                      # 004B5550
    mov bl, byte ptr [edi + __987C5C]                    # 004B5553
    and ebx, 7                                           # 004B5559
    cmp bl, 0                                            # 004B555C
    je .L4B55A3                                          # 004B555F
    mov cl, 0x17                                         # 004B5561
    mov dx, word ptr [__523390]                          # 004B5563
    call _sub_4C9B56                                     # 004B556A
    je .L4B55A3                                          # 004B556F
    mov eax, dword ptr [edi + __987C5C]                  # 004B5571
    mov cx, word ptr [edi + __987C5C+4]                  # 004B5577
    call _sub_4B4ECB                                     # 004B557E
    call _sub_4CC750                                     # 004B5583
    pop ebp                                              # 004B5588
    pop esi                                              # 004B5589
    pop edi                                              # 004B558A
    add edi, dword ptr [ebp + 0x46]                      # 004B558B
    mov bl, byte ptr [edi + __987C5C]                    # 004B558E
    and ebx, 7                                           # 004B5594
    add edi, dword ptr [ebx*4 + __4FE070]                # 004B5597
    sub edi, dword ptr [ebp + 0x46]                      # 004B559E
    jmp .L4B554D                                         # 004B55A1
.L4B55A3:
    pop ebp                                              # 004B55A3
    pop esi                                              # 004B55A4
    pop edi                                              # 004B55A5
    ret                                                  # 004B55A6

    .global _sub_4B55A7
_sub_4B55A7:
    or dword ptr [esi + 0x42], 0x4000                    # 004B55A7
    ret                                                  # 004B55AE

    .global _sub_4B55AF
_sub_4B55AF:
    test dword ptr [esi + 0x42], 0x4000                  # 004B55AF
    je .L4B55D0                                          # 004B55B6
    cmp word ptr [esi + 0x840], -1                       # 004B55B8
    je .L4B55D0                                          # 004B55C0
    mov word ptr [esi + 0x840], 0xffff                   # 004B55C2
    call _sub_4CA4BD                                     # 004B55CB
.L4B55D0:
    ret                                                  # 004B55D0

    .global _sub_4B55D1
_sub_4B55D1:
    inc word ptr [esi + 0x872]                           # 004B55D1
    mov ebp, dword ptr [esi]                             # 004B55D8
    call dword ptr [ebp + 0x68]                          # 004B55DA
    mov ax, 0x897                                        # 004B55DD
    mov bx, word ptr [esi + 0x40]                        # 004B55E1
    call _sub_4CB966                                     # 004B55E5
    movzx ebx, word ptr [esi + 0x40]                     # 004B55EA
    shl ebx, 7                                           # 004B55EE
    add_offset ebx, _things                              # 004B55F1
    mov al, byte ptr [ebx + 0x21]                        # 004B55F7
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B55FA
    jne _sub_4B56CD                                      # 004B5600
    msvc_mov edi, esi                                    # 004B5606
.L4B5608:
    add edi, 0x88e                                       # 004B5608
    cmp edi, dword ptr [__113D754]                       # 004B560E
    jae .L4B5621                                         # 004B5614
    test dword ptr [edi + 0x42], 2                       # 004B5616
    jne .L4B5608                                         # 004B561D
    jmp .L4B564D                                         # 004B561F
.L4B5621:
    bt dword ptr [__523368], 3                           # 004B5621
    jae _sub_4B505D                                      # 004B5629
    cmp byte ptr [__523392], 0x17                        # 004B562F
    jne _sub_4B505D                                      # 004B5636
    mov bp, word ptr [esi + 0x40]                        # 004B563C
    cmp bp, word ptr [__523390]                          # 004B5640
    jne _sub_4B505D                                      # 004B5647
.L4B564D:
    ret                                                  # 004B564D

    .global _sub_4B564E
_sub_4B564E:
    call _sub_4B1E94                                     # 004B564E
    mov word ptr [esi + 0x38], 0x109                     # 004B5653
    mov word ptr [esi + 0x3c], 0xb2                      # 004B5659
    mov word ptr [esi + 0x3a], 0x258                     # 004B565F
    mov word ptr [esi + 0x3e], 0x1b8                     # 004B5665
    mov ax, word ptr [esi + 0x38]                        # 004B566B
    cmp ax, word ptr [esi + 0x34]                        # 004B566F
    jbe .L4B567E                                         # 004B5673
    mov word ptr [esi + 0x34], ax                        # 004B5675
    call _sub_4CA4BD                                     # 004B5679
.L4B567E:
    mov ax, word ptr [esi + 0x3a]                        # 004B567E
    cmp ax, word ptr [esi + 0x34]                        # 004B5682
    jae .L4B5691                                         # 004B5686
    call _sub_4CA4BD                                     # 004B5688
    mov word ptr [esi + 0x34], ax                        # 004B568D
.L4B5691:
    mov ax, word ptr [esi + 0x3c]                        # 004B5691
    cmp ax, word ptr [esi + 0x36]                        # 004B5695
    jbe .L4B56A4                                         # 004B5699
    mov word ptr [esi + 0x36], ax                        # 004B569B
    call _sub_4CA4BD                                     # 004B569F
.L4B56A4:
    mov ax, word ptr [esi + 0x3e]                        # 004B56A4
    cmp ax, word ptr [esi + 0x36]                        # 004B56A8
    jae .L4B56B7                                         # 004B56AC
    call _sub_4CA4BD                                     # 004B56AE
    mov word ptr [esi + 0x36], ax                        # 004B56B3
.L4B56B7:
    ret                                                  # 004B56B7

    .global _sub_4B56B8
_sub_4B56B8:
    push esi                                             # 004B56B8
    movzx esi, word ptr [esi + 0x40]                     # 004B56B9
    shl esi, 7                                           # 004B56BD
    add_offset esi, _things                              # 004B56C0
    call _sub_470824                                     # 004B56C6
    pop esi                                              # 004B56CB
    ret                                                  # 004B56CC

    .global _sub_4B56CD
_sub_4B56CD:
    ret                                                  # 004B56CD

    .global _sub_4B56CE
_sub_4B56CE:
    movzx edx, word ptr [esi + 0x870]                    # 004B56CE
    mov eax, dword ptr [edx*4 + __5002BC]                # 004B56D5
    cmp eax, dword ptr [esi + 0x2c]                      # 004B56DC
    je .L4B56E9                                          # 004B56DF
    mov dword ptr [esi + 0x2c], eax                      # 004B56E1
    call _sub_4CA17F                                     # 004B56E4
.L4B56E9:
    mov edx, dword ptr [esi + 0x1c]                      # 004B56E9
    and edx, 0xfffffe0f                                  # 004B56EC
    movzx ecx, word ptr [esi + 0x870]                    # 004B56F2
    add ecx, 4                                           # 004B56F9
    bts edx, ecx                                         # 004B56FC
    mov dword ptr [esi + 0x1c], edx                      # 004B56FF
    movzx ebx, word ptr [esi + 0x40]                     # 004B5702
    shl ebx, 7                                           # 004B5706
    add_offset ebx, _things                              # 004B5709
    mov ax, word ptr [ebx + 0x44]                        # 004B570F
    mov cx, word ptr [ebx + 0x22]                        # 004B5713
    mov word ptr [__112C828], ax                         # 004B5717
    mov word ptr [__112C826], cx                         # 004B571D
    mov ax, word ptr [esi + 0x34]                        # 004B5724
    mov cx, word ptr [esi + 0x36]                        # 004B5728
    dec ax                                               # 004B572C
    dec cx                                               # 004B572E
    mov word ptr [_ui_vehicle___widgets_3+4], ax         # 004B5730
    mov word ptr [_ui_vehicle___widgets_3+8], cx         # 004B5736
    mov word ptr [_ui_vehicle___widgets_3+52], ax        # 004B573D
    mov word ptr [_ui_vehicle___widgets_3+56], cx        # 004B5743
    dec ax                                               # 004B574A
    mov word ptr [_ui_vehicle___widgets_3+20], ax        # 004B574C
    sub ax, 0xd                                          # 004B5752
    mov word ptr [_ui_vehicle___widgets_3+34], ax        # 004B5756
    add ax, 0xc                                          # 004B575C
    mov word ptr [_ui_vehicle___widgets_3+36], ax        # 004B5760
    call _sub_4B5ECD                                     # 004B5766
    ret                                                  # 004B576B

    .global _sub_4B576C
_sub_4B576C:
    call _sub_4CA4DF                                     # 004B576C
    call _sub_4B5F0D                                     # 004B5771
    mov dx, word ptr [esi + 0x32]                        # 004B5776
    add dx, 0x2e                                         # 004B577A
    movzx ebx, word ptr [esi + 0x40]                     # 004B577E
    shl ebx, 7                                           # 004B5782
    add_offset ebx, _things                              # 004B5785
    push ebx                                             # 004B578B
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B578C
    shl ebx, 7                                           # 004B5790
    add_offset ebx, _things                              # 004B5793
    mov eax, dword ptr [ebx + 0x53]                      # 004B5799
    cmp eax, -1                                          # 004B579C
    jne .L4B57C1                                         # 004B579F
    push edx                                             # 004B57A1
    push esi                                             # 004B57A2
    mov cx, word ptr [esi + 0x30]                        # 004B57A3
    add cx, 4                                            # 004B57A7
    mov bx, 0x724                                        # 004B57AB
    msvc_xor al, al                                      # 004B57AF
    call _sub_494B3F                                     # 004B57B1
    pop esi                                              # 004B57B6
    pop edx                                              # 004B57B7
    add dx, 0xa                                          # 004B57B8
    msvc_jmp .L4B586F                                    # 004B57BC
.L4B57C1:
    mov dword ptr [__112C826], eax                       # 004B57C1
    push ebx                                             # 004B57C6
    push edx                                             # 004B57C7
    push esi                                             # 004B57C8
    mov cx, word ptr [esi + 0x30]                        # 004B57C9
    add cx, 4                                            # 004B57CD
    mov bx, 0x725                                        # 004B57D1
    mov_offset esi, __112C826                            # 004B57D5
    msvc_xor al, al                                      # 004B57DA
    call _sub_494B3F                                     # 004B57DC
    pop esi                                              # 004B57E1
    pop edx                                              # 004B57E2
    pop ebx                                              # 004B57E3
    add dx, 0xa                                          # 004B57E4
    msvc_xor ebp, ebp                                    # 004B57E8
.L4B57EA:
    movzx eax, byte ptr [ebp + ebx + 0x57]               # 004B57EA
    cmp al, 0xff                                         # 004B57EF
    je .L4B5865                                          # 004B57F1
    mov eax, dword ptr [eax*4 + _cargoObjects]           # 004B57F3
    mov cx, word ptr [eax + 8]                           # 004B57FA
    cmp word ptr [ebx + ebp*2 + 0x5b], 1                 # 004B57FE
    je .L4B580A                                          # 004B5804
    mov cx, word ptr [eax + 0xa]                         # 004B5806
.L4B580A:
    mov word ptr [__112C826], cx                         # 004B580A
    movzx ecx, word ptr [ebx + ebp*2 + 0x5b]             # 004B5811
    mov dword ptr [__112C828], ecx                       # 004B5816
    mov cx, word ptr [ebx + ebp*2 + 0x63]                # 004B581C
    mov word ptr [__112C82C], cx                         # 004B5821
    movzx cx, byte ptr [ebp + ebx + 0x6b]                # 004B5828
    mov word ptr [__112C82E], cx                         # 004B582E
    mov ecx, dword ptr [ebx + ebp*4 + 0x6f]              # 004B5835
    mov dword ptr [__112C830], ecx                       # 004B5839
    push ebx                                             # 004B583F
    push esi                                             # 004B5840
    push ebp                                             # 004B5841
    mov cx, word ptr [esi + 0x30]                        # 004B5842
    add cx, 8                                            # 004B5846
    mov bp, word ptr [esi + 0x34]                        # 004B584A
    sub bp, 0xc                                          # 004B584E
    mov_offset esi, __112C826                            # 004B5852
    msvc_xor al, al                                      # 004B5857
    mov bx, 0x726                                        # 004B5859
    call _sub_495224                                     # 004B585D
    pop ebp                                              # 004B5862
    pop esi                                              # 004B5863
    pop ebx                                              # 004B5864
.L4B5865:
    inc ebp                                              # 004B5865
    cmp ebp, 4                                           # 004B5866
    jb .L4B57EA                                          # 004B5869
.L4B586F:
    pop ebx                                              # 004B586F
    add dx, 5                                            # 004B5870
    cmp word ptr [ebx + 0x77], 0                         # 004B5874
    je .L4B589B                                          # 004B5879
    push ebx                                             # 004B587B
    push edx                                             # 004B587C
    push esi                                             # 004B587D
    mov cx, word ptr [esi + 0x30]                        # 004B587E
    add cx, 4                                            # 004B5882
    lea esi, [ebx + 0x77]                                # 004B5886
    mov bx, 0x7c1                                        # 004B5889
    msvc_xor al, al                                      # 004B588D
    call _sub_494B3F                                     # 004B588F
    pop esi                                              # 004B5894
    pop edx                                              # 004B5895
    pop ebx                                              # 004B5896
    add dx, 0xf                                          # 004B5897
.L4B589B:
    push ebx                                             # 004B589B
    push edx                                             # 004B589C
    push esi                                             # 004B589D
    push esi                                             # 004B589E
    msvc_mov esi, ebx                                    # 004B589F
    call _sub_4C3BA6                                     # 004B58A1
    mov dword ptr [__112C826], ebx                       # 004B58A6
    pop esi                                              # 004B58AC
    mov cx, word ptr [esi + 0x30]                        # 004B58AD
    add cx, 4                                            # 004B58B1
    mov bx, 0x5ec                                        # 004B58B5
    mov_offset esi, __112C826                            # 004B58B9
    msvc_xor al, al                                      # 004B58BE
    call _sub_494B3F                                     # 004B58C0
    pop esi                                              # 004B58C5
    pop edx                                              # 004B58C6
    pop ebx                                              # 004B58C7
    add dx, 0xa                                          # 004B58C8
    push ebx                                             # 004B58CC
    push edx                                             # 004B58CD
    push esi                                             # 004B58CE
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B58CF
    shl ebx, 7                                           # 004B58D3
    add_offset ebx, _things                              # 004B58D6
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B58DC
    shl ebx, 7                                           # 004B58E0
    add_offset ebx, _things                              # 004B58E3
    mov eax, dword ptr [ebx + 0x62]                      # 004B58E9
    add eax, dword ptr [ebx + 0x66]                      # 004B58EC
    add eax, dword ptr [ebx + 0x6a]                      # 004B58EF
    add eax, dword ptr [ebx + 0x6e]                      # 004B58F2
    sar eax, 2                                           # 004B58F5
    mov dword ptr [__112C826], eax                       # 004B58F8
    mov cx, word ptr [esi + 0x30]                        # 004B58FD
    add cx, 4                                            # 004B5901
    mov bx, 0x5ed                                        # 004B5905
    mov_offset esi, __112C826                            # 004B5909
    msvc_xor al, al                                      # 004B590E
    call _sub_494B3F                                     # 004B5910
    pop esi                                              # 004B5915
    pop edx                                              # 004B5916
    pop ebx                                              # 004B5917
    add dx, 0xf                                          # 004B5918
    mov dx, word ptr [esi + 0x32]                        # 004B591C
    add dx, word ptr [esi + 0x36]                        # 004B5920
    sub dx, 0xe                                          # 004B5924
    push ebx                                             # 004B5928
    push edx                                             # 004B5929
    push esi                                             # 004B592A
    mov cx, word ptr [esi + 0x30]                        # 004B592B
    add cx, 4                                            # 004B592F
    lea esi, [ebx + 0x69]                                # 004B5933
    mov bx, 0x723                                        # 004B5936
    msvc_xor al, al                                      # 004B593A
    call _sub_494B3F                                     # 004B593C
    pop esi                                              # 004B5941
    pop edx                                              # 004B5942
    pop ebx                                              # 004B5943
    ret                                                  # 004B5944

    .global _sub_4B5945
_sub_4B5945:
    cmp dx, 2                                            # 004B5945
    je _sub_4CC6EA                                       # 004B5949
    cmp dx, 4                                            # 004B594F
    jb .L4B595F                                          # 004B5953
    cmp dx, 8                                            # 004B5955
    jbe _sub_4B2566                                      # 004B5959
.L4B595F:
    cmp dx, 1                                            # 004B595F
    je _sub_4B2680                                       # 004B5963
    ret                                                  # 004B5969

    .global _sub_4B596A
_sub_4B596A:
    ret                                                  # 004B596A

    .global _sub_4B596B
_sub_4B596B:
    cmp dx, 1                                            # 004B596B
    je _sub_4B26C0                                       # 004B596F
    ret                                                  # 004B5975

    .global _sub_4B5976
_sub_4B5976:
    ret                                                  # 004B5976

    .global _sub_4B5977
_sub_4B5977:
    movzx ebx, word ptr [esi + 0x40]                     # 004B5977
    shl ebx, 7                                           # 004B597B
    add_offset ebx, _things                              # 004B597E
    movzx edx, byte ptr [ebx + 0x5e]                     # 004B5984
    add dx, 0x4fc                                        # 004B5988
    mov word ptr [__112C828], dx                         # 004B598D
    ret                                                  # 004B5994

    .global _sub_4B5995
_sub_4B5995:
    inc word ptr [esi + 0x872]                           # 004B5995
    mov ebp, dword ptr [esi]                             # 004B599C
    call dword ptr [ebp + 0x68]                          # 004B599E
    mov ax, 0x797                                        # 004B59A1
    mov bx, word ptr [esi + 0x40]                        # 004B59A5
    call _sub_4CB966                                     # 004B59A9
    ret                                                  # 004B59AE

    .global _sub_4B59AF
_sub_4B59AF:
    call _sub_4B1E94                                     # 004B59AF
    mov word ptr [esi + 0x38], 0x190                     # 004B59B4
    mov word ptr [esi + 0x3c], 0xca                      # 004B59BA
    mov word ptr [esi + 0x3a], 0x190                     # 004B59C0
    mov word ptr [esi + 0x3e], 0xca                      # 004B59C6
    mov ax, word ptr [esi + 0x38]                        # 004B59CC
    cmp ax, word ptr [esi + 0x34]                        # 004B59D0
    jbe .L4B59DF                                         # 004B59D4
    mov word ptr [esi + 0x34], ax                        # 004B59D6
    call _sub_4CA4BD                                     # 004B59DA
.L4B59DF:
    mov ax, word ptr [esi + 0x3a]                        # 004B59DF
    cmp ax, word ptr [esi + 0x34]                        # 004B59E3
    jae .L4B59F2                                         # 004B59E7
    call _sub_4CA4BD                                     # 004B59E9
    mov word ptr [esi + 0x34], ax                        # 004B59EE
.L4B59F2:
    mov ax, word ptr [esi + 0x3c]                        # 004B59F2
    cmp ax, word ptr [esi + 0x36]                        # 004B59F6
    jbe .L4B5A05                                         # 004B59FA
    mov word ptr [esi + 0x36], ax                        # 004B59FC
    call _sub_4CA4BD                                     # 004B5A00
.L4B5A05:
    mov ax, word ptr [esi + 0x3e]                        # 004B5A05
    cmp ax, word ptr [esi + 0x36]                        # 004B5A09
    jae .L4B5A18                                         # 004B5A0D
    call _sub_4CA4BD                                     # 004B5A0F
    mov word ptr [esi + 0x36], ax                        # 004B5A14
.L4B5A18:
    ret                                                  # 004B5A18

    .global _sub_4B5A19
_sub_4B5A19:
    ret                                                  # 004B5A19

    .global _sub_4B5A1A
_sub_4B5A1A:
    push eax                                             # 004B5A1A
    push ebx                                             # 004B5A1B
    push ecx                                             # 004B5A1C
    push edx                                             # 004B5A1D
    push edi                                             # 004B5A1E
    push esi                                             # 004B5A1F
    movzx edi, word ptr [esi + 0x40]                     # 004B5A20
    shl edi, 7                                           # 004B5A24
    add_offset edi, _things                              # 004B5A27
    msvc_mov bx, cx                                      # 004B5A2D
    mov edx, 0xffffd7db                                  # 004B5A30
    cmp byte ptr [edi + 0x42], 3                         # 004B5A35
    jne .L4B5A40                                         # 004B5A39
    mov edx, 0xffffd7f7                                  # 004B5A3B
.L4B5A40:
    call _sub_459E54                                     # 004B5A40
    mov word ptr [__113623C], ax                         # 004B5A45
    mov word ptr [__113623E], cx                         # 004B5A4B
    cmp bl, 4                                            # 004B5A52
    je .L4B5AC9                                          # 004B5A55
    cmp bl, 0x10                                         # 004B5A57
    je .L4B5B25                                          # 004B5A5A
    cmp bl, 7                                            # 004B5A60
    je .L4B5B92                                          # 004B5A63
    cmp bl, 8                                            # 004B5A69
    je .L4B5BA3                                          # 004B5A6C
    cmp bl, 9                                            # 004B5A72
    je .L4B5B7F                                          # 004B5A75
    cmp bl, 0xa                                          # 004B5A7B
    je .L4B5B7F                                          # 004B5A7E
    cmp bl, 0xf                                          # 004B5A84
    je .L4B5BB9                                          # 004B5A87
    cmp bl, 0xb                                          # 004B5A8D
    je .L4B5A9B                                          # 004B5A90
.L4B5A92:
    mov bl, 0                                            # 004B5A92
    pop esi                                              # 004B5A94
    pop edi                                              # 004B5A95
    pop edx                                              # 004B5A96
    pop ecx                                              # 004B5A97
    pop ebx                                              # 004B5A98
    pop eax                                              # 004B5A99
    ret                                                  # 004B5A9A
.L4B5A9B:
    mov esi, dword ptr [esp]                             # 004B5A9B
    movzx esi, word ptr [esi + 0x40]                     # 004B5A9E
    shl esi, 7                                           # 004B5AA2
    add_offset esi, _things                              # 004B5AA5
    cmp byte ptr [esi + 0x42], 3                         # 004B5AAB
    jne .L4B5A92                                         # 004B5AAF
    mov word ptr [__50A018], 0x4cd                       # 004B5AB1
    mov byte ptr [esp + 0x10], bl                        # 004B5ABA
    mov dword ptr [esp + 8], edx                         # 004B5ABE
    pop esi                                              # 004B5AC2
    pop edi                                              # 004B5AC3
    pop edx                                              # 004B5AC4
    pop ecx                                              # 004B5AC5
    pop ebx                                              # 004B5AC6
    pop eax                                              # 004B5AC7
    ret                                                  # 004B5AC8
.L4B5AC9:
    mov al, byte ptr [edx + 7]                           # 004B5AC9
    and al, 0xf                                          # 004B5ACC
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B5ACE
    jne .L4B5A92                                         # 004B5AD4
    test byte ptr [edx + 1], 0x30                        # 004B5AD6
    jne .L4B5A92                                         # 004B5ADA
    test byte ptr [edx], 0x80                            # 004B5ADC
    je .L4B5AF1                                          # 004B5ADF
    test byte ptr [edx + 9], 0x30                        # 004B5AE1
    jne .L4B5AF1                                         # 004B5AE5
    add edx, 8                                           # 004B5AE7
    mov bl, 7                                            # 004B5AEA
    msvc_jmp .L4B5B92                                    # 004B5AEC
.L4B5AF1:
    mov esi, dword ptr [esp]                             # 004B5AF1
    movzx esi, word ptr [esi + 0x40]                     # 004B5AF4
    shl esi, 7                                           # 004B5AF8
    add_offset esi, _things                              # 004B5AFB
    cmp byte ptr [esi + 0x42], 2                         # 004B5B01
    je .L4B5A92                                          # 004B5B05
    cmp byte ptr [esi + 0x42], 3                         # 004B5B07
    je .L4B5A92                                          # 004B5B0B
    mov word ptr [__50A018], 0x4cd                       # 004B5B0D
    mov byte ptr [esp + 0x10], bl                        # 004B5B16
    mov dword ptr [esp + 8], edx                         # 004B5B1A
    pop esi                                              # 004B5B1E
    pop edi                                              # 004B5B1F
    pop edx                                              # 004B5B20
    pop ecx                                              # 004B5B21
    pop ebx                                              # 004B5B22
    pop eax                                              # 004B5B23
    ret                                                  # 004B5B24
.L4B5B25:
    test byte ptr [edx + 1], 0x30                        # 004B5B25
    jne .L4B5A92                                         # 004B5B29
    test byte ptr [edx], 0x80                            # 004B5B2F
    je .L4B5B4D                                          # 004B5B32
.L4B5B34:
    add edx, 8                                           # 004B5B34
    mov al, byte ptr [edx]                               # 004B5B37
    and al, 0x3c                                         # 004B5B39
    cmp al, 8                                            # 004B5B3B
    jne .L4B5B34                                         # 004B5B3D
    test byte ptr [edx + 1], 0x30                        # 004B5B3F
    jne .L4B5A92                                         # 004B5B43
    mov bl, 7                                            # 004B5B49
    jmp .L4B5BA3                                         # 004B5B4B
.L4B5B4D:
    mov esi, dword ptr [esp]                             # 004B5B4D
    movzx esi, word ptr [esi + 0x40]                     # 004B5B50
    shl esi, 7                                           # 004B5B54
    add_offset esi, _things                              # 004B5B57
    cmp byte ptr [esi + 0x42], 2                         # 004B5B5D
    je .L4B5A92                                          # 004B5B61
    mov word ptr [__50A018], 0x4cd                       # 004B5B67
    mov byte ptr [esp + 0x10], bl                        # 004B5B70
    mov dword ptr [esp + 8], edx                         # 004B5B74
    pop esi                                              # 004B5B78
    pop edi                                              # 004B5B79
    pop edx                                              # 004B5B7A
    pop ecx                                              # 004B5B7B
    pop ebx                                              # 004B5B7C
    pop eax                                              # 004B5B7D
    ret                                                  # 004B5B7E
.L4B5B7F:
    mov al, byte ptr [edx + 4]                           # 004B5B7F
    and al, 0xf                                          # 004B5B82
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B5B84
    jne .L4B5A92                                         # 004B5B8A
    jmp .L4B5BA3                                         # 004B5B90
.L4B5B92:
    mov al, byte ptr [edx - 1]                           # 004B5B92
    and al, 0xf                                          # 004B5B95
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B5B97
    jne .L4B5A92                                         # 004B5B9D
.L4B5BA3:
    test byte ptr [edx + 1], 0x30                        # 004B5BA3
    jne .L4B5A92                                         # 004B5BA7
    mov dx, word ptr [edx + 6]                           # 004B5BAD
    and edx, 0x3ff                                       # 004B5BB1
    mov bl, 0xf                                          # 004B5BB7
.L4B5BB9:
    msvc_mov ecx, edx                                    # 004B5BB9
    imul ecx, ecx, 0x3d2                                 # 004B5BBB
    mov al, byte ptr [ecx + _stations+40]                # 004B5BC1
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B5BC7
    jne .L4B5A92                                         # 004B5BCD
    push esi                                             # 004B5BD3
    lea esi, [ecx + _stations]                           # 004B5BD4
    mov word ptr [__F252A4], dx                          # 004B5BDA
    or word ptr [__F24484], 0x40                         # 004B5BE1
    call _sub_4CBA2D                                     # 004B5BE9
    pop esi                                              # 004B5BEE
    mov byte ptr [esp + 0x10], bl                        # 004B5BEF
    mov dword ptr [esp + 8], edx                         # 004B5BF3
    mov ax, word ptr [ecx + _stations]                   # 004B5BF7
    mov word ptr [__50A01A], ax                          # 004B5BFE
    mov ax, word ptr [ecx + _stations+44]                # 004B5C04
    mov word ptr [__50A01C], ax                          # 004B5C0B
    mov word ptr [__50A018], 0x4ce                       # 004B5C11
    mov esi, dword ptr [esp]                             # 004B5C1A
    movzx edi, word ptr [esi + 0x40]                     # 004B5C1D
    shl edi, 7                                           # 004B5C21
    add_offset edi, _things                              # 004B5C24
    mov cx, word ptr [esi + 0x842]                       # 004B5C2A
    mov ebp, dword ptr [edi + 0x46]                      # 004B5C31
    msvc_mov edx, ebp                                    # 004B5C34
    msvc_or cx, cx                                       # 004B5C36
    je .L4B5CBA                                          # 004B5C39
    js .L4B5C5A                                          # 004B5C3B
.L4B5C3D:
    msvc_mov ebp, edx                                    # 004B5C3D
    mov bl, byte ptr [edx + __987C5C]                    # 004B5C3F
    and ebx, 7                                           # 004B5C45
    add edx, dword ptr [ebx*4 + __4FE070]                # 004B5C48
    cmp bl, 0                                            # 004B5C4F
    je .L4B5C73                                          # 004B5C52
    dec cx                                               # 004B5C54
    jne .L4B5C3D                                         # 004B5C56
    jmp .L4B5C73                                         # 004B5C58
.L4B5C5A:
    mov bl, byte ptr [edx + __987C5C]                    # 004B5C5A
    and ebx, 7                                           # 004B5C60
    cmp bl, 0                                            # 004B5C63
    je .L4B5C73                                          # 004B5C66
    msvc_mov ebp, edx                                    # 004B5C68
    add edx, dword ptr [ebx*4 + __4FE070]                # 004B5C6A
    jmp .L4B5C5A                                         # 004B5C71
.L4B5C73:
    mov al, byte ptr [ebp + __987C5C]                    # 004B5C73
    and al, 7                                            # 004B5C79
    cmp al, 1                                            # 004B5C7B
    jne .L4B5CBA                                         # 004B5C7D
    mov ah, byte ptr [ebp + __987C5C]                    # 004B5C7F
    shr ah, 6                                            # 004B5C85
    mov al, byte ptr [ebp + __987C5C+1]                  # 004B5C88
    cmp ax, word ptr [esp + 8]                           # 004B5C8E
    jne .L4B5CBA                                         # 004B5C93
    mov esi, dword ptr [esp]                             # 004B5C95
    movzx esi, word ptr [esi + 0x40]                     # 004B5C98
    shl esi, 7                                           # 004B5C9C
    add_offset esi, _things                              # 004B5C9F
    cmp byte ptr [esi + 0x42], 2                         # 004B5CA5
    je .L4B5CBA                                          # 004B5CA9
    cmp byte ptr [esi + 0x42], 3                         # 004B5CAB
    je .L4B5CBA                                          # 004B5CAF
    mov word ptr [__50A018], 0x4cf                       # 004B5CB1
.L4B5CBA:
    pop esi                                              # 004B5CBA
    pop edi                                              # 004B5CBB
    pop edx                                              # 004B5CBC
    pop ecx                                              # 004B5CBD
    pop ebx                                              # 004B5CBE
    pop eax                                              # 004B5CBF
    ret                                                  # 004B5CC0

    .global _sub_4B5CC1
_sub_4B5CC1:
    movzx ebx, word ptr [esi + 0x40]                     # 004B5CC1
    shl ebx, 7                                           # 004B5CC5
    add_offset ebx, _things                              # 004B5CC8
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5CCE
    shl ebx, 7                                           # 004B5CD2
    add_offset ebx, _things                              # 004B5CD5
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5CDB
    shl ebx, 7                                           # 004B5CDF
    add_offset ebx, _things                              # 004B5CE2
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5CE8
    shl ebx, 7                                           # 004B5CEC
    add_offset ebx, _things                              # 004B5CEF
    msvc_mov ebp, ebx                                    # 004B5CF5
    cmp byte ptr [ebx + 1], 6                            # 004B5CF7
    je .L4B5D7C                                          # 004B5CFB
    sub dx, word ptr [esi + 0x83e]                       # 004B5CFD
    js .L4B5D81                                          # 004B5D04
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5D06
    shl ebx, 7                                           # 004B5D0A
    add_offset ebx, _things                              # 004B5D0D
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5D13
    shl ebx, 7                                           # 004B5D17
    add_offset ebx, _things                              # 004B5D1A
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5D20
    shl ebx, 7                                           # 004B5D24
    add_offset ebx, _things                              # 004B5D27
.L4B5D2D:
    cmp byte ptr [ebx + 1], 6                            # 004B5D2D
    je .L4B5D7C                                          # 004B5D31
    msvc_mov ebp, ebx                                    # 004B5D33
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5D35
    shl ebx, 7                                           # 004B5D39
    add_offset ebx, _things                              # 004B5D3C
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5D42
    shl ebx, 7                                           # 004B5D46
    add_offset ebx, _things                              # 004B5D49
    cmp byte ptr [ebx + 1], 5                            # 004B5D4F
    je .L4B5D6D                                          # 004B5D53
    sub dx, word ptr [esi + 0x83e]                       # 004B5D55
    js .L4B5D81                                          # 004B5D5C
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5D5E
    shl ebx, 7                                           # 004B5D62
    add_offset ebx, _things                              # 004B5D65
    jmp .L4B5D2D                                         # 004B5D6B
.L4B5D6D:
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B5D6D
    shl ebx, 7                                           # 004B5D71
    add_offset ebx, _things                              # 004B5D74
    jmp .L4B5D2D                                         # 004B5D7A
.L4B5D7C:
    mov ebp, 0xffffffff                                  # 004B5D7C
.L4B5D81:
    ret                                                  # 004B5D81

    .global _sub_4B5D82
_sub_4B5D82:
    msvc_xor eax, eax                                    # 004B5D82
    mov dword ptr [esi + 0x14], eax                      # 004B5D84
    ret                                                  # 004B5D87

    .global _sub_4B5D88
_sub_4B5D88:
    cmp word ptr [esi + 0x870], 0                        # 004B5D88
    jne .L4B5E71                                         # 004B5D90
    mov ebp, dword ptr [esi]                             # 004B5D96
    call dword ptr [ebp + 0x68]                          # 004B5D98
    movzx ebp, word ptr [esi + 0x40]                     # 004B5D9B
    shl ebp, 7                                           # 004B5D9F
    add_offset ebp, _things                              # 004B5DA2
    cmp word ptr [ebp + 0x30], -1                        # 004B5DA8
    je .L4B5E72                                          # 004B5DAD
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B5DB3
    shl ebp, 7                                           # 004B5DB7
    add_offset ebp, _things                              # 004B5DBA
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B5DC0
    shl ebp, 7                                           # 004B5DC4
    add_offset ebp, _things                              # 004B5DC7
    mov dx, word ptr [ebp + 0xa]                         # 004B5DCD
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B5DD1
    shl ebp, 7                                           # 004B5DD5
    add_offset ebp, _things                              # 004B5DD8
    cmp byte ptr [ebp + 1], 6                            # 004B5DDE
    je .L4B5DFF                                          # 004B5DE2
    mov dx, word ptr [ebp + 0xa]                         # 004B5DE4
    cmp byte ptr [ebp + 1], 3                            # 004B5DE8
    jne .L4B5DFF                                         # 004B5DEC
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B5DEE
    shl ebp, 7                                           # 004B5DF2
    add_offset ebp, _things                              # 004B5DF5
    mov dx, word ptr [ebp + 0x3a]                        # 004B5DFB
.L4B5DFF:
    movzx edx, dx                                        # 004B5DFF
    or edx, 0xc0000000                                   # 004B5E02
    msvc_xor ecx, ecx                                    # 004B5E08
    mov ch, byte ptr [__E3F0B8]                          # 004B5E0A
    cmp dword ptr [esi + 4], 0                           # 004B5E10
    je .L4B5E3B                                          # 004B5E14
    cmp edx, dword ptr [esi + 0x848]                     # 004B5E16
    jne .L4B5E26                                         # 004B5E1C
    cmp ecx, dword ptr [esi + 0x84c]                     # 004B5E1E
    je .L4B5E71                                          # 004B5E24
.L4B5E26:
    msvc_xor edi, edi                                    # 004B5E26
    xchg dword ptr [esi + 4], edi                        # 004B5E28
    mov ax, word ptr [edi + 0x12]                        # 004B5E2B
    mov word ptr [edi], 0                                # 004B5E2F
    call _sub_4CEC25                                     # 004B5E34
    jmp .L4B5E4E                                         # 004B5E39
.L4B5E3B:
    msvc_xor ax, ax                                      # 004B5E3B
    test dword ptr [__50AEB4], 1                         # 004B5E3E
    je .L4B5E4E                                          # 004B5E48
    or ax, 0x20                                          # 004B5E4A
.L4B5E4E:
    push eax                                             # 004B5E4E
    mov dword ptr [esi + 0x848], edx                     # 004B5E4F
    mov dword ptr [esi + 0x84c], ecx                     # 004B5E55
    call _sub_4B5E88                                     # 004B5E5B
    pop eax                                              # 004B5E60
    mov edi, dword ptr [esi + 4]                         # 004B5E61
    msvc_or edi, edi                                     # 004B5E64
    je .L4B5E71                                          # 004B5E66
    mov word ptr [edi + 0x12], ax                        # 004B5E68
    call _sub_4CA4BD                                     # 004B5E6C
.L4B5E71:
    ret                                                  # 004B5E71
.L4B5E72:
    cmp dword ptr [esi + 4], 0                           # 004B5E72
    je .L4B5E71                                          # 004B5E76
    msvc_xor edi, edi                                    # 004B5E78
    xchg dword ptr [esi + 4], edi                        # 004B5E7A
    mov word ptr [edi], 0                                # 004B5E7D
    call _sub_4CA4BD                                     # 004B5E82
    ret                                                  # 004B5E87

    .global _sub_4B5E88
_sub_4B5E88:
    cmp dword ptr [esi + 4], 0                           # 004B5E88
    jne .L4B5ECC                                         # 004B5E8C
    mov ax, word ptr [_ui_vehicle___widgets_0+150]       # 004B5E8E
    mov bx, word ptr [_ui_vehicle___widgets_0+152]       # 004B5E94
    shl eax, 0x10                                        # 004B5E9B
    shl ebx, 0x10                                        # 004B5E9E
    mov ax, word ptr [_ui_vehicle___widgets_0+146]       # 004B5EA1
    mov bx, word ptr [_ui_vehicle___widgets_0+148]       # 004B5EA7
    msvc_sub ebx, eax                                    # 004B5EAE
    sub ebx, 0x10001                                     # 004B5EB0
    add eax, 0x10001                                     # 004B5EB6
    add eax, dword ptr [esi + 0x30]                      # 004B5EBB
    call _sub_4CA2D0                                     # 004B5EBE
    or dword ptr [esi + 0x42], 4                         # 004B5EC3
    call _sub_4CA4BD                                     # 004B5EC7
.L4B5ECC:
    ret                                                  # 004B5ECC

    .global _sub_4B5ECD
_sub_4B5ECD:
    call _sub_4B5ED3                                     # 004B5ECD
    ret                                                  # 004B5ED2

    .global _sub_4B5ED3
_sub_4B5ED3:
    mov edi, dword ptr [esi + 0x2c]                      # 004B5ED3
    mov eax, dword ptr [esi + 0x14]                      # 004B5ED6
    add edi, 0x40                                        # 004B5ED9
    mov bx, word ptr [edi + 2]                           # 004B5EDC
    mov cx, word ptr [edi + 4]                           # 004B5EE0
    msvc_sub cx, bx                                      # 004B5EE4
    shr eax, 4                                           # 004B5EE7
    mov dx, 5                                            # 004B5EEA
.L4B5EEE:
    mov byte ptr [edi], 0                                # 004B5EEE
    shr eax, 1                                           # 004B5EF1
    jb .L4B5F05                                          # 004B5EF3
    mov byte ptr [edi], 8                                # 004B5EF5
    mov word ptr [edi + 2], bx                           # 004B5EF8
    msvc_add bx, cx                                      # 004B5EFC
    mov word ptr [edi + 4], bx                           # 004B5EFF
    inc bx                                               # 004B5F03
.L4B5F05:
    add edi, 0x10                                        # 004B5F05
    dec dx                                               # 004B5F08
    jne .L4B5EEE                                         # 004B5F0A
    ret                                                  # 004B5F0C

    .global _sub_4B5F0D
_sub_4B5F0D:
    movzx ebp, word ptr [esi + 0x40]                     # 004B5F0D
    shl ebp, 7                                           # 004B5F11
    add_offset ebp, _things                              # 004B5F14
    movzx edx, byte ptr [ebp + 0x5e]                     # 004B5F1A
    msvc_xor ebx, ebx                                    # 004B5F1E
    cmp word ptr [esi + 0x870], 0                        # 004B5F20
    jne .L4B5F3E                                         # 004B5F28
    mov bx, word ptr [esi + 0x872]                       # 004B5F2A
    mov ecx, dword ptr [edx*8 + __500270]                # 004B5F31
    shr bx, cl                                           # 004B5F38
    and ebx, 7                                           # 004B5F3B
.L4B5F3E:
    add ebx, dword ptr [edx*8 + __50026C]                # 004B5F3E
    or ebx, 0x20000000                                   # 004B5F45
    movzx ebp, byte ptr [ebp + 0x21]                     # 004B5F4B
    movzx ebp, byte ptr [ebp + __9C645C]                 # 004B5F4F
    shl ebp, 0x13                                        # 004B5F56
    msvc_or ebx, ebp                                     # 004B5F59
    mov ebp, dword ptr [_interfaceSkinObjects]           # 004B5F5B
    add ebx, dword ptr [ebp + 2]                         # 004B5F61
    mov eax, 4                                           # 004B5F64
    call _sub_4CF194                                     # 004B5F69
    msvc_xor ebx, ebx                                    # 004B5F6E
    cmp word ptr [esi + 0x870], 1                        # 004B5F70
    jne .L4B5F87                                         # 004B5F78
    mov bx, word ptr [esi + 0x872]                       # 004B5F7A
    shr bx, 1                                            # 004B5F81
    and ebx, 0xf                                         # 004B5F84
.L4B5F87:
    add ebx, 0x61                                        # 004B5F87
    mov ebp, dword ptr [_interfaceSkinObjects]           # 004B5F8A
    add ebx, dword ptr [ebp + 2]                         # 004B5F90
    mov eax, 5                                           # 004B5F93
    call _sub_4CF194                                     # 004B5F98
    msvc_xor ebx, ebx                                    # 004B5F9D
    cmp word ptr [esi + 0x870], 2                        # 004B5F9F
    jne .L4B5FB7                                         # 004B5FA7
    mov bx, word ptr [esi + 0x872]                       # 004B5FA9
    shr bx, 3                                            # 004B5FB0
    and ebx, 3                                           # 004B5FB4
.L4B5FB7:
    add ebx, 0xc6                                        # 004B5FB7
    mov ebp, dword ptr [_interfaceSkinObjects]           # 004B5FBD
    add ebx, dword ptr [ebp + 2]                         # 004B5FC3
    mov eax, 6                                           # 004B5FC6
    call _sub_4CF194                                     # 004B5FCB
    msvc_xor ebx, ebx                                    # 004B5FD0
    cmp word ptr [esi + 0x870], 4                        # 004B5FD2
    jne .L4B5FEA                                         # 004B5FDA
    mov bx, word ptr [esi + 0x872]                       # 004B5FDC
    shr bx, 4                                            # 004B5FE3
    and ebx, 3                                           # 004B5FE7
.L4B5FEA:
    add ebx, 0xc0                                        # 004B5FEA
    mov ebp, dword ptr [_interfaceSkinObjects]           # 004B5FF0
    add ebx, dword ptr [ebp + 2]                         # 004B5FF6
    mov eax, 8                                           # 004B5FF9
    call _sub_4CF194                                     # 004B5FFE
    msvc_xor ebx, ebx                                    # 004B6003
    cmp word ptr [esi + 0x870], 3                        # 004B6005
    jne .L4B601C                                         # 004B600D
    mov bx, word ptr [esi + 0x872]                       # 004B600F
    shr bx, 1                                            # 004B6016
    and ebx, 0xf                                         # 004B6019
.L4B601C:
    add ebx, 0x71                                        # 004B601C
    mov ebp, dword ptr [_interfaceSkinObjects]           # 004B601F
    add ebx, dword ptr [ebp + 2]                         # 004B6025
    mov eax, 7                                           # 004B6028
    call _sub_4CF194                                     # 004B602D
    ret                                                  # 004B6032

    .global _sub_4B6033
_sub_4B6033:
    mov ax, word ptr [edx + 0x26]                        # 004B6033
    mov cl, 0x17                                         # 004B6037
    msvc_mov dx, ax                                      # 004B6039
    call _sub_4C9B56                                     # 004B603C
    je .L4B6079                                          # 004B6041
    bt dword ptr [__523368], 3                           # 004B6043
    jae .L4B606D                                         # 004B604B
    mov cl, byte ptr [esi + 0x882]                       # 004B604D
    cmp cl, byte ptr [__523392]                          # 004B6053
    jne .L4B606D                                         # 004B6059
    mov cx, word ptr [esi + 0x40]                        # 004B605B
    cmp cx, word ptr [__523390]                          # 004B605F
    jne .L4B606D                                         # 004B6066
    call _sub_4CE3D6                                     # 004B6068
.L4B606D:
    mov cl, 0x17                                         # 004B606D
    msvc_mov dx, ax                                      # 004B606F
    call _sub_4CD3A9                                     # 004B6072
    jne .L4B6088                                         # 004B6077
.L4B6079:
    call _sub_4B60DC                                     # 004B6079
    mov dword ptr [esi + 0x848], 0xffffffff              # 004B607E
.L4B6088:
    mov word ptr [esi + 0x870], 0                        # 004B6088
    call _sub_4CA4BD                                     # 004B6091
    mov eax, dword ptr [__5002BC]                        # 004B6096
    mov dword ptr [esi + 0x2c], eax                      # 004B609B
    mov eax, dword ptr [__5002E4]                        # 004B609E
    mov dword ptr [esi + 0xc], eax                       # 004B60A3
    mov eax, dword ptr [__5002F8]                        # 004B60A6
    mov dword ptr [esi + 0x24], eax                      # 004B60AB
    mov eax, dword ptr [__5002D0]                        # 004B60AE
    mov dword ptr [esi], eax                             # 004B60B3
    mov dword ptr [esi + 0x1c], 0                        # 004B60B5
    call _sub_4B5D82                                     # 004B60BC
    call _sub_4CA17F                                     # 004B60C1
    call _sub_4B5D88                                     # 004B60C6
    ret                                                  # 004B60CB

    .global _sub_4B60CC
_sub_4B60CC:
    call _sub_4B6033                                     # 004B60CC
    mov edx, 5                                           # 004B60D1
    mov ebp, dword ptr [esi]                             # 004B60D6
    call dword ptr [ebp + 4]                             # 004B60D8
    ret                                                  # 004B60DB

    .global _sub_4B60DC
_sub_4B60DC:
    push eax                                             # 004B60DC
    mov ecx, 0x90017                                     # 004B60DD
    mov ebx, 0xb10109                                    # 004B60E2
    mov_offset edx, _ui_vehicle___events_0               # 004B60E7
    call _sub_4C9C68                                     # 004B60EC
    mov_dword_ptr_reg esi, 0x2c, _ui_vehicle___widgets_0 # 004B60F1
    mov eax, dword ptr [__5002E4]                        # 004B60F8
    mov dword ptr [esi + 0xc], eax                       # 004B60FD
    pop eax                                              # 004B6100
    mov word ptr [esi + 0x40], ax                        # 004B6101
    movzx ebp, ax                                        # 004B6105
    shl ebp, 7                                           # 004B6108
    add_offset ebp, _things                              # 004B610B
    mov al, byte ptr [ebp + 0x21]                        # 004B6111
    mov byte ptr [esi + 0x884], al                       # 004B6114
    movzx eax, byte ptr [ebp + 0x5e]                     # 004B611A
    mov ax, word ptr [eax*2 + __5002AE]                  # 004B611E
    mov word ptr [esi + 0x83e], ax                       # 004B6126
    mov word ptr [esi + 0x870], 0                        # 004B612D
    mov word ptr [esi + 0x872], 0                        # 004B6136
    call _sub_4B5D82                                     # 004B613F
    mov word ptr [esi + 0x38], 0xc0                      # 004B6144
    mov word ptr [esi + 0x3c], 0xb1                      # 004B614A
    mov word ptr [esi + 0x3a], 0x258                     # 004B6150
    mov word ptr [esi + 0x3e], 0x1b8                     # 004B6156
    bts dword ptr [esi + 0x42], 9                        # 004B615C
    mov word ptr [esi + 0x85c], 0xffff                   # 004B6161
    mov cl, 0x19                                         # 004B616A
    msvc_xor dx, dx                                      # 004B616C
    call _sub_4CC692                                     # 004B616F
    mov dword ptr [__113614E], 0xffffffff                # 004B6174
    mov word ptr [__1136156], 0xffff                     # 004B617E
    mov ebp, dword ptr [_interfaceSkinObjects]           # 004B6187
    mov al, byte ptr [ebp + 0xa]                         # 004B618D
    mov byte ptr [esi + 0x887], al                       # 004B6190
    ret                                                  # 004B6196

    .global _sub_4B6197
_sub_4B6197:
    push edi                                             # 004B6197
    push esi                                             # 004B6198
    mov ax, word ptr [esi + 0x30]                        # 004B6199
    mov cx, word ptr [esi + 0x32]                        # 004B619D
    mov bx, word ptr [esi + 0x34]                        # 004B61A1
    mov dx, word ptr [esi + 0x36]                        # 004B61A5
    call _sub_4CEC50                                     # 004B61A9
    je .L4B61C4                                          # 004B61AE
    msvc_xor cx, cx                                      # 004B61B0
    mov dx, 0x13                                         # 004B61B3
    mov esi, dword ptr [__113614E]                       # 004B61B7
    msvc_xor al, al                                      # 004B61BD
    call _sub_4B743B                                     # 004B61BF
.L4B61C4:
    pop esi                                              # 004B61C4
    pop edi                                              # 004B61C5
    ret                                                  # 004B61C6

    .global _sub_4B61C7
_sub_4B61C7:
    mov word ptr [esi + 0x36], 0                         # 004B61C7
    push eax                                             # 004B61CD
    push ebx                                             # 004B61CE
    push ecx                                             # 004B61CF
    push edx                                             # 004B61D0
    push esi                                             # 004B61D1
    mov ax, word ptr [__5233A4]                          # 004B61D2
    mov bx, word ptr [__5233A6]                          # 004B61D8
    call _sub_4C9A95                                     # 004B61DF
    msvc_or esi, esi                                     # 004B61E4
    je .L4B6260                                          # 004B61E6
    cmp byte ptr [esi + 0x882], 0x17                     # 004B61E8
    jne .L4B6260                                         # 004B61EF
    cmp_dword_ptr_reg esi, 0x2c, _ui_vehicle___widgets_1 # 004B61F1
    jne .L4B6260                                         # 004B61F8
    call _sub_4C9513                                     # 004B61FA
    cmp edx, 0xb                                         # 004B61FF
    je .L4B6257                                          # 004B6202
    cmp edx, 0xc                                         # 004B6204
    jne .L4B6260                                         # 004B6207
    mov dword ptr [__523372], edx                        # 004B6209
    call _sub_4C8EF0                                     # 004B620F
    msvc_or cx, cx                                       # 004B6214
    jne .L4B6260                                         # 004B6217
    msvc_mov cx, ax                                      # 004B6219
    mov dx, word ptr [esi + 0x83e]                       # 004B621C
    shr dx, 1                                            # 004B6223
    msvc_add dx, bx                                      # 004B6226
    call _sub_4B5CC1                                     # 004B6229
    cmp ebp, -1                                          # 004B622E
    jne .L4B6253                                         # 004B6231
    movzx ebp, word ptr [esi + 0x40]                     # 004B6233
    shl ebp, 7                                           # 004B6237
    add_offset ebp, _things                              # 004B623A
.L4B6240:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B6240
    shl ebp, 7                                           # 004B6244
    add_offset ebp, _things                              # 004B6247
    cmp byte ptr [ebp + 1], 6                            # 004B624D
    jne .L4B6240                                         # 004B6251
.L4B6253:
    msvc_mov edi, esi                                    # 004B6253
    jmp .L4B6265                                         # 004B6255
.L4B6257:
    msvc_mov edi, esi                                    # 004B6257
    mov ebp, 0xfffffffe                                  # 004B6259
    jmp .L4B6265                                         # 004B625E
.L4B6260:
    mov edi, 0xffffffff                                  # 004B6260
.L4B6265:
    pop esi                                              # 004B6265
    pop edx                                              # 004B6266
    pop ecx                                              # 004B6267
    pop ebx                                              # 004B6268
    pop eax                                              # 004B6269
    mov word ptr [esi + 0x36], 0x3c                      # 004B626A
    ret                                                  # 004B6270

    .global _sub_4B6271
_sub_4B6271:
    call _sub_4B61C7                                     # 004B6271
    cmp edi, -1                                          # 004B6276
    je .L4B62CD                                          # 004B6279
    cmp ebp, -1                                          # 004B627B
    je .L4B62CD                                          # 004B627E
    cmp ebp, -2                                          # 004B6280
    je .L4B62AC                                          # 004B6283
    push esi                                             # 004B6285
    mov edx, dword ptr [__113614E]                       # 004B6286
    mov dx, word ptr [edx + 0xa]                         # 004B628C
    mov di, word ptr [ebp + 0xa]                         # 004B6290
    mov bl, 1                                            # 004B6294
    mov word ptr [__9C68E8], 0x183                       # 004B6296
    mov esi, 0                                           # 004B629F
    call _sub_431315                                     # 004B62A4
    pop esi                                              # 004B62A9
    jmp .L4B62CD                                         # 004B62AA
.L4B62AC:
    push esi                                             # 004B62AC
    mov edx, dword ptr [__113614E]                       # 004B62AD
    mov dx, word ptr [edx + 0xa]                         # 004B62B3
    mov bl, 1                                            # 004B62B7
    mov word ptr [__9C68E8], 0x185                       # 004B62B9
    mov esi, 6                                           # 004B62C2
    call _sub_431315                                     # 004B62C7
    pop esi                                              # 004B62CC
.L4B62CD:
    mov cl, 0x19                                         # 004B62CD
    msvc_xor dx, dx                                      # 004B62CF
    call _sub_4C9B56                                     # 004B62D2
    call _sub_4CC6EA                                     # 004B62D7
    mov bx, word ptr [__1136156]                         # 004B62DC
    mov al, 0x17                                         # 004B62E3
    mov dword ptr [__113614E], 0xffffffff                # 004B62E5
    mov word ptr [__1136156], 0xffff                     # 004B62EF
    call _sub_4CB966                                     # 004B62F8
    ret                                                  # 004B62FD

    .global _sub_4B62FE
_sub_4B62FE:
    call _sub_4B61C7                                     # 004B62FE
    cmp edi, -1                                          # 004B6303
    je .L4B6336                                          # 004B6306
    cmp ebp, -1                                          # 004B6308
    je .L4B6336                                          # 004B630B
    cmp ebp, -2                                          # 004B630D
    je .L4B6336                                          # 004B6310
    mov ax, word ptr [ebp + 0xa]                         # 004B6312
    and dword ptr [edi + 0x42], 0xffffbfff               # 004B6316
    cmp ax, word ptr [edi + 0x840]                       # 004B631D
    je .L4B632D                                          # 004B6324
    mov word ptr [edi + 0x840], ax                       # 004B6326
.L4B632D:
    push esi                                             # 004B632D
    msvc_mov esi, edi                                    # 004B632E
    call _sub_4CA4BD                                     # 004B6330
    pop esi                                              # 004B6335
.L4B6336:
    mov word ptr [esi + 0x36], 0                         # 004B6336
    pushal                                               # 004B633C
    mov ax, word ptr [__5233A4]                          # 004B633D
    mov bx, word ptr [__5233A6]                          # 004B6343
    call _sub_4C9A95                                     # 004B634A
    msvc_or esi, esi                                     # 004B634F
    je .L4B6436                                          # 004B6351
    call _sub_4C9513                                     # 004B6357
    cmp edx, -1                                          # 004B635C
    je .L4B6436                                          # 004B635F
    cmp byte ptr [edi], 0x1a                             # 004B6365
    jne .L4B63E3                                         # 004B6368
    mov dword ptr [__523372], edx                        # 004B636A
    call _sub_4C8EF0                                     # 004B6370
    cmp cx, -1                                           # 004B6375
    je .L4B6419                                          # 004B6379
    mov cl, byte ptr [esi + 0x882]                       # 004B637F
    mov byte ptr [__52336F], cl                          # 004B6385
    mov cx, word ptr [esi + 0x40]                        # 004B638B
    mov word ptr [__523370], cx                          # 004B638F
    mov dword ptr [__523398], edx                        # 004B6396
    mov bx, word ptr [__5233A6]                          # 004B639C
    sub bx, word ptr [esi + 0x32]                        # 004B63A3
    sub bx, word ptr [edi + 6]                           # 004B63A7
    cmp bx, 5                                            # 004B63AB
    jle .L4B63D1                                         # 004B63AF
    add bx, word ptr [edi + 6]                           # 004B63B1
    sub bx, word ptr [edi + 8]                           # 004B63B5
    cmp bx, -5                                           # 004B63B9
    jl .L4B6419                                          # 004B63BD
    push edx                                             # 004B63BF
    push esi                                             # 004B63C0
    call _sub_4C8B85                                     # 004B63C1
    pop esi                                              # 004B63C6
    pop edx                                              # 004B63C7
    btr word ptr [edx + esi + 0x46], 7                   # 004B63C8
    jmp .L4B6419                                         # 004B63CF
.L4B63D1:
    push edx                                             # 004B63D1
    push esi                                             # 004B63D2
    call _sub_4C8B26                                     # 004B63D3
    pop esi                                              # 004B63D8
    pop edx                                              # 004B63D9
    btr word ptr [edx + esi + 0x46], 6                   # 004B63DA
    jmp .L4B6419                                         # 004B63E1
.L4B63E3:
    cmp byte ptr [esi + 0x882], 0x17                     # 004B63E3
    jne .L4B6419                                         # 004B63EA
    cmp_dword_ptr_reg esi, 0x2c, _ui_vehicle___widgets_1 # 004B63EC
    jne .L4B6419                                         # 004B63F3
    cmp edx, 0xb                                         # 004B63F5
    jne .L4B6419                                         # 004B63F8
    test dword ptr [esi + 0x1c], 0x800                   # 004B63FA
    jne .L4B6436                                         # 004B6401
    or dword ptr [esi + 0x1c], 0x800                     # 004B6403
    mov ax, 0xb97                                        # 004B640A
    mov bx, word ptr [esi + 0x40]                        # 004B640E
    call _sub_4CB966                                     # 004B6412
    jmp .L4B6436                                         # 004B6417
.L4B6419:
    test dword ptr [esi + 0x1c], 0x800                   # 004B6419
    je .L4B6436                                          # 004B6420
    and dword ptr [esi + 0x1c], 0xfffff7ff               # 004B6422
    mov ax, 0xb97                                        # 004B6429
    mov bx, word ptr [esi + 0x40]                        # 004B642D
    call _sub_4CB966                                     # 004B6431
.L4B6436:
    popal                                                # 004B6436
    mov word ptr [esi + 0x36], 0x3c                      # 004B6437
    mov ebx, 0x1a                                        # 004B643D
    ret                                                  # 004B6442

    .global _sub_4B6443
_sub_4B6443:
    ret                                                  # 004B6443

    .global _sub_4B6444
_sub_4B6444:
    call _sub_4A40C5                                     # 004B6444
    jb .L4B64F7                                          # 004B6449
    push esi                                             # 004B644F
    msvc_mov bp, dx                                      # 004B6450
    and ebp, 0x3f                                        # 004B6453
    shl ebp, 3                                           # 004B6456
    msvc_mov bl, bh                                      # 004B6459
    and ebx, 3                                           # 004B645B
    msvc_or ebp, ebx                                     # 004B645E
    msvc_mov ebx, edi                                    # 004B6460
    shr ebx, 0x10                                        # 004B6462
    mov esi, dword ptr [ebp*4 + __4D9724]                # 004B6465
    mov dl, byte ptr [esi + ebx*8 + 6]                   # 004B646C
    mov dh, byte ptr [__E3F0B8]                          # 004B6470
    shl dh, 4                                            # 004B6476
    msvc_add dl, dh                                      # 004B6479
    sub dl, 0x37                                         # 004B647B
    cmp byte ptr [_scenarioChunk3+408], 0                # 004B647E
    je .L4B648A                                          # 004B6485
    sub dl, 0x20                                         # 004B6487
.L4B648A:
    and dl, 0x3f                                         # 004B648A
    cmp dl, 0x20                                         # 004B648D
    ja .L4B64EC                                          # 004B6490
    add ax, word ptr [ebp*8 + __4F7B5E]                  # 004B6492
    add cx, word ptr [ebp*8 + __4F7B60]                  # 004B649A
    add di, word ptr [ebp*8 + __4F7B62]                  # 004B64A2
    movzx esi, byte ptr [ebp*8 + __4F7B5D]               # 004B64AA
    cmp esi, 0xc                                         # 004B64B2
    jae .L4B64C7                                         # 004B64B5
    sub ax, word ptr [esi*4 + __503C6C]                  # 004B64B7
    sub cx, word ptr [esi*4 + __503C6E]                  # 004B64BF
.L4B64C7:
    mov esi, dword ptr [ebp*4 + __4D9724]                # 004B64C7
    sub bx, word ptr [esi - 2]                           # 004B64CE
    neg bx                                               # 004B64D2
    msvc_or bx, bx                                       # 004B64D5
    jns .L4B64DD                                         # 004B64D8
    msvc_xor bx, bx                                      # 004B64DA
.L4B64DD:
    cmp bx, word ptr [esi - 2]                           # 004B64DD
    jb .L4B64E9                                          # 004B64E1
    mov bx, word ptr [esi - 2]                           # 004B64E3
    dec bx                                               # 004B64E7
.L4B64E9:
    xor ebp, 4                                           # 004B64E9
.L4B64EC:
    msvc_mov dx, di                                      # 004B64EC
    shr dx, 2                                            # 004B64EF
    pop esi                                              # 004B64F3
    msvc_and eax, eax                                    # 004B64F4
    ret                                                  # 004B64F6
.L4B64F7:
    stc                                                  # 004B64F7
    ret                                                  # 004B64F8

    .global _sub_4B64F9
_sub_4B64F9:
    push eax                                             # 004B64F9
    push ebx                                             # 004B64FA
    push edx                                             # 004B64FB
    push edi                                             # 004B64FC
    sub esp, 0x3e8                                       # 004B64FD
    msvc_xor ebx, ebx                                    # 004B6503
.L4B6505:
    mov word ptr [esp + ebx], 0                          # 004B6505
    add ebx, 2                                           # 004B650B
    cmp ebx, 0x3e8                                       # 004B650E
    jb .L4B6505                                          # 004B6514
    mov bl, byte ptr [__9C68EB]                          # 004B6516
    mov dl, byte ptr [esi + 0x5e]                        # 004B651C
    mov di, word ptr [_scenarioChunk3+42]                # 004B651F
.L4B6526:
    cmp di, -1                                           # 004B6526
    je .L4B6556                                          # 004B652A
    movzx edi, di                                        # 004B652C
    shl edi, 7                                           # 004B652F
    add_offset edi, _things                              # 004B6532
    msvc_cmp edi, esi                                    # 004B6538
    je .L4B6550                                          # 004B653A
    cmp bl, byte ptr [edi + 0x21]                        # 004B653C
    jne .L4B6550                                         # 004B653F
    cmp dl, byte ptr [edi + 0x5e]                        # 004B6541
    jne .L4B6550                                         # 004B6544
    movzx eax, word ptr [edi + 0x44]                     # 004B6546
    dec eax                                              # 004B654A
    js .L4B6550                                          # 004B654B
    inc byte ptr [esp + eax]                             # 004B654D
.L4B6550:
    mov di, word ptr [edi + 4]                           # 004B6550
    jmp .L4B6526                                         # 004B6554
.L4B6556:
    mov eax, 0xffffffff                                  # 004B6556
.L4B655B:
    inc eax                                              # 004B655B
    cmp byte ptr [esp + eax], 0                          # 004B655C
    jne .L4B655B                                         # 004B6560
    inc eax                                              # 004B6562
    mov word ptr [esi + 0x44], ax                        # 004B6563
    add esp, 0x3e8                                       # 004B6567
    pop edi                                              # 004B656D
    pop edx                                              # 004B656E
    pop ebx                                              # 004B656F
    pop eax                                              # 004B6570
    ret                                                  # 004B6571

    .global _sub_4B6572
_sub_4B6572:
    mov byte ptr [__9C68EA], 4                           # 004B6572
    cmp ax, 1                                            # 004B6579
    jne .L4B6586                                         # 004B657D
    mov word ptr [__113621D], cx                         # 004B657F
.L4B6586:
    test bl, 1                                           # 004B6586
    je .L4B65AB                                          # 004B6589
    movzx esi, ax                                        # 004B658B
    dec esi                                              # 004B658E
    jns .L4B6596                                         # 004B658F
    mov esi, 2                                           # 004B6591
.L4B6596:
    imul esi, esi, 0xc                                   # 004B6596
    mov dword ptr [esi + __11361F8], edx                 # 004B6599
    mov dword ptr [esi + __11361FC], ebp                 # 004B659F
    mov dword ptr [esi + __1136200], edi                 # 004B65A5
.L4B65AB:
    msvc_or ax, ax                                       # 004B65AB
    jne .L4B6655                                         # 004B65AE
    push eax                                             # 004B65B4
    push ecx                                             # 004B65B5
    movzx esi, word ptr [__113621D]                      # 004B65B6
    shl esi, 7                                           # 004B65BD
    add_offset esi, _things                              # 004B65C0
    mov ax, word ptr [esi + 0x44]                        # 004B65C6
    mov word ptr [__112C826], ax                         # 004B65CA
    movzx eax, word ptr [esi + 0x22]                     # 004B65D0
    push ebx                                             # 004B65D4
    push esi                                             # 004B65D5
    mov_offset edi, __112CC04                            # 004B65D6
    mov_offset ecx, __112C826                            # 004B65DB
    call _sub_4958C6                                     # 004B65E0
    pop esi                                              # 004B65E5
    pop ebx                                              # 004B65E6
    mov_offset edi, __11361F8                            # 004B65E7
    mov_offset ecx, __112CC04                            # 004B65EC
.L4B65F1:
    mov al, byte ptr [edi]                               # 004B65F1
    cmp al, byte ptr [ecx]                               # 004B65F3
    jne .L4B6603                                         # 004B65F5
    msvc_or al, al                                       # 004B65F7
    je .L4B65FF                                          # 004B65F9
    inc edi                                              # 004B65FB
    inc ecx                                              # 004B65FC
    jmp .L4B65F1                                         # 004B65FD
.L4B65FF:
    pop ecx                                              # 004B65FF
    pop eax                                              # 004B6600
    jmp .L4B6655                                         # 004B6601
.L4B6603:
    cmp byte ptr [__11361F8], 0                          # 004B6603
    je .L4B663D                                          # 004B660A
    mov_offset edi, __11361F8                            # 004B660C
    msvc_xor cl, cl                                      # 004B6611
    call _sub_496522                                     # 004B6613
    msvc_or ax, ax                                       # 004B6618
    je .L4B664D                                          # 004B661B
    test bl, 1                                           # 004B661D
    je .L4B6634                                          # 004B6620
.L4B6622:
    xchg word ptr [esi + 0x22], ax                       # 004B6622
    call _sub_4965A6                                     # 004B6626
    call _sub_4CD406                                     # 004B662B
    pop ecx                                              # 004B6630
    pop eax                                              # 004B6631
    jmp .L4B6655                                         # 004B6632
.L4B6634:
    call _sub_4965A6                                     # 004B6634
.L4B6639:
    pop ecx                                              # 004B6639
    pop eax                                              # 004B663A
    jmp .L4B6655                                         # 004B663B
.L4B663D:
    test bl, 1                                           # 004B663D
    je .L4B6639                                          # 004B6640
    movzx ax, byte ptr [esi + 0x5e]                      # 004B6642
    add ax, 4                                            # 004B6647
    jmp .L4B6622                                         # 004B664B
.L4B664D:
    pop ecx                                              # 004B664D
    pop eax                                              # 004B664E
    mov ebx, 0x80000000                                  # 004B664F
    ret                                                  # 004B6654
.L4B6655:
    msvc_xor ebx, ebx                                    # 004B6655
    ret                                                  # 004B6657

    .global _sub_4B6658
_sub_4B6658:
    push edi                                             # 004B6658
    mov_offset edi, _str_1250                            # 004B6659
    call _sub_4B6669                                     # 004B665E
    mov bx, 0x4e2                                        # 004B6663
    pop edi                                              # 004B6667
    ret                                                  # 004B6668

    .global _sub_4B6669
_sub_4B6669:
    push esi                                             # 004B6669
    push ebp                                             # 004B666A
    sub esp, 0x80                                        # 004B666B
    msvc_xchg ebp, edi                                   # 004B6671
    msvc_mov edi, esp                                    # 004B6673
    mov ecx, 0x20                                        # 004B6675
    msvc_xor eax, eax                                    # 004B667A
    rep stosd dword ptr es:[edi], eax                    # 004B667C
    msvc_xchg ebp, edi                                   # 004B667E
    movzx esi, word ptr [esi + 0x3a]                     # 004B6680
    shl esi, 7                                           # 004B6684
    add_offset esi, _things                              # 004B6687
    movzx esi, word ptr [esi + 0x3a]                     # 004B668D
    shl esi, 7                                           # 004B6691
    add_offset esi, _things                              # 004B6694
.L4B669A:
    movzx esi, word ptr [esi + 0x3a]                     # 004B669A
    shl esi, 7                                           # 004B669E
    add_offset esi, _things                              # 004B66A1
    cmp byte ptr [esi + 1], 6                            # 004B66A7
    je .L4B66BF                                          # 004B66AB
    movzx ebx, byte ptr [esi + 0x4c]                     # 004B66AD
    cmp bl, 0xff                                         # 004B66B1
    je .L4B669A                                          # 004B66B4
    movzx eax, byte ptr [esi + 0x51]                     # 004B66B6
    add dword ptr [esp + ebx*4], eax                     # 004B66BA
    jmp .L4B669A                                         # 004B66BD
.L4B66BF:
    msvc_xor ebx, ebx                                    # 004B66BF
    msvc_xor ecx, ecx                                    # 004B66C1
.L4B66C3:
    mov edx, dword ptr [esp + ebx*4]                     # 004B66C3
    msvc_or edx, edx                                     # 004B66C6
    je .L4B66FF                                          # 004B66C8
    msvc_or ecx, ecx                                     # 004B66CA
    je .L4B66D6                                          # 004B66CC
    mov word ptr [edi], 0x202c                           # 004B66CE
    add edi, 2                                           # 004B66D3
.L4B66D6:
    inc ecx                                              # 004B66D6
    mov ebp, dword ptr [ebx*4 + _cargoObjects]           # 004B66D7
    push ebx                                             # 004B66DE
    push ecx                                             # 004B66DF
    movzx eax, word ptr [ebp + 8]                        # 004B66E0
    cmp edx, 1                                           # 004B66E4
    je .L4B66ED                                          # 004B66E7
    movzx eax, word ptr [ebp + 0xa]                      # 004B66E9
.L4B66ED:
    mov dword ptr [__112C826], edx                       # 004B66ED
    mov_offset ecx, __112C826                            # 004B66F3
    call _sub_4958C6                                     # 004B66F8
    pop ecx                                              # 004B66FD
    pop ebx                                              # 004B66FE
.L4B66FF:
    inc ebx                                              # 004B66FF
    cmp ebx, 0x20                                        # 004B6700
    jb .L4B66C3                                          # 004B6703
    msvc_or ecx, ecx                                     # 004B6705
    jne .L4B6713                                         # 004B6707
    mov eax, 0x503                                       # 004B6709
    call _sub_4958C6                                     # 004B670E
.L4B6713:
    add esp, 0x80                                        # 004B6713
    pop ebp                                              # 004B6719
    pop esi                                              # 004B671A
    ret                                                  # 004B671B

    .global _sub_4B671C
_sub_4B671C:
    cmp word ptr [esi + 0x30], -1                        # 004B671C
    je _loc_4B674E                                       # 004B6721
    movzx edx, word ptr [esi + 0x3a]                     # 004B6723
    shl edx, 7                                           # 004B6727
    add_offset edx, _things                              # 004B672A
    movzx edx, word ptr [edx + 0x3a]                     # 004B6730
    shl edx, 7                                           # 004B6734
    add_offset edx, _things                              # 004B6737
    test byte ptr [edx + 0x73], 1                        # 004B673D
    jne _loc_4B6760                                      # 004B6741
    movzx ebx, byte ptr [esi + 0x5d]                     # 004B6743
    jmp dword ptr [ebx*4 + __5006B0]                     # 004B6747
    .global _loc_4B674E
_loc_4B674E:
    mov bx, 0x1d9                                        # 004B674E
    mov cx, 0xffff                                       # 004B6752
    ret                                                  # 004B6756
    .global _loc_4B6757
_loc_4B6757:
    mov bx, 0x1d1                                        # 004B6757
    mov cx, 0xffff                                       # 004B675B
    ret                                                  # 004B675F
    .global _loc_4B6760
_loc_4B6760:
    mov bx, 0x1d0                                        # 004B6760
    mov cx, 0xffff                                       # 004B6764
    ret                                                  # 004B6768
    .global _loc_4B6769
_loc_4B6769:
    mov bx, 0x1ce                                        # 004B6769
    mov cx, 0xffff                                       # 004B676D
    ret                                                  # 004B6771
    .global _loc_4B6772
_loc_4B6772:
    mov bx, 0x1cf                                        # 004B6772
    mov cx, 0xffff                                       # 004B6776
    ret                                                  # 004B677A
    .global _loc_4B677B
_loc_4B677B:
    movzx ebx, word ptr [esi + 0x54]                     # 004B677B
    cmp bx, -1                                           # 004B677F
    je _loc_4B6885                                       # 004B6783
    imul ebx, ebx, 0x3d2                                 # 004B6789
    mov ax, word ptr [ebx + _stations+44]                # 004B678F
    shl eax, 0x10                                        # 004B6796
    mov ax, word ptr [ebx + _stations]                   # 004B6799
    mov bx, 0x1d5                                        # 004B67A0
    msvc_jmp .L4B691C                                    # 004B67A4
    .global _loc_4B67A9
_loc_4B67A9:
    movzx ebx, word ptr [esi + 0x54]                     # 004B67A9
    cmp bx, -1                                           # 004B67AD
    je _loc_4B6885                                       # 004B67B1
    imul ebx, ebx, 0x3d2                                 # 004B67B7
    mov ax, word ptr [ebx + _stations+44]                # 004B67BD
    shl eax, 0x10                                        # 004B67C4
    mov ax, word ptr [ebx + _stations]                   # 004B67C7
    mov bx, 0x1d7                                        # 004B67CE
    msvc_jmp .L4B691C                                    # 004B67D2
    .global _loc_4B67D7
_loc_4B67D7:
    movzx ebx, word ptr [esi + 0x54]                     # 004B67D7
    cmp bx, -1                                           # 004B67DB
    je _loc_4B6885                                       # 004B67DF
    imul ebx, ebx, 0x3d2                                 # 004B67E5
    mov ax, word ptr [ebx + _stations+44]                # 004B67EB
    shl eax, 0x10                                        # 004B67F2
    mov ax, word ptr [ebx + _stations]                   # 004B67F5
    mov bx, 0x190                                        # 004B67FC
    msvc_jmp .L4B691C                                    # 004B6800
    .global _loc_4B6805
_loc_4B6805:
    movzx ebx, word ptr [esi + 0x54]                     # 004B6805
    cmp bx, -1                                           # 004B6809
    je _loc_4B6885                                       # 004B680D
    imul ebx, ebx, 0x3d2                                 # 004B680F
    mov ax, word ptr [ebx + _stations+44]                # 004B6815
    shl eax, 0x10                                        # 004B681C
    mov ax, word ptr [ebx + _stations]                   # 004B681F
    mov bx, 0x1d4                                        # 004B6826
    msvc_jmp .L4B691C                                    # 004B682A
    .global _loc_4B682F
_loc_4B682F:
    movzx ebx, word ptr [esi + 0x54]                     # 004B682F
    cmp bx, -1                                           # 004B6833
    je _loc_4B6885                                       # 004B6837
    imul ebx, ebx, 0x3d2                                 # 004B6839
    mov ax, word ptr [ebx + _stations+44]                # 004B683F
    shl eax, 0x10                                        # 004B6846
    mov ax, word ptr [ebx + _stations]                   # 004B6849
    mov bx, 0x1d3                                        # 004B6850
    mov cx, 0xffff                                       # 004B6854
    ret                                                  # 004B6858
    .global _loc_4B6859
_loc_4B6859:
    movzx ebx, word ptr [esi + 0x54]                     # 004B6859
    cmp bx, -1                                           # 004B685D
    je _loc_4B6885                                       # 004B6861
    push ebp                                             # 004B6863
    imul ebx, ebx, 0x3d2                                 # 004B6864
    mov ax, word ptr [ebx + _stations+44]                # 004B686A
    shl eax, 0x10                                        # 004B6871
    mov ax, word ptr [ebx + _stations]                   # 004B6874
    mov bx, 0x1d2                                        # 004B687B
    mov cx, 0xffff                                       # 004B687F
    pop ebp                                              # 004B6883
    ret                                                  # 004B6884
    .global _loc_4B6885
_loc_4B6885:
    push edi                                             # 004B6885
    push ebp                                             # 004B6886
    test word ptr [esi + 0xc], 2                         # 004B6887
    jne .L4B690E                                         # 004B688D
    test word ptr [esi + 0xc], 0x40                      # 004B688F
    je .L4B689D                                          # 004B6895
    cmp byte ptr [esi + 0x6e], 0xec                      # 004B6897
    jle .L4B690E                                         # 004B689B
.L4B689D:
    cmp word ptr [esi + 0x4c], 1                         # 004B689D
    je .L4B6916                                          # 004B68A2
    mov ebp, dword ptr [esi + 0x46]                      # 004B68A4
    movzx edi, word ptr [esi + 0x4a]                     # 004B68A7
    mov bl, byte ptr [edi + ebp + __987C5C]              # 004B68AB
    and ebx, 7                                           # 004B68B2
    cmp bl, 1                                            # 004B68B5
    je .L4B68DD                                          # 004B68B8
    msvc_mov eax, edi                                    # 004B68BA
.L4B68BC:
    add edi, dword ptr [ebx*4 + __4FE070]                # 004B68BC
    cmp bl, 0                                            # 004B68C3
    jne .L4B68CA                                         # 004B68C6
    msvc_xor edi, edi                                    # 004B68C8
.L4B68CA:
    msvc_cmp edi, eax                                    # 004B68CA
    je .L4B6916                                          # 004B68CC
    mov bl, byte ptr [edi + ebp + __987C5C]              # 004B68CE
    and ebx, 7                                           # 004B68D5
    cmp bl, 1                                            # 004B68D8
    jne .L4B68BC                                         # 004B68DB
.L4B68DD:
    movzx ebx, byte ptr [edi + ebp + __987C5C+1]         # 004B68DD
    mov bh, byte ptr [edi + ebp + __987C5C]              # 004B68E5
    shr bh, 6                                            # 004B68EC
    imul ebx, ebx, 0x3d2                                 # 004B68EF
    mov ax, word ptr [ebx + _stations+44]                # 004B68F5
    shl eax, 0x10                                        # 004B68FC
    mov ax, word ptr [ebx + _stations]                   # 004B68FF
    mov bx, 0x1d8                                        # 004B6906
    pop ebp                                              # 004B690A
    pop edi                                              # 004B690B
    jmp .L4B691C                                         # 004B690C
.L4B690E:
    mov bx, 0x1cb                                        # 004B690E
    pop ebp                                              # 004B6912
    pop edi                                              # 004B6913
    jmp .L4B691C                                         # 004B6914
.L4B6916:
    mov bx, 0x1da                                        # 004B6916
    pop ebp                                              # 004B691A
    pop edi                                              # 004B691B
.L4B691C:
    mov cx, 0x1cc                                        # 004B691C
    cmp byte ptr [esi + 0x5d], 3                         # 004B6920
    je .L4B694A                                          # 004B6924
    mov cx, 0x1cd                                        # 004B6926
    movzx edx, word ptr [esi + 0x3a]                     # 004B692A
    shl edx, 7                                           # 004B692E
    add_offset edx, _things                              # 004B6931
    movzx edx, word ptr [edx + 0x3a]                     # 004B6937
    shl edx, 7                                           # 004B693B
    add_offset edx, _things                              # 004B693E
    mov edx, dword ptr [edx + 0x56]                      # 004B6944
    shr edx, 0x10                                        # 004B6947
.L4B694A:
    ret                                                  # 004B694A

    .global _sub_4B694B
_sub_4B694B:
    mov byte ptr [__9C68EA], 4                           # 004B694B
    movzx esi, dx                                        # 004B6952
    shl esi, 7                                           # 004B6955
    add_offset esi, _things                              # 004B6958
    movzx edi, word ptr [esi + 0x3a]                     # 004B695E
    shl edi, 7                                           # 004B6962
    add_offset edi, _things                              # 004B6965
    movzx edi, word ptr [edi + 0x3a]                     # 004B696B
    shl edi, 7                                           # 004B696F
    add_offset edi, _things                              # 004B6972
    mov ax, word ptr [edi + 0xe]                         # 004B6978
    mov word ptr [__9C68E0], ax                          # 004B697C
    mov ax, word ptr [edi + 0x10]                        # 004B6982
    mov word ptr [__9C68E2], ax                          # 004B6986
    mov ax, word ptr [edi + 0x12]                        # 004B698C
    mov word ptr [__9C68E4], ax                          # 004B6990
    cmp bh, 2                                            # 004B6996
    je .L4B6AEE                                          # 004B6999
    cmp byte ptr [esi + 0x5d], 9                         # 004B699F
    je .L4B69AB                                          # 004B69A3
    cmp byte ptr [esi + 0x5d], 8                         # 004B69A5
    jne .L4B6A08                                         # 004B69A9
.L4B69AB:
    mov al, byte ptr [esi + 0x21]                        # 004B69AB
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B69AE
    je .L4B69BE                                          # 004B69B4
    cmp al, byte ptr [_scenarioChunk3+37]                # 004B69B6
    jne .L4B6A08                                         # 004B69BC
.L4B69BE:
    test bl, 1                                           # 004B69BE
    je .L4B6AEB                                          # 004B69C1
    pushal                                               # 004B69C7
    call _sub_4AD778                                     # 004B69C8
    mov byte ptr [esi + 0x5d], 1                         # 004B69CD
    movzx edi, word ptr [esi + 0x3a]                     # 004B69D1
    shl edi, 7                                           # 004B69D5
    add_offset edi, _things                              # 004B69D8
    movzx edi, word ptr [edi + 0x3a]                     # 004B69DE
    shl edi, 7                                           # 004B69E2
    add_offset edi, _things                              # 004B69E5
    mov dword ptr [edi + 0x56], 0                        # 004B69EB
    mov dx, word ptr [esi + 0xa]                         # 004B69F2
    mov bl, 1                                            # 004B69F6
    mov esi, 6                                           # 004B69F8
    call _sub_431315                                     # 004B69FD
    popal                                                # 004B6A02
    msvc_jmp .L4B6AEB                                    # 004B6A03
.L4B6A08:
    msvc_or bh, bh                                       # 004B6A08
    je .L4B6A17                                          # 004B6A0A
    call _sub_4B6B0C                                     # 004B6A0C
    jb .L4B6B06                                          # 004B6A11
.L4B6A17:
    msvc_or bh, bh                                       # 004B6A17
    jne .L4B6A27                                         # 004B6A19
    bt word ptr [esi + 0xc], 1                           # 004B6A1B
    jb .L4B6AEB                                          # 004B6A21
.L4B6A27:
    cmp bh, 1                                            # 004B6A27
    jne .L4B6A38                                         # 004B6A2A
    bt word ptr [esi + 0xc], 1                           # 004B6A2C
    jae .L4B6AEB                                         # 004B6A32
.L4B6A38:
    test bl, 1                                           # 004B6A38
    je .L4B6AEB                                          # 004B6A3B
    cmp bh, 3                                            # 004B6A41
    je .L4B6AAF                                          # 004B6A44
    btc word ptr [esi + 0xc], 1                          # 004B6A46
    bt word ptr [esi + 0xc], 1                           # 004B6A4C
    jae .L4B6A5A                                         # 004B6A52
    btr word ptr [esi + 0xc], 6                          # 004B6A54
.L4B6A5A:
    test word ptr [esi + 0xc], 2                         # 004B6A5A
    jne .L4B6AAD                                         # 004B6A60
    mov cl, byte ptr [__9C68EB]                          # 004B6A62
    cmp cl, byte ptr [_scenarioChunk3+36]                # 004B6A68
    je .L4B6A78                                          # 004B6A6E
    cmp cl, byte ptr [_scenarioChunk3+37]                # 004B6A70
    jne .L4B6AAD                                         # 004B6A76
.L4B6A78:
    movzx edi, word ptr [esi + 0x3a]                     # 004B6A78
    shl edi, 7                                           # 004B6A7C
    add_offset edi, _things                              # 004B6A7F
    movzx edi, word ptr [edi + 0x3a]                     # 004B6A85
    shl edi, 7                                           # 004B6A89
    add_offset edi, _things                              # 004B6A8C
    mov eax, dword ptr [edi + 0x62]                      # 004B6A92
    or eax, dword ptr [edi + 0x66]                       # 004B6A95
    or eax, dword ptr [edi + 0x6a]                       # 004B6A98
    or eax, dword ptr [edi + 0x6e]                       # 004B6A9B
    jne .L4B6AAD                                         # 004B6A9E
    mov al, 1                                            # 004B6AA0
    mov ah, byte ptr [__9C68EB]                          # 004B6AA2
    call _sub_437F29                                     # 004B6AA8
.L4B6AAD:
    jmp .L4B6ADD                                         # 004B6AAD
.L4B6AAF:
    btc word ptr [esi + 0xc], 6                          # 004B6AAF
    mov byte ptr [esi + 0x6e], 0xd8                      # 004B6AB5
    bts word ptr [esi + 0xc], 1                          # 004B6AB9
    bt word ptr [esi + 0xc], 6                           # 004B6ABF
    jae .L4B6ACD                                         # 004B6AC5
    btr word ptr [esi + 0xc], 1                          # 004B6AC7
.L4B6ACD:
    cmp byte ptr [esi + 0x5d], 4                         # 004B6ACD
    jne .L4B6ADD                                         # 004B6AD1
    mov word ptr [esi + 0x54], 0xffff                    # 004B6AD3
    mov byte ptr [esi + 0x5d], 2                         # 004B6AD9
.L4B6ADD:
    mov cl, 0x17                                         # 004B6ADD
    call _sub_4C9B56                                     # 004B6ADF
    je .L4B6AEB                                          # 004B6AE4
    call _sub_4CA4BD                                     # 004B6AE6
.L4B6AEB:
    msvc_xor ebx, ebx                                    # 004B6AEB
    ret                                                  # 004B6AED
.L4B6AEE:
    test bl, 1                                           # 004B6AEE
    je .L4B6AEB                                          # 004B6AF1
    movzx edi, word ptr [esi + 0x3a]                     # 004B6AF3
    shl edi, 7                                           # 004B6AF7
    add_offset edi, _things                              # 004B6AFA
    xor byte ptr [edi + 0x48], 2                         # 004B6B00
    jmp .L4B6ADD                                         # 004B6B04
.L4B6B06:
    mov ebx, 0x80000000                                  # 004B6B06
    ret                                                  # 004B6B0B

    .global _sub_4B6B0C
_sub_4B6B0C:
    pushal                                               # 004B6B0C
    movzx ebx, byte ptr [esi + 0x21]                     # 004B6B0D
    imul ebx, ebx, 0x8fa8                                # 004B6B11
    test dword ptr [ebx + _companies+4], 0x200           # 004B6B17
    jne .L4B6D13                                         # 004B6B21
    movzx edi, word ptr [esi + 0x3a]                     # 004B6B27
    shl edi, 7                                           # 004B6B2B
    add_offset edi, _things                              # 004B6B2E
    movzx edi, word ptr [edi + 0x3a]                     # 004B6B34
    shl edi, 7                                           # 004B6B38
    add_offset edi, _things                              # 004B6B3B
    movzx edi, word ptr [edi + 0x3a]                     # 004B6B41
    shl edi, 7                                           # 004B6B45
    add_offset edi, _things                              # 004B6B48
    cmp byte ptr [edi + 1], 6                            # 004B6B4E
    je .L4B6D1F                                          # 004B6B52
    test word ptr [esi + 0xc], 0x40                      # 004B6B58
    jne .L4B6B93                                         # 004B6B5E
    movzx ebp, word ptr [edi + 0x40]                     # 004B6B60
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B6B64
    test word ptr [ebp + 0xe0], 2                        # 004B6B6B
    jne .L4B6B93                                         # 004B6B74
    cmp word ptr [ebp + 0xd8], 0                         # 004B6B76
    je .L4B6D2B                                          # 004B6B7E
    test word ptr [ebp + 0xe0], 0x20                     # 004B6B84
    jne .L4B6D2B                                         # 004B6B8D
.L4B6B93:
    movzx edi, word ptr [esi + 0x3a]                     # 004B6B93
    shl edi, 7                                           # 004B6B97
    add_offset edi, _things                              # 004B6B9A
    movzx edi, word ptr [edi + 0x3a]                     # 004B6BA0
    shl edi, 7                                           # 004B6BA4
    add_offset edi, _things                              # 004B6BA7
    cmp word ptr [edi + 0x50], 0                         # 004B6BAD
    je .L4B6D37                                          # 004B6BB2
    test word ptr [esi + 0xc], 0x40                      # 004B6BB8
    jne .L4B6CF2                                         # 004B6BBE
    movzx edi, word ptr [esi + 0x3a]                     # 004B6BC4
    shl edi, 7                                           # 004B6BC8
    add_offset edi, _things                              # 004B6BCB
    movzx edi, word ptr [edi + 0x3a]                     # 004B6BD1
    shl edi, 7                                           # 004B6BD5
    add_offset edi, _things                              # 004B6BD8
    movzx edi, word ptr [edi + 0x3a]                     # 004B6BDE
    shl edi, 7                                           # 004B6BE2
    add_offset edi, _things                              # 004B6BE5
.L4B6BEB:
    cmp byte ptr [edi + 1], 6                            # 004B6BEB
    je .L4B6CF2                                          # 004B6BEF
    movzx ebp, word ptr [edi + 0x40]                     # 004B6BF5
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B6BF9
    test word ptr [ebp + 0xe0], 0x1000                   # 004B6C00
    je .L4B6CA0                                          # 004B6C09
    movzx eax, word ptr [edi + 0x40]                     # 004B6C0F
    msvc_xor ecx, ecx                                    # 004B6C13
    movzx ebp, word ptr [esi + 0x3a]                     # 004B6C15
    shl ebp, 7                                           # 004B6C19
    add_offset ebp, _things                              # 004B6C1C
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B6C22
    shl ebp, 7                                           # 004B6C26
    add_offset ebp, _things                              # 004B6C29
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B6C2F
    shl ebp, 7                                           # 004B6C33
    add_offset ebp, _things                              # 004B6C36
.L4B6C3C:
    cmp byte ptr [ebp + 1], 6                            # 004B6C3C
    je .L4B6C98                                          # 004B6C40
    cmp ax, word ptr [ebp + 0x40]                        # 004B6C42
    jne .L4B6C49                                         # 004B6C46
    inc ecx                                              # 004B6C48
.L4B6C49:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B6C49
    shl ebp, 7                                           # 004B6C4D
    add_offset ebp, _things                              # 004B6C50
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B6C56
    shl ebp, 7                                           # 004B6C5A
    add_offset ebp, _things                              # 004B6C5D
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B6C63
    shl ebp, 7                                           # 004B6C67
    add_offset ebp, _things                              # 004B6C6A
    cmp byte ptr [ebp + 1], 6                            # 004B6C70
    je .L4B6C98                                          # 004B6C74
    movzx ebx, word ptr [ebp + 0x3a]                     # 004B6C76
    shl ebx, 7                                           # 004B6C7A
    add_offset ebx, _things                              # 004B6C7D
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B6C83
    shl ebx, 7                                           # 004B6C87
    add_offset ebx, _things                              # 004B6C8A
    cmp byte ptr [ebx + 1], 5                            # 004B6C90
    je .L4B6C49                                          # 004B6C94
    jmp .L4B6C3C                                         # 004B6C96
.L4B6C98:
    test ecx, 1                                          # 004B6C98
    jne .L4B6CF6                                         # 004B6C9E
.L4B6CA0:
    movzx edi, word ptr [edi + 0x3a]                     # 004B6CA0
    shl edi, 7                                           # 004B6CA4
    add_offset edi, _things                              # 004B6CA7
    movzx edi, word ptr [edi + 0x3a]                     # 004B6CAD
    shl edi, 7                                           # 004B6CB1
    add_offset edi, _things                              # 004B6CB4
    movzx edi, word ptr [edi + 0x3a]                     # 004B6CBA
    shl edi, 7                                           # 004B6CBE
    add_offset edi, _things                              # 004B6CC1
    cmp byte ptr [edi + 1], 6                            # 004B6CC7
    je .L4B6CF2                                          # 004B6CCB
    movzx ebp, word ptr [edi + 0x3a]                     # 004B6CCD
    shl ebp, 7                                           # 004B6CD1
    add_offset ebp, _things                              # 004B6CD4
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B6CDA
    shl ebp, 7                                           # 004B6CDE
    add_offset ebp, _things                              # 004B6CE1
    cmp byte ptr [ebp + 1], 5                            # 004B6CE7
    je .L4B6CA0                                          # 004B6CEB
    msvc_jmp .L4B6BEB                                    # 004B6CED
.L4B6CF2:
    popal                                                # 004B6CF2
    msvc_and eax, eax                                    # 004B6CF3
    ret                                                  # 004B6CF5
.L4B6CF6:
    mov ebp, dword ptr [eax*4 + _vehicleObjects]         # 004B6CF6
    mov ax, word ptr [ebp]                               # 004B6CFD
    mov word ptr [__112C826], ax                         # 004B6D01
    mov word ptr [__9C68E6], 0x505                       # 004B6D07
    popal                                                # 004B6D10
    stc                                                  # 004B6D11
    ret                                                  # 004B6D12
.L4B6D13:
    mov word ptr [__9C68E6], 0x74e                       # 004B6D13
    popal                                                # 004B6D1C
    stc                                                  # 004B6D1D
    ret                                                  # 004B6D1E
.L4B6D1F:
    mov word ptr [__9C68E6], 0x48f                       # 004B6D1F
    popal                                                # 004B6D28
    stc                                                  # 004B6D29
    ret                                                  # 004B6D2A
.L4B6D2B:
    mov word ptr [__9C68E6], 0x490                       # 004B6D2B
    popal                                                # 004B6D34
    stc                                                  # 004B6D35
    ret                                                  # 004B6D36
.L4B6D37:
    mov word ptr [__9C68E6], 0x491                       # 004B6D37
    popal                                                # 004B6D40
    stc                                                  # 004B6D41
    ret                                                  # 004B6D42

    .global _sub_4B6D43
_sub_4B6D43:
    push esi                                             # 004B6D43
    movzx esi, word ptr [esi + 0x3a]                     # 004B6D44
    shl esi, 7                                           # 004B6D48
    add_offset esi, _things                              # 004B6D4B
    movzx esi, word ptr [esi + 0x3a]                     # 004B6D51
    shl esi, 7                                           # 004B6D55
    add_offset esi, _things                              # 004B6D58
    movzx esi, word ptr [esi + 0x3a]                     # 004B6D5E
    shl esi, 7                                           # 004B6D62
    add_offset esi, _things                              # 004B6D65
    push ecx                                             # 004B6D6B
    push esi                                             # 004B6D6C
.L4B6D6D:
    cmp byte ptr [esi + 1], 6                            # 004B6D6D
    je .L4B6D7E                                          # 004B6D71
    push eax                                             # 004B6D73
    or al, 0x20                                          # 004B6D74
    call _sub_4B6D93                                     # 004B6D76
    pop eax                                              # 004B6D7B
    jmp .L4B6D6D                                         # 004B6D7C
.L4B6D7E:
    pop esi                                              # 004B6D7E
    pop ecx                                              # 004B6D7F
.L4B6D80:
    cmp byte ptr [esi + 1], 6                            # 004B6D80
    je .L4B6D91                                          # 004B6D84
    push eax                                             # 004B6D86
    or al, 0x10                                          # 004B6D87
    call _sub_4B6D93                                     # 004B6D89
    pop eax                                              # 004B6D8E
    jmp .L4B6D80                                         # 004B6D8F
.L4B6D91:
    pop esi                                              # 004B6D91
    ret                                                  # 004B6D92

    .global _sub_4B6D93
_sub_4B6D93:
    push edx                                             # 004B6D93
    add dx, 0x13                                         # 004B6D94
    mov byte ptr [__1136235], al                         # 004B6D98
    mov byte ptr [__1136236], ah                         # 004B6D9D
    movzx ebp, word ptr [esi + 0x40]                     # 004B6DA3
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B6DA7
    cmp byte ptr [ebp + 2], 2                            # 004B6DAE
    je .L4B6DD2                                          # 004B6DB2
    cmp byte ptr [ebp + 2], 3                            # 004B6DB4
    je .L4B6DD2                                          # 004B6DB8
    movzx ebx, byte ptr [ebp + 5]                        # 004B6DBA
    cmp byte ptr [ebp + 2], 1                            # 004B6DBE
    je .L4B6DD4                                          # 004B6DC2
    mov ebx, dword ptr [ebx*4 + _trackObjects]           # 004B6DC4
    movsx bx, byte ptr [ebx + 0x34]                      # 004B6DCB
    jmp .L4B6DE5                                         # 004B6DD0
.L4B6DD2:
    jmp .L4B6DE8                                         # 004B6DD2
.L4B6DD4:
    cmp bl, 0xff                                         # 004B6DD4
    je .L4B6DE8                                          # 004B6DD7
    mov ebx, dword ptr [ebx*4 + _roadObjects]            # 004B6DD9
    movsx bx, byte ptr [ebx + 0x29]                      # 004B6DE0
.L4B6DE5:
    msvc_add dx, bx                                      # 004B6DE5
.L4B6DE8:
    movzx ebx, word ptr [esi + 0x3a]                     # 004B6DE8
    shl ebx, 7                                           # 004B6DEC
    add_offset ebx, _things                              # 004B6DEF
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B6DF5
    shl ebx, 7                                           # 004B6DF9
    add_offset ebx, _things                              # 004B6DFC
    test byte ptr [ebx + 0x38], 2                        # 004B6E02
    jne .L4B7120                                         # 004B6E06
    msvc_xor ebx, ebx                                    # 004B6E0C
.L4B6E0E:
    push ebx                                             # 004B6E0E
    push ecx                                             # 004B6E0F
    push edx                                             # 004B6E10
    push ebp                                             # 004B6E11
    push esi                                             # 004B6E12
    movzx eax, byte ptr [ebx + ebp + 0x24]               # 004B6E13
    imul eax, eax, 0x5a82                                # 004B6E18
    shr eax, 0x10                                        # 004B6E1E
    mov word ptr [__1136172], ax                         # 004B6E21
    msvc_add cx, ax                                      # 004B6E27
    movzx eax, byte ptr [esi + 0x39]                     # 004B6E2A
    cmp al, 0xff                                         # 004B6E2E
    je .L4B6EA7                                          # 004B6E30
    cmp byte ptr [esi + 0x42], 2                         # 004B6E32
    je .L4B6EA7                                          # 004B6E36
    cmp byte ptr [esi + 0x42], 3                         # 004B6E38
    je .L4B6EA7                                          # 004B6E3C
    test byte ptr [__1136235], 0x10                      # 004B6E3E
    jne .L4B6EA7                                         # 004B6E45
    mov ebx, 0x28                                        # 004B6E47
    test byte ptr [esi + 0x38], 2                        # 004B6E4C
    je .L4B6E55                                          # 004B6E50
    xor ebx, 0x20                                        # 004B6E52
.L4B6E55:
    shr ebx, 1                                           # 004B6E55
    imul eax, eax, 0x12                                  # 004B6E57
    test byte ptr [eax + ebp + 0xb5], 2                  # 004B6E5A
    je .L4B6E67                                          # 004B6E62
    and ebx, 0xf                                         # 004B6E64
.L4B6E67:
    push ecx                                             # 004B6E67
    movzx ecx, byte ptr [eax + ebp + 0xb9]               # 004B6E68
    imul ebx, ecx                                        # 004B6E70
    test byte ptr [__1136235], 0x40                      # 004B6E73
    je .L4B6E82                                          # 004B6E7A
    movzx ecx, byte ptr [esi + 0x46]                     # 004B6E7C
    msvc_add ebx, ecx                                    # 004B6E80
.L4B6E82:
    add ebx, dword ptr [eax + ebp + 0xba]                # 004B6E82
    movzx eax, byte ptr [esi + 0x24]                     # 004B6E89
    movzx ecx, byte ptr [esi + 0x25]                     # 004B6E8D
    shl eax, 0x13                                        # 004B6E91
    shl ecx, 0x18                                        # 004B6E94
    msvc_or ebx, eax                                     # 004B6E97
    msvc_or ebx, ecx                                     # 004B6E99
    or ebx, 0xa0000000                                   # 004B6E9B
    pop ecx                                              # 004B6EA1
    call _sub_4B7BA9                                     # 004B6EA2
.L4B6EA7:
    pop esi                                              # 004B6EA7
    pop ebp                                              # 004B6EA8
    pop edx                                              # 004B6EA9
    pop ecx                                              # 004B6EAA
    pop ebx                                              # 004B6EAB
    push ebx                                             # 004B6EAC
    push ecx                                             # 004B6EAD
    push edx                                             # 004B6EAE
    push ebp                                             # 004B6EAF
    push esi                                             # 004B6EB0
    movzx esi, word ptr [esi + 0x3a]                     # 004B6EB1
    shl esi, 7                                           # 004B6EB5
    add_offset esi, _things                              # 004B6EB8
    mov word ptr [__1136170], 0                          # 004B6EBE
    mov al, byte ptr [ebx + ebp + 0x28]                  # 004B6EC7
    cmp al, 0xff                                         # 004B6ECB
    je .L4B6EEC                                          # 004B6ECD
    and eax, 0x7f                                        # 004B6ECF
    imul eax, eax, 0x1e                                  # 004B6ED2
    movzx eax, byte ptr [eax + ebp + 0x42]               # 004B6ED5
    imul eax, eax, 0xb504                                # 004B6EDA
    shr eax, 0x10                                        # 004B6EE0
    mov word ptr [__1136170], ax                         # 004B6EE3
    msvc_add cx, ax                                      # 004B6EE9
.L4B6EEC:
    movzx eax, byte ptr [ebx + ebp + 0x25]               # 004B6EEC
    imul eax, eax, 0x5a82                                # 004B6EF1
    shr eax, 0x10                                        # 004B6EF7
    mov word ptr [__1136174], ax                         # 004B6EFA
    msvc_sub cx, ax                                      # 004B6F00
    movzx eax, byte ptr [esi + 0x39]                     # 004B6F03
    cmp al, 0xff                                         # 004B6F07
    je .L4B6F80                                          # 004B6F09
    cmp byte ptr [esi + 0x42], 2                         # 004B6F0B
    je .L4B6F80                                          # 004B6F0F
    cmp byte ptr [esi + 0x42], 3                         # 004B6F11
    je .L4B6F80                                          # 004B6F15
    test byte ptr [__1136235], 0x10                      # 004B6F17
    jne .L4B6F80                                         # 004B6F1E
    mov ebx, 0x28                                        # 004B6F20
    test byte ptr [esi + 0x38], 2                        # 004B6F25
    je .L4B6F2E                                          # 004B6F29
    xor ebx, 0x20                                        # 004B6F2B
.L4B6F2E:
    shr ebx, 1                                           # 004B6F2E
    imul eax, eax, 0x12                                  # 004B6F30
    test byte ptr [eax + ebp + 0xb5], 2                  # 004B6F33
    je .L4B6F40                                          # 004B6F3B
    and ebx, 0xf                                         # 004B6F3D
.L4B6F40:
    push ecx                                             # 004B6F40
    movzx ecx, byte ptr [eax + ebp + 0xb9]               # 004B6F41
    imul ebx, ecx                                        # 004B6F49
    test byte ptr [__1136235], 0x40                      # 004B6F4C
    je .L4B6F5B                                          # 004B6F53
    movzx ecx, byte ptr [esi + 0x46]                     # 004B6F55
    msvc_add ebx, ecx                                    # 004B6F59
.L4B6F5B:
    add ebx, dword ptr [eax + ebp + 0xba]                # 004B6F5B
    movzx eax, byte ptr [esi + 0x24]                     # 004B6F62
    movzx ecx, byte ptr [esi + 0x25]                     # 004B6F66
    shl eax, 0x13                                        # 004B6F6A
    shl ecx, 0x18                                        # 004B6F6D
    msvc_or ebx, eax                                     # 004B6F70
    msvc_or ebx, ecx                                     # 004B6F72
    or ebx, 0xa0000000                                   # 004B6F74
    pop ecx                                              # 004B6F7A
    call _sub_4B7BA9                                     # 004B6F7B
.L4B6F80:
    pop esi                                              # 004B6F80
    pop ebp                                              # 004B6F81
    pop edx                                              # 004B6F82
    pop ecx                                              # 004B6F83
    pop ebx                                              # 004B6F84
    push ebx                                             # 004B6F85
    push ecx                                             # 004B6F86
    push edx                                             # 004B6F87
    push ebp                                             # 004B6F88
    push esi                                             # 004B6F89
    movzx esi, word ptr [esi + 0x3a]                     # 004B6F8A
    shl esi, 7                                           # 004B6F8E
    add_offset esi, _things                              # 004B6F91
    movzx esi, word ptr [esi + 0x3a]                     # 004B6F97
    shl esi, 7                                           # 004B6F9B
    add_offset esi, _things                              # 004B6F9E
    mov ax, word ptr [__1136172]                         # 004B6FA4
    add ax, word ptr [__1136170]                         # 004B6FAA
    sub ax, word ptr [__1136174]                         # 004B6FB1
    shr ax, 1                                            # 004B6FB8
    msvc_add cx, ax                                      # 004B6FBB
    movzx eax, byte ptr [esi + 0x39]                     # 004B6FBE
    cmp al, 0xff                                         # 004B6FC2
    je .L4B70C0                                          # 004B6FC4
    test byte ptr [__1136235], 0x20                      # 004B6FCA
    jne .L4B70C0                                         # 004B6FD1
    push ecx                                             # 004B6FD7
    push edi                                             # 004B6FD8
    mov ebx, 0x28                                        # 004B6FD9
    test byte ptr [esi + 0x38], 2                        # 004B6FDE
    je .L4B6FE7                                          # 004B6FE2
    xor ebx, 0x20                                        # 004B6FE4
.L4B6FE7:
    imul eax, eax, 0x1e                                  # 004B6FE7
    test byte ptr [eax + ebp + 0x43], 2                  # 004B6FEA
    je .L4B6FF4                                          # 004B6FEF
    and ebx, 0x1f                                        # 004B6FF1
.L4B6FF4:
    movzx ecx, byte ptr [eax + ebp + 0x47]               # 004B6FF4
    movzx edi, byte ptr [eax + ebp + 0x49]               # 004B6FF9
    mov dword ptr [__113614A], edi                       # 004B6FFE
    mov cl, byte ptr [ecx + __503F20]                    # 004B7004
    shr ebx, cl                                          # 004B700A
    imul ebx, edi                                        # 004B700C
    mov dword ptr [__1136146], ebx                       # 004B700F
    test byte ptr [__1136235], 0x40                      # 004B7015
    je .L4B7024                                          # 004B701C
    movzx ecx, byte ptr [esi + 0x46]                     # 004B701E
    msvc_add ebx, ecx                                    # 004B7022
.L4B7024:
    movzx ecx, byte ptr [esi + 0x47]                     # 004B7024
    msvc_add ebx, ecx                                    # 004B7028
    test byte ptr [eax + ebp + 0x43], 0x20               # 004B702A
    jne .L4B703B                                         # 004B702F
    mov dword ptr [__1136146], 0xffffffff                # 004B7031
.L4B703B:
    mov ecx, dword ptr [eax + ebp + 0x4a]                # 004B703B
    add dword ptr [__113614A], ecx                       # 004B703F
    msvc_add ebx, ecx                                    # 004B7045
    movzx eax, byte ptr [esi + 0x24]                     # 004B7047
    movzx ecx, byte ptr [esi + 0x25]                     # 004B704B
    shl eax, 0x13                                        # 004B704F
    shl ecx, 0x18                                        # 004B7052
    msvc_or ebx, eax                                     # 004B7055
    msvc_or ebx, ecx                                     # 004B7057
    or ebx, 0xa0000000                                   # 004B7059
    pop edi                                              # 004B705F
    pop ecx                                              # 004B7060
    push ecx                                             # 004B7061
    call _sub_4B7BA9                                     # 004B7062
    pop ecx                                              # 004B7067
    cmp dword ptr [__1136146], -1                        # 004B7068
    je .L4B70C0                                          # 004B706F
    test byte ptr [__1136235], 0x40                      # 004B7071
    je .L4B70C0                                          # 004B7078
    mov esi, dword ptr [esp]                             # 004B707A
    movzx ebx, word ptr [esi + 0x26]                     # 004B707D
    shl ebx, 7                                           # 004B7081
    add_offset ebx, _things                              # 004B7084
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B708A
    shl ebx, 7                                           # 004B708E
    add_offset ebx, _things                              # 004B7091
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B7097
    shl ebx, 7                                           # 004B709B
    add_offset ebx, _things                              # 004B709E
    cmp byte ptr [ebx + 0x5b], 0                         # 004B70A4
    je .L4B70C0                                          # 004B70A8
    mov ebx, dword ptr [__1136146]                       # 004B70AA
    add ebx, dword ptr [__113614A]                       # 004B70B0
    mov edx, dword ptr [esp + 8]                         # 004B70B6
    dec ebx                                              # 004B70BA
    call _sub_4B7BA9                                     # 004B70BB
.L4B70C0:
    pop esi                                              # 004B70C0
    pop ebp                                              # 004B70C1
    pop edx                                              # 004B70C2
    pop ecx                                              # 004B70C3
    pop ebx                                              # 004B70C4
    add cx, word ptr [__1136170]                         # 004B70C5
    movzx esi, word ptr [esi + 0x3a]                     # 004B70CC
    shl esi, 7                                           # 004B70D0
    add_offset esi, _things                              # 004B70D3
    movzx esi, word ptr [esi + 0x3a]                     # 004B70D9
    shl esi, 7                                           # 004B70DD
    add_offset esi, _things                              # 004B70E0
    movzx esi, word ptr [esi + 0x3a]                     # 004B70E6
    shl esi, 7                                           # 004B70EA
    add_offset esi, _things                              # 004B70ED
    add ebx, 6                                           # 004B70F3
    cmp byte ptr [esi + 1], 6                            # 004B70F6
    je .L4B711E                                          # 004B70FA
    movzx eax, word ptr [esi + 0x3a]                     # 004B70FC
    shl eax, 7                                           # 004B7100
    add_offset eax, _things                              # 004B7103
    movzx eax, word ptr [eax + 0x3a]                     # 004B7108
    shl eax, 7                                           # 004B710C
    add_offset eax, _things                              # 004B710F
    cmp byte ptr [eax + 1], 5                            # 004B7114
    je .L4B6E0E                                          # 004B7118
.L4B711E:
    pop edx                                              # 004B711E
    ret                                                  # 004B711F
.L4B7120:
    movzx eax, byte ptr [ebp + 4]                        # 004B7120
    msvc_mov ebx, eax                                    # 004B7124
    imul ebx, ebx, 6                                     # 004B7126
.L4B7129:
    sub ebx, 6                                           # 004B7129
    push ebx                                             # 004B712C
    push ecx                                             # 004B712D
    push edx                                             # 004B712E
    push ebp                                             # 004B712F
    push esi                                             # 004B7130
    movzx eax, byte ptr [ebx + ebp + 0x25]               # 004B7131
    imul eax, eax, 0x5a82                                # 004B7136
    shr eax, 0x10                                        # 004B713C
    mov word ptr [__1136172], ax                         # 004B713F
    msvc_add cx, ax                                      # 004B7145
    movzx eax, byte ptr [esi + 0x39]                     # 004B7148
    cmp al, 0xff                                         # 004B714C
    je .L4B71C5                                          # 004B714E
    cmp byte ptr [esi + 0x42], 2                         # 004B7150
    je .L4B71C5                                          # 004B7154
    cmp byte ptr [esi + 0x42], 3                         # 004B7156
    je .L4B71C5                                          # 004B715A
    test byte ptr [__1136235], 0x10                      # 004B715C
    jne .L4B71C5                                         # 004B7163
    mov ebx, 0x28                                        # 004B7165
    test byte ptr [esi + 0x38], 2                        # 004B716A
    je .L4B7173                                          # 004B716E
    xor ebx, 0x20                                        # 004B7170
.L4B7173:
    shr ebx, 1                                           # 004B7173
    imul eax, eax, 0x12                                  # 004B7175
    test byte ptr [eax + ebp + 0xb5], 2                  # 004B7178
    je .L4B7185                                          # 004B7180
    and ebx, 0xf                                         # 004B7182
.L4B7185:
    push ecx                                             # 004B7185
    movzx ecx, byte ptr [eax + ebp + 0xb9]               # 004B7186
    imul ebx, ecx                                        # 004B718E
    test byte ptr [__1136235], 0x40                      # 004B7191
    je .L4B71A0                                          # 004B7198
    movzx ecx, byte ptr [esi + 0x46]                     # 004B719A
    msvc_add ebx, ecx                                    # 004B719E
.L4B71A0:
    add ebx, dword ptr [eax + ebp + 0xba]                # 004B71A0
    movzx eax, byte ptr [esi + 0x24]                     # 004B71A7
    movzx ecx, byte ptr [esi + 0x25]                     # 004B71AB
    shl eax, 0x13                                        # 004B71AF
    shl ecx, 0x18                                        # 004B71B2
    msvc_or ebx, eax                                     # 004B71B5
    msvc_or ebx, ecx                                     # 004B71B7
    or ebx, 0xa0000000                                   # 004B71B9
    pop ecx                                              # 004B71BF
    call _sub_4B7BA9                                     # 004B71C0
.L4B71C5:
    pop esi                                              # 004B71C5
    pop ebp                                              # 004B71C6
    pop edx                                              # 004B71C7
    pop ecx                                              # 004B71C8
    pop ebx                                              # 004B71C9
    push ebx                                             # 004B71CA
    push ecx                                             # 004B71CB
    push edx                                             # 004B71CC
    push ebp                                             # 004B71CD
    push esi                                             # 004B71CE
    movzx esi, word ptr [esi + 0x3a]                     # 004B71CF
    shl esi, 7                                           # 004B71D3
    add_offset esi, _things                              # 004B71D6
    mov word ptr [__1136170], 0                          # 004B71DC
    mov al, byte ptr [ebx + ebp + 0x28]                  # 004B71E5
    cmp al, 0xff                                         # 004B71E9
    je .L4B720A                                          # 004B71EB
    and eax, 0x7f                                        # 004B71ED
    imul eax, eax, 0x1e                                  # 004B71F0
    movzx eax, byte ptr [eax + ebp + 0x42]               # 004B71F3
    imul eax, eax, 0xb504                                # 004B71F8
    shr eax, 0x10                                        # 004B71FE
    mov word ptr [__1136170], ax                         # 004B7201
    msvc_add cx, ax                                      # 004B7207
.L4B720A:
    movzx eax, byte ptr [ebx + ebp + 0x24]               # 004B720A
    imul eax, eax, 0x5a82                                # 004B720F
    shr eax, 0x10                                        # 004B7215
    mov word ptr [__1136174], ax                         # 004B7218
    msvc_sub cx, ax                                      # 004B721E
    movzx eax, byte ptr [esi + 0x39]                     # 004B7221
    cmp al, 0xff                                         # 004B7225
    je .L4B729E                                          # 004B7227
    cmp byte ptr [esi + 0x42], 2                         # 004B7229
    je .L4B729E                                          # 004B722D
    cmp byte ptr [esi + 0x42], 3                         # 004B722F
    je .L4B729E                                          # 004B7233
    test byte ptr [__1136235], 0x10                      # 004B7235
    jne .L4B729E                                         # 004B723C
    mov ebx, 0x28                                        # 004B723E
    test byte ptr [esi + 0x38], 2                        # 004B7243
    je .L4B724C                                          # 004B7247
    xor ebx, 0x20                                        # 004B7249
.L4B724C:
    shr ebx, 1                                           # 004B724C
    imul eax, eax, 0x12                                  # 004B724E
    test byte ptr [eax + ebp + 0xb5], 2                  # 004B7251
    je .L4B725E                                          # 004B7259
    and ebx, 0xf                                         # 004B725B
.L4B725E:
    push ecx                                             # 004B725E
    movzx ecx, byte ptr [eax + ebp + 0xb9]               # 004B725F
    imul ebx, ecx                                        # 004B7267
    test byte ptr [__1136235], 0x40                      # 004B726A
    je .L4B7279                                          # 004B7271
    movzx ecx, byte ptr [esi + 0x46]                     # 004B7273
    msvc_add ebx, ecx                                    # 004B7277
.L4B7279:
    add ebx, dword ptr [eax + ebp + 0xba]                # 004B7279
    movzx eax, byte ptr [esi + 0x24]                     # 004B7280
    movzx ecx, byte ptr [esi + 0x25]                     # 004B7284
    shl eax, 0x13                                        # 004B7288
    shl ecx, 0x18                                        # 004B728B
    msvc_or ebx, eax                                     # 004B728E
    msvc_or ebx, ecx                                     # 004B7290
    or ebx, 0xa0000000                                   # 004B7292
    pop ecx                                              # 004B7298
    call _sub_4B7BA9                                     # 004B7299
.L4B729E:
    pop esi                                              # 004B729E
    pop ebp                                              # 004B729F
    pop edx                                              # 004B72A0
    pop ecx                                              # 004B72A1
    pop ebx                                              # 004B72A2
    push ebx                                             # 004B72A3
    push ecx                                             # 004B72A4
    push edx                                             # 004B72A5
    push ebp                                             # 004B72A6
    push esi                                             # 004B72A7
    movzx esi, word ptr [esi + 0x3a]                     # 004B72A8
    shl esi, 7                                           # 004B72AC
    add_offset esi, _things                              # 004B72AF
    movzx esi, word ptr [esi + 0x3a]                     # 004B72B5
    shl esi, 7                                           # 004B72B9
    add_offset esi, _things                              # 004B72BC
    mov ax, word ptr [__1136172]                         # 004B72C2
    add ax, word ptr [__1136170]                         # 004B72C8
    sub ax, word ptr [__1136174]                         # 004B72CF
    shr ax, 1                                            # 004B72D6
    msvc_add cx, ax                                      # 004B72D9
    movzx eax, byte ptr [esi + 0x39]                     # 004B72DC
    cmp al, 0xff                                         # 004B72E0
    je .L4B73DE                                          # 004B72E2
    test byte ptr [__1136235], 0x20                      # 004B72E8
    jne .L4B73DE                                         # 004B72EF
    push ecx                                             # 004B72F5
    push edi                                             # 004B72F6
    mov ebx, 0x28                                        # 004B72F7
    test byte ptr [esi + 0x38], 2                        # 004B72FC
    je .L4B7305                                          # 004B7300
    xor ebx, 0x20                                        # 004B7302
.L4B7305:
    imul eax, eax, 0x1e                                  # 004B7305
    test byte ptr [eax + ebp + 0x43], 2                  # 004B7308
    je .L4B7312                                          # 004B730D
    and ebx, 0x1f                                        # 004B730F
.L4B7312:
    movzx ecx, byte ptr [eax + ebp + 0x47]               # 004B7312
    movzx edi, byte ptr [eax + ebp + 0x49]               # 004B7317
    mov dword ptr [__113614A], edi                       # 004B731C
    mov cl, byte ptr [ecx + __503F20]                    # 004B7322
    shr ebx, cl                                          # 004B7328
    imul ebx, edi                                        # 004B732A
    mov dword ptr [__1136146], ebx                       # 004B732D
    test byte ptr [__1136235], 0x40                      # 004B7333
    je .L4B7342                                          # 004B733A
    movzx ecx, byte ptr [esi + 0x46]                     # 004B733C
    msvc_add ebx, ecx                                    # 004B7340
.L4B7342:
    movzx ecx, byte ptr [esi + 0x47]                     # 004B7342
    msvc_add ebx, ecx                                    # 004B7346
    test byte ptr [eax + ebp + 0x43], 0x20               # 004B7348
    jne .L4B7359                                         # 004B734D
    mov dword ptr [__1136146], 0xffffffff                # 004B734F
.L4B7359:
    mov ecx, dword ptr [eax + ebp + 0x4a]                # 004B7359
    add dword ptr [__113614A], ecx                       # 004B735D
    msvc_add ebx, ecx                                    # 004B7363
    movzx eax, byte ptr [esi + 0x24]                     # 004B7365
    movzx ecx, byte ptr [esi + 0x25]                     # 004B7369
    shl eax, 0x13                                        # 004B736D
    shl ecx, 0x18                                        # 004B7370
    msvc_or ebx, eax                                     # 004B7373
    msvc_or ebx, ecx                                     # 004B7375
    or ebx, 0xa0000000                                   # 004B7377
    pop edi                                              # 004B737D
    pop ecx                                              # 004B737E
    push ecx                                             # 004B737F
    call _sub_4B7BA9                                     # 004B7380
    pop ecx                                              # 004B7385
    cmp dword ptr [__1136146], -1                        # 004B7386
    je .L4B73DE                                          # 004B738D
    test byte ptr [__1136235], 0x40                      # 004B738F
    je .L4B73DE                                          # 004B7396
    mov esi, dword ptr [esp]                             # 004B7398
    movzx ebx, word ptr [esi + 0x26]                     # 004B739B
    shl ebx, 7                                           # 004B739F
    add_offset ebx, _things                              # 004B73A2
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B73A8
    shl ebx, 7                                           # 004B73AC
    add_offset ebx, _things                              # 004B73AF
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B73B5
    shl ebx, 7                                           # 004B73B9
    add_offset ebx, _things                              # 004B73BC
    cmp byte ptr [ebx + 0x5b], 0                         # 004B73C2
    je .L4B73DE                                          # 004B73C6
    mov ebx, dword ptr [__1136146]                       # 004B73C8
    add ebx, dword ptr [__113614A]                       # 004B73CE
    mov edx, dword ptr [esp + 8]                         # 004B73D4
    dec ebx                                              # 004B73D8
    call _sub_4B7BA9                                     # 004B73D9
.L4B73DE:
    pop esi                                              # 004B73DE
    pop ebp                                              # 004B73DF
    pop edx                                              # 004B73E0
    pop ecx                                              # 004B73E1
    pop ebx                                              # 004B73E2
    add cx, word ptr [__1136170]                         # 004B73E3
    movzx esi, word ptr [esi + 0x3a]                     # 004B73EA
    shl esi, 7                                           # 004B73EE
    add_offset esi, _things                              # 004B73F1
    movzx esi, word ptr [esi + 0x3a]                     # 004B73F7
    shl esi, 7                                           # 004B73FB
    add_offset esi, _things                              # 004B73FE
    movzx esi, word ptr [esi + 0x3a]                     # 004B7404
    shl esi, 7                                           # 004B7408
    add_offset esi, _things                              # 004B740B
    cmp byte ptr [esi + 1], 6                            # 004B7411
    je .L4B7439                                          # 004B7415
    movzx eax, word ptr [esi + 0x3a]                     # 004B7417
    shl eax, 7                                           # 004B741B
    add_offset eax, _things                              # 004B741E
    movzx eax, word ptr [eax + 0x3a]                     # 004B7423
    shl eax, 7                                           # 004B7427
    add_offset eax, _things                              # 004B742A
    cmp byte ptr [eax + 1], 5                            # 004B742F
    je .L4B7129                                          # 004B7433
.L4B7439:
    pop edx                                              # 004B7439
    ret                                                  # 004B743A

    .global _sub_4B743B
_sub_4B743B:
    test al, 1                                           # 004B743B
    jne _sub_4B6D93                                      # 004B743D
    push eax                                             # 004B7443
    push ebx                                             # 004B7444
    push ecx                                             # 004B7445
    push edx                                             # 004B7446
    push esi                                             # 004B7447
    or al, 0x20                                          # 004B7448
    call _sub_4B6D93                                     # 004B744A
    pop esi                                              # 004B744F
    pop edx                                              # 004B7450
    pop ecx                                              # 004B7451
    pop ebx                                              # 004B7452
    pop eax                                              # 004B7453
    or al, 0x10                                          # 004B7454
    msvc_jmp _sub_4B6D93                                 # 004B7456

    .global _sub_4B745B
_sub_4B745B:
    push edx                                             # 004B745B
    add dx, 0x13                                         # 004B745C
    mov byte ptr [__1136235], al                         # 004B7460
    mov byte ptr [__1136236], ah                         # 004B7465
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B746B
    cmp byte ptr [ebp + 2], 2                            # 004B7472
    je .L4B7496                                          # 004B7476
    cmp byte ptr [ebp + 2], 3                            # 004B7478
    je .L4B7496                                          # 004B747C
    movsx esi, byte ptr [ebp + 5]                        # 004B747E
    cmp byte ptr [ebp + 2], 1                            # 004B7482
    je .L4B7498                                          # 004B7486
    mov esi, dword ptr [esi*4 + _trackObjects]           # 004B7488
    movsx si, byte ptr [esi + 0x34]                      # 004B748F
    jmp .L4B74AA                                         # 004B7494
.L4B7496:
    jmp .L4B74AD                                         # 004B7496
.L4B7498:
    cmp si, -1                                           # 004B7498
    je .L4B74AD                                          # 004B749C
    mov esi, dword ptr [esi*4 + _roadObjects]            # 004B749E
    movsx si, byte ptr [esi + 0x29]                      # 004B74A5
.L4B74AA:
    msvc_add dx, si                                      # 004B74AA
.L4B74AD:
    imul ebx, ebx, 0x8fa8                                # 004B74AD
    mov ax, word ptr [ebx + _companies+26]               # 004B74B3
    mov word ptr [__1136140], ax                         # 004B74BA
    movzx eax, byte ptr [ebp + 0xe]                      # 004B74C0
    bt dword ptr [ebx + _companies+48], eax              # 004B74C4
    jae .L4B74DB                                         # 004B74CB
    mov ax, word ptr [ebx + eax*2 + _companies+26]       # 004B74CD
    mov word ptr [__1136140], ax                         # 004B74D5
.L4B74DB:
    msvc_xor ebx, ebx                                    # 004B74DB
    msvc_xor esi, esi                                    # 004B74DD
.L4B74DF:
    test word ptr [ebp + 0xe0], 4                        # 004B74DF
    je .L4B74F2                                          # 004B74E8
    msvc_or esi, esi                                     # 004B74EA
    je .L4B7700                                          # 004B74EC
.L4B74F2:
    test word ptr [ebp + 0xe0], 8                        # 004B74F2
    je .L4B7509                                          # 004B74FB
    msvc_mov eax, esi                                    # 004B74FD
    inc eax                                              # 004B74FF
    cmp al, byte ptr [ebp + 4]                           # 004B7500
    je .L4B7700                                          # 004B7503
.L4B7509:
    push ebx                                             # 004B7509
    push ecx                                             # 004B750A
    push edx                                             # 004B750B
    push ebp                                             # 004B750C
    push esi                                             # 004B750D
    movzx eax, byte ptr [ebx + ebp + 0x24]               # 004B750E
    imul eax, eax, 0x5a82                                # 004B7513
    shr eax, 0x10                                        # 004B7519
    mov word ptr [__1136172], ax                         # 004B751C
    msvc_add cx, ax                                      # 004B7522
    movzx eax, byte ptr [ebx + ebp + 0x26]               # 004B7525
    cmp al, 0xff                                         # 004B752A
    je .L4B759B                                          # 004B752C
    cmp byte ptr [ebp + 2], 2                            # 004B752E
    je .L4B759B                                          # 004B7532
    cmp byte ptr [ebp + 2], 3                            # 004B7534
    je .L4B759B                                          # 004B7538
    test byte ptr [__1136235], 0x10                      # 004B753A
    jne .L4B759B                                         # 004B7541
    test byte ptr [ebx + ebp + 0x28], 0x80               # 004B7543
    mov ebx, 0x28                                        # 004B7548
    je .L4B7552                                          # 004B754D
    xor ebx, 0x20                                        # 004B754F
.L4B7552:
    shr ebx, 1                                           # 004B7552
    imul eax, eax, 0x12                                  # 004B7554
    test byte ptr [eax + ebp + 0xb5], 2                  # 004B7557
    je .L4B7564                                          # 004B755F
    and ebx, 0xf                                         # 004B7561
.L4B7564:
    movzx esi, byte ptr [eax + ebp + 0xb9]               # 004B7564
    imul ebx, esi                                        # 004B756C
    add ebx, dword ptr [eax + ebp + 0xba]                # 004B756F
    push ecx                                             # 004B7576
    movzx eax, byte ptr [__1136140]                      # 004B7577
    movzx ecx, byte ptr [__1136141]                      # 004B757E
    shl eax, 0x13                                        # 004B7585
    shl ecx, 0x18                                        # 004B7588
    msvc_or ebx, eax                                     # 004B758B
    msvc_or ebx, ecx                                     # 004B758D
    or ebx, 0xa0000000                                   # 004B758F
    pop ecx                                              # 004B7595
    call _sub_4B7BA9                                     # 004B7596
.L4B759B:
    pop esi                                              # 004B759B
    pop ebp                                              # 004B759C
    pop edx                                              # 004B759D
    pop ecx                                              # 004B759E
    pop ebx                                              # 004B759F
    push ebx                                             # 004B75A0
    push ecx                                             # 004B75A1
    push edx                                             # 004B75A2
    push ebp                                             # 004B75A3
    push esi                                             # 004B75A4
    mov word ptr [__1136170], 0                          # 004B75A5
    mov al, byte ptr [ebx + ebp + 0x28]                  # 004B75AE
    cmp al, 0xff                                         # 004B75B2
    je .L4B75D3                                          # 004B75B4
    and eax, 0x7f                                        # 004B75B6
    imul eax, eax, 0x1e                                  # 004B75B9
    movzx eax, byte ptr [eax + ebp + 0x42]               # 004B75BC
    imul eax, eax, 0xb504                                # 004B75C1
    shr eax, 0x10                                        # 004B75C7
    mov word ptr [__1136170], ax                         # 004B75CA
    msvc_add cx, ax                                      # 004B75D0
.L4B75D3:
    movzx eax, byte ptr [ebx + ebp + 0x25]               # 004B75D3
    imul eax, eax, 0x5a82                                # 004B75D8
    shr eax, 0x10                                        # 004B75DE
    mov word ptr [__1136174], ax                         # 004B75E1
    msvc_sub cx, ax                                      # 004B75E7
    movzx eax, byte ptr [ebx + ebp + 0x27]               # 004B75EA
    cmp al, 0xff                                         # 004B75EF
    je .L4B7660                                          # 004B75F1
    cmp byte ptr [ebp + 2], 2                            # 004B75F3
    je .L4B7660                                          # 004B75F7
    cmp byte ptr [ebp + 2], 3                            # 004B75F9
    je .L4B7660                                          # 004B75FD
    test byte ptr [__1136235], 0x10                      # 004B75FF
    jne .L4B7660                                         # 004B7606
    test byte ptr [ebx + ebp + 0x28], 0x80               # 004B7608
    mov ebx, 0x28                                        # 004B760D
    jne .L4B7617                                         # 004B7612
    xor ebx, 0x20                                        # 004B7614
.L4B7617:
    shr ebx, 1                                           # 004B7617
    imul eax, eax, 0x12                                  # 004B7619
    test byte ptr [eax + ebp + 0xb5], 2                  # 004B761C
    je .L4B7629                                          # 004B7624
    and ebx, 0xf                                         # 004B7626
.L4B7629:
    movzx esi, byte ptr [eax + ebp + 0xb9]               # 004B7629
    imul ebx, esi                                        # 004B7631
    add ebx, dword ptr [eax + ebp + 0xba]                # 004B7634
    push ecx                                             # 004B763B
    movzx eax, byte ptr [__1136140]                      # 004B763C
    movzx ecx, byte ptr [__1136141]                      # 004B7643
    shl eax, 0x13                                        # 004B764A
    shl ecx, 0x18                                        # 004B764D
    msvc_or ebx, eax                                     # 004B7650
    msvc_or ebx, ecx                                     # 004B7652
    or ebx, 0xa0000000                                   # 004B7654
    pop ecx                                              # 004B765A
    call _sub_4B7BA9                                     # 004B765B
.L4B7660:
    pop esi                                              # 004B7660
    pop ebp                                              # 004B7661
    pop edx                                              # 004B7662
    pop ecx                                              # 004B7663
    pop ebx                                              # 004B7664
    push ebx                                             # 004B7665
    push ecx                                             # 004B7666
    push edx                                             # 004B7667
    push ebp                                             # 004B7668
    push esi                                             # 004B7669
    mov ax, word ptr [__1136172]                         # 004B766A
    add ax, word ptr [__1136170]                         # 004B7670
    sub ax, word ptr [__1136174]                         # 004B7677
    shr ax, 1                                            # 004B767E
    msvc_add cx, ax                                      # 004B7681
    mov al, byte ptr [ebx + ebp + 0x28]                  # 004B7684
    cmp al, 0xff                                         # 004B7688
    je .L4B76F4                                          # 004B768A
    and eax, 0x7f                                        # 004B768C
    test byte ptr [__1136235], 0x20                      # 004B768F
    jne .L4B76F4                                         # 004B7696
    push ecx                                             # 004B7698
    push edi                                             # 004B7699
    test byte ptr [ebx + ebp + 0x28], 0x80               # 004B769A
    mov ebx, 0x28                                        # 004B769F
    je .L4B76A9                                          # 004B76A4
    xor ebx, 0x20                                        # 004B76A6
.L4B76A9:
    imul eax, eax, 0x1e                                  # 004B76A9
    test byte ptr [eax + ebp + 0x43], 2                  # 004B76AC
    je .L4B76B6                                          # 004B76B1
    and ebx, 0x1f                                        # 004B76B3
.L4B76B6:
    movzx ecx, byte ptr [eax + ebp + 0x47]               # 004B76B6
    movzx edi, byte ptr [eax + ebp + 0x49]               # 004B76BB
    mov cl, byte ptr [ecx + __503F20]                    # 004B76C0
    shr ebx, cl                                          # 004B76C6
    imul ebx, edi                                        # 004B76C8
    add ebx, dword ptr [eax + ebp + 0x4a]                # 004B76CB
    movzx eax, byte ptr [__1136140]                      # 004B76CF
    movzx ecx, byte ptr [__1136141]                      # 004B76D6
    shl eax, 0x13                                        # 004B76DD
    shl ecx, 0x18                                        # 004B76E0
    msvc_or ebx, eax                                     # 004B76E3
    msvc_or ebx, ecx                                     # 004B76E5
    or ebx, 0xa0000000                                   # 004B76E7
    pop edi                                              # 004B76ED
    pop ecx                                              # 004B76EE
    call _sub_4B7BA9                                     # 004B76EF
.L4B76F4:
    pop esi                                              # 004B76F4
    pop ebp                                              # 004B76F5
    pop edx                                              # 004B76F6
    pop ecx                                              # 004B76F7
    pop ebx                                              # 004B76F8
    add cx, word ptr [__1136170]                         # 004B76F9
.L4B7700:
    add ebx, 6                                           # 004B7700
    inc esi                                              # 004B7703
    msvc_mov eax, esi                                    # 004B7704
    cmp al, byte ptr [ebp + 4]                           # 004B7706
    jb .L4B74DF                                          # 004B7709
    pop edx                                              # 004B770F
    ret                                                  # 004B7710

    .global _sub_4B7711
_sub_4B7711:
    test al, 1                                           # 004B7711
    jne _sub_4B745B                                      # 004B7713
    push eax                                             # 004B7719
    push ebx                                             # 004B771A
    push ecx                                             # 004B771B
    push edx                                             # 004B771C
    push esi                                             # 004B771D
    push ebp                                             # 004B771E
    or al, 0x20                                          # 004B771F
    call _sub_4B745B                                     # 004B7721
    pop ebp                                              # 004B7726
    pop esi                                              # 004B7727
    pop edx                                              # 004B7728
    pop ecx                                              # 004B7729
    pop ebx                                              # 004B772A
    pop eax                                              # 004B772B
    or al, 0x10                                          # 004B772C
    msvc_jmp _sub_4B745B                                 # 004B772E

    .global _sub_4B7733
_sub_4B7733:
    mov dword ptr [__11360E0], eax                       # 004B7733
    mov word ptr [__1136140], bx                         # 004B7738
    jmp .L4B777B                                         # 004B773F

    .global _sub_4B7741
_sub_4B7741:
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B7741
    mov dword ptr [__11360E0], eax                       # 004B7748
    imul ebx, ebx, 0x8fa8                                # 004B774D
    mov ax, word ptr [ebx + _companies+26]               # 004B7753
    mov word ptr [__1136140], ax                         # 004B775A
    movzx eax, byte ptr [ebp + 0xe]                      # 004B7760
    bt dword ptr [ebx + _companies+48], eax              # 004B7764
    jae .L4B777B                                         # 004B776B
    mov ax, word ptr [ebx + eax*2 + _companies+26]       # 004B776D
    mov word ptr [__1136140], ax                         # 004B7775
.L4B777B:
    mov dword ptr [__11360E4], esi                       # 004B777B
    and esi, 7                                           # 004B7781
    movzx eax, byte ptr [esi + __500264]                 # 004B7784
    mov dword ptr [__11360E8], eax                       # 004B778B
    movsx esi, byte ptr [ebp + 5]                        # 004B7790
    cmp byte ptr [ebp + 2], 1                            # 004B7794
    je .L4B77B4                                          # 004B7798
    cmp si, -1                                           # 004B779A
    je .L4B77AE                                          # 004B779E
    mov esi, dword ptr [esi*4 + _trackObjects]           # 004B77A0
    movsx si, byte ptr [esi + 0x34]                      # 004B77A7
    jmp .L4B77C6                                         # 004B77AC
.L4B77AE:
    mov si, 3                                            # 004B77AE
    jmp .L4B77C6                                         # 004B77B2
.L4B77B4:
    cmp si, -1                                           # 004B77B4
    je .L4B77C9                                          # 004B77B8
    mov esi, dword ptr [esi*4 + _roadObjects]            # 004B77BA
    movsx si, byte ptr [esi + 0x29]                      # 004B77C1
.L4B77C6:
    msvc_add dx, si                                      # 004B77C6
.L4B77C9:
    mov word ptr [__1136152], cx                         # 004B77C9
    mov word ptr [__1136154], dx                         # 004B77D0
    sub esp, 0x68                                        # 004B77D7
    msvc_mov edx, esp                                    # 004B77DA
    msvc_xor ecx, ecx                                    # 004B77DC
    msvc_xor ebx, ebx                                    # 004B77DE
    msvc_xor esi, esi                                    # 004B77E0
.L4B77E2:
    test word ptr [ebp + 0xe0], 4                        # 004B77E2
    je .L4B77F5                                          # 004B77EB
    msvc_or esi, esi                                     # 004B77ED
    je .L4B7A24                                          # 004B77EF
.L4B77F5:
    test word ptr [ebp + 0xe0], 8                        # 004B77F5
    je .L4B780C                                          # 004B77FE
    msvc_mov eax, esi                                    # 004B7800
    inc eax                                              # 004B7802
    cmp al, byte ptr [ebp + 4]                           # 004B7803
    je .L4B7A24                                          # 004B7806
.L4B780C:
    push ebx                                             # 004B780C
    push ecx                                             # 004B780D
    push ebp                                             # 004B780E
    push esi                                             # 004B780F
    movzx eax, byte ptr [ebx + ebp + 0x24]               # 004B7810
    mov word ptr [__1136172], ax                         # 004B7815
    msvc_add ecx, eax                                    # 004B781B
    movzx eax, byte ptr [ebx + ebp + 0x26]               # 004B781D
    cmp al, 0xff                                         # 004B7822
    je .L4B789E                                          # 004B7824
    cmp byte ptr [ebp + 2], 2                            # 004B7826
    je .L4B789E                                          # 004B782A
    cmp byte ptr [ebp + 2], 3                            # 004B782C
    je .L4B789E                                          # 004B7830
    test byte ptr [ebx + ebp + 0x28], 0x80               # 004B7832
    mov ebx, dword ptr [__11360E0]                       # 004B7837
    je .L4B7842                                          # 004B783D
    xor ebx, 0x20                                        # 004B783F
.L4B7842:
    shr ebx, 1                                           # 004B7842
    imul eax, eax, 0x12                                  # 004B7844
    test byte ptr [eax + ebp + 0xb5], 2                  # 004B7847
    je .L4B7854                                          # 004B784F
    and ebx, 0xf                                         # 004B7851
.L4B7854:
    movzx esi, byte ptr [eax + ebp + 0xb9]               # 004B7854
    imul ebx, esi                                        # 004B785C
    dec esi                                              # 004B785F
    and esi, dword ptr [__11360E4]                       # 004B7860
    msvc_add ebx, esi                                    # 004B7866
    add ebx, dword ptr [eax + ebp + 0xba]                # 004B7868
    push ecx                                             # 004B786F
    movzx eax, byte ptr [__1136140]                      # 004B7870
    movzx ecx, byte ptr [__1136141]                      # 004B7877
    shl eax, 0x13                                        # 004B787E
    shl ecx, 0x18                                        # 004B7881
    msvc_or ebx, eax                                     # 004B7884
    msvc_or ebx, ecx                                     # 004B7886
    or ebx, 0xa0000000                                   # 004B7888
    pop ecx                                              # 004B788E
    mov dword ptr [edx + 4], ebx                         # 004B788F
    mov word ptr [edx], 0                                # 004B7892
    mov word ptr [edx + 2], cx                           # 004B7897
    add edx, 8                                           # 004B789B
.L4B789E:
    pop esi                                              # 004B789E
    pop ebp                                              # 004B789F
    pop ecx                                              # 004B78A0
    pop ebx                                              # 004B78A1
    push ebx                                             # 004B78A2
    push ecx                                             # 004B78A3
    push ebp                                             # 004B78A4
    push esi                                             # 004B78A5
    mov word ptr [__1136170], 0                          # 004B78A6
    mov al, byte ptr [ebx + ebp + 0x28]                  # 004B78AF
    cmp al, 0xff                                         # 004B78B3
    je .L4B78CC                                          # 004B78B5
    and eax, 0x7f                                        # 004B78B7
    imul eax, eax, 0x1e                                  # 004B78BA
    movzx eax, byte ptr [eax + ebp + 0x42]               # 004B78BD
    shl eax, 1                                           # 004B78C2
    mov word ptr [__1136170], ax                         # 004B78C4
    msvc_add ecx, eax                                    # 004B78CA
.L4B78CC:
    movzx eax, byte ptr [ebx + ebp + 0x25]               # 004B78CC
    mov word ptr [__1136174], ax                         # 004B78D1
    msvc_sub ecx, eax                                    # 004B78D7
    movzx eax, byte ptr [ebx + ebp + 0x27]               # 004B78D9
    cmp al, 0xff                                         # 004B78DE
    je .L4B795A                                          # 004B78E0
    cmp byte ptr [ebp + 2], 2                            # 004B78E2
    je .L4B795A                                          # 004B78E6
    cmp byte ptr [ebp + 2], 3                            # 004B78E8
    je .L4B795A                                          # 004B78EC
    test byte ptr [ebx + ebp + 0x28], 0x80               # 004B78EE
    mov ebx, dword ptr [__11360E0]                       # 004B78F3
    jne .L4B78FE                                         # 004B78F9
    xor ebx, 0x20                                        # 004B78FB
.L4B78FE:
    shr ebx, 1                                           # 004B78FE
    imul eax, eax, 0x12                                  # 004B7900
    test byte ptr [eax + ebp + 0xb5], 2                  # 004B7903
    je .L4B7910                                          # 004B790B
    and ebx, 0xf                                         # 004B790D
.L4B7910:
    movzx esi, byte ptr [eax + ebp + 0xb9]               # 004B7910
    imul ebx, esi                                        # 004B7918
    dec esi                                              # 004B791B
    and esi, dword ptr [__11360E4]                       # 004B791C
    msvc_add ebx, esi                                    # 004B7922
    add ebx, dword ptr [eax + ebp + 0xba]                # 004B7924
    push ecx                                             # 004B792B
    movzx eax, byte ptr [__1136140]                      # 004B792C
    movzx ecx, byte ptr [__1136141]                      # 004B7933
    shl eax, 0x13                                        # 004B793A
    shl ecx, 0x18                                        # 004B793D
    msvc_or ebx, eax                                     # 004B7940
    msvc_or ebx, ecx                                     # 004B7942
    or ebx, 0xa0000000                                   # 004B7944
    pop ecx                                              # 004B794A
    mov dword ptr [edx + 4], ebx                         # 004B794B
    mov word ptr [edx], 0                                # 004B794E
    mov word ptr [edx + 2], cx                           # 004B7953
    add edx, 8                                           # 004B7957
.L4B795A:
    pop esi                                              # 004B795A
    pop ebp                                              # 004B795B
    pop ecx                                              # 004B795C
    pop ebx                                              # 004B795D
    push ebx                                             # 004B795E
    push ecx                                             # 004B795F
    push ebp                                             # 004B7960
    push esi                                             # 004B7961
    mov ax, word ptr [__1136172]                         # 004B7962
    add ax, word ptr [__1136170]                         # 004B7968
    sub ax, word ptr [__1136174]                         # 004B796F
    shr ax, 1                                            # 004B7976
    msvc_add cx, ax                                      # 004B7979
    mov al, byte ptr [ebx + ebp + 0x28]                  # 004B797C
    cmp al, 0xff                                         # 004B7980
    je .L4B7A19                                          # 004B7982
    and eax, 0x7f                                        # 004B7988
    push ecx                                             # 004B798B
    push edi                                             # 004B798C
    test byte ptr [ebx + ebp + 0x28], 0x80               # 004B798D
    mov ebx, dword ptr [__11360E0]                       # 004B7992
    je .L4B799D                                          # 004B7998
    xor ebx, 0x20                                        # 004B799A
.L4B799D:
    imul eax, eax, 0x1e                                  # 004B799D
    test byte ptr [eax + ebp + 0x43], 2                  # 004B79A0
    je .L4B79AA                                          # 004B79A5
    and ebx, 0x1f                                        # 004B79A7
.L4B79AA:
    movzx ecx, byte ptr [eax + ebp + 0x47]               # 004B79AA
    movzx edi, byte ptr [eax + ebp + 0x49]               # 004B79AF
    mov cl, byte ptr [ecx + __503F20]                    # 004B79B4
    shr ebx, cl                                          # 004B79BA
    imul ebx, edi                                        # 004B79BC
    movzx edi, byte ptr [eax + ebp + 0x3e]               # 004B79BF
    test byte ptr [eax + ebp + 0x43], 0x40               # 004B79C4
    je .L4B79D0                                          # 004B79C9
    mov edi, 1                                           # 004B79CB
.L4B79D0:
    dec edi                                              # 004B79D0
    and edi, dword ptr [__11360E4]                       # 004B79D1
    msvc_add ebx, edi                                    # 004B79D7
    cmp byte ptr [eax + ebp + 0x41], 1                   # 004B79D9
    je .L4B79E6                                          # 004B79DE
    add ebx, dword ptr [__11360E8]                       # 004B79E0
.L4B79E6:
    add ebx, dword ptr [eax + ebp + 0x4a]                # 004B79E6
    movzx eax, byte ptr [__1136140]                      # 004B79EA
    movzx ecx, byte ptr [__1136141]                      # 004B79F1
    shl eax, 0x13                                        # 004B79F8
    shl ecx, 0x18                                        # 004B79FB
    msvc_or ebx, eax                                     # 004B79FE
    msvc_or ebx, ecx                                     # 004B7A00
    or ebx, 0xa0000000                                   # 004B7A02
    pop edi                                              # 004B7A08
    pop ecx                                              # 004B7A09
    mov dword ptr [edx + 4], ebx                         # 004B7A0A
    mov word ptr [edx], 1                                # 004B7A0D
    mov word ptr [edx + 2], cx                           # 004B7A12
    add edx, 8                                           # 004B7A16
.L4B7A19:
    pop esi                                              # 004B7A19
    pop ebp                                              # 004B7A1A
    pop ecx                                              # 004B7A1B
    pop ebx                                              # 004B7A1C
    add cx, word ptr [__1136170]                         # 004B7A1D
.L4B7A24:
    add ebx, 6                                           # 004B7A24
    inc esi                                              # 004B7A27
    msvc_mov eax, esi                                    # 004B7A28
    cmp al, byte ptr [ebp + 4]                           # 004B7A2A
    jb .L4B77E2                                          # 004B7A2D
    mov word ptr [edx], 0xffff                           # 004B7A33
    shr cx, 1                                            # 004B7A38
    mov word ptr [__1136170], cx                         # 004B7A3B
    msvc_mov ebp, esp                                    # 004B7A42
.L4B7A44:
    cmp word ptr [ebp], 0                                # 004B7A44
    js .L4B7AB1                                          # 004B7A49
    jne .L4B7AAC                                         # 004B7A4B
    push ebp                                             # 004B7A4D
    mov si, word ptr [ebp + 2]                           # 004B7A4E
    sub si, word ptr [__1136170]                         # 004B7A52
    neg si                                               # 004B7A59
    mov ebx, dword ptr [__11360E0]                       # 004B7A5C
    movsx esi, si                                        # 004B7A62
    movsx ecx, word ptr [ebx*4 + __503B6A]               # 004B7A65
    movsx edx, word ptr [ebx*4 + __503B6C]               # 004B7A6D
    imul ecx, esi                                        # 004B7A75
    imul edx, esi                                        # 004B7A78
    msvc_mov esi, ecx                                    # 004B7A7B
    neg ecx                                              # 004B7A7D
    msvc_add ecx, edx                                    # 004B7A7F
    msvc_add edx, esi                                    # 004B7A81
    add ecx, 0x1ff                                       # 004B7A83
    add edx, 0x3ff                                       # 004B7A89
    sar ecx, 0xa                                         # 004B7A8F
    sar edx, 0xb                                         # 004B7A92
    mov ebx, dword ptr [ebp + 4]                         # 004B7A95
    add cx, word ptr [__1136152]                         # 004B7A98
    add dx, word ptr [__1136154]                         # 004B7A9F
    call _sub_448C79                                     # 004B7AA6
    pop ebp                                              # 004B7AAB
.L4B7AAC:
    add ebp, 8                                           # 004B7AAC
    jmp .L4B7A44                                         # 004B7AAF
.L4B7AB1:
    cmp dword ptr [__11360E0], 8                         # 004B7AB1
    jb .L4B7AC3                                          # 004B7AB8
    cmp dword ptr [__11360E0], 0x28                      # 004B7ABA
    jb .L4B7B36                                          # 004B7AC1
.L4B7AC3:
    msvc_mov ebp, esp                                    # 004B7AC3
.L4B7AC5:
    cmp word ptr [ebp], 0                                # 004B7AC5
    js .L4B7BA5                                          # 004B7ACA
    je .L4B7B31                                          # 004B7AD0
    push ebp                                             # 004B7AD2
    mov si, word ptr [ebp + 2]                           # 004B7AD3
    sub si, word ptr [__1136170]                         # 004B7AD7
    neg si                                               # 004B7ADE
    mov ebx, dword ptr [__11360E0]                       # 004B7AE1
    movsx esi, si                                        # 004B7AE7
    movsx ecx, word ptr [ebx*4 + __503B6A]               # 004B7AEA
    movsx edx, word ptr [ebx*4 + __503B6C]               # 004B7AF2
    imul ecx, esi                                        # 004B7AFA
    imul edx, esi                                        # 004B7AFD
    msvc_mov esi, ecx                                    # 004B7B00
    neg ecx                                              # 004B7B02
    msvc_add ecx, edx                                    # 004B7B04
    msvc_add edx, esi                                    # 004B7B06
    add ecx, 0x1ff                                       # 004B7B08
    add edx, 0x3ff                                       # 004B7B0E
    sar ecx, 0xa                                         # 004B7B14
    sar edx, 0xb                                         # 004B7B17
    mov ebx, dword ptr [ebp + 4]                         # 004B7B1A
    add cx, word ptr [__1136152]                         # 004B7B1D
    add dx, word ptr [__1136154]                         # 004B7B24
    call _sub_448C79                                     # 004B7B2B
    pop ebp                                              # 004B7B30
.L4B7B31:
    add ebp, 8                                           # 004B7B31
    jmp .L4B7AC5                                         # 004B7B34
.L4B7B36:
    sub ebp, 8                                           # 004B7B36
    msvc_cmp ebp, esp                                    # 004B7B39
    jb .L4B7BA5                                          # 004B7B3B
    cmp word ptr [ebp], 0                                # 004B7B3D
    je .L4B7B36                                          # 004B7B42
    push ebp                                             # 004B7B44
    mov si, word ptr [ebp + 2]                           # 004B7B45
    sub si, word ptr [__1136170]                         # 004B7B49
    neg si                                               # 004B7B50
    mov ebx, dword ptr [__11360E0]                       # 004B7B53
    movsx esi, si                                        # 004B7B59
    movsx ecx, word ptr [ebx*4 + __503B6A]               # 004B7B5C
    movsx edx, word ptr [ebx*4 + __503B6C]               # 004B7B64
    imul ecx, esi                                        # 004B7B6C
    imul edx, esi                                        # 004B7B6F
    msvc_mov esi, ecx                                    # 004B7B72
    neg ecx                                              # 004B7B74
    msvc_add ecx, edx                                    # 004B7B76
    msvc_add edx, esi                                    # 004B7B78
    add ecx, 0x1ff                                       # 004B7B7A
    add edx, 0x3ff                                       # 004B7B80
    sar ecx, 0xa                                         # 004B7B86
    sar edx, 0xb                                         # 004B7B89
    mov ebx, dword ptr [ebp + 4]                         # 004B7B8C
    add cx, word ptr [__1136152]                         # 004B7B8F
    add dx, word ptr [__1136154]                         # 004B7B96
    call _sub_448C79                                     # 004B7B9D
    pop ebp                                              # 004B7BA2
    jmp .L4B7B36                                         # 004B7BA3
.L4B7BA5:
    add esp, 0x68                                        # 004B7BA5
    ret                                                  # 004B7BA8

    .global _sub_4B7BA9
_sub_4B7BA9:
    test byte ptr [__1136235], 1                         # 004B7BA9
    jne .L4B7BC9                                         # 004B7BB0
    test byte ptr [__1136235], 2                         # 004B7BB2
    jne .L4B7BCA                                         # 004B7BB9
    test byte ptr [__1136235], 4                         # 004B7BBB
    jne .L4B7C02                                         # 004B7BC2
    call _sub_448C79                                     # 004B7BC4
.L4B7BC9:
    ret                                                  # 004B7BC9
.L4B7BCA:
    and ebx, 0x7ffff                                     # 004B7BCA
    push ecx                                             # 004B7BD0
    push edi                                             # 004B7BD1
    mov_offset edi, __5233CC                             # 004B7BD2
    mov eax, 0xa0a0a0a                                   # 004B7BD7
    mov dword ptr [__50B860], edi                        # 004B7BDC
    mov ecx, 0x40                                        # 004B7BE2
    rep stosd dword ptr es:[edi], eax                    # 004B7BE7
    pop edi                                              # 004B7BE9
    pop ecx                                              # 004B7BEA
    mov byte ptr [__5233CC], 0                           # 004B7BEB
    mov dword ptr [__E04324], 0x20000000                 # 004B7BF2
    call _sub_448D90                                     # 004B7BFC
    ret                                                  # 004B7C01
.L4B7C02:
    and ebx, 0x7ffff                                     # 004B7C02
    movzx ebp, byte ptr [__1136236]                      # 004B7C08
    and ebp, 0x7f                                        # 004B7C0F
    mov al, byte ptr [ebp*8 + __1136BA6]                 # 004B7C12
    test byte ptr [__1136235], 8                         # 004B7C19
    je .L4B7C29                                          # 004B7C20
    mov al, byte ptr [ebp*8 + __1136BA5]                 # 004B7C22
.L4B7C29:
    msvc_mov ah, al                                      # 004B7C29
    msvc_mov bp, ax                                      # 004B7C2B
    shl eax, 0x10                                        # 004B7C2E
    msvc_mov ax, bp                                      # 004B7C31
    push ecx                                             # 004B7C34
    push edi                                             # 004B7C35
    mov_offset edi, __5233CC                             # 004B7C36
    mov dword ptr [__50B860], edi                        # 004B7C3B
    mov ecx, 0x40                                        # 004B7C41
    rep stosd dword ptr es:[edi], eax                    # 004B7C46
    pop edi                                              # 004B7C48
    pop ecx                                              # 004B7C49
    mov byte ptr [__5233CC], 0                           # 004B7C4A
    mov dword ptr [__E04324], 0x20000000                 # 004B7C51
    push ebx                                             # 004B7C5B
    push ecx                                             # 004B7C5C
    push edx                                             # 004B7C5D
    inc cx                                               # 004B7C5E
    inc dx                                               # 004B7C60
    call _sub_448D90                                     # 004B7C62
    pop edx                                              # 004B7C67
    pop ecx                                              # 004B7C68
    pop ebx                                              # 004B7C69
    movzx ebp, byte ptr [__1136236]                      # 004B7C6A
    and ebp, 0x7f                                        # 004B7C71
    mov al, byte ptr [ebp*8 + __1136BA4]                 # 004B7C74
    test byte ptr [__1136235], 8                         # 004B7C7B
    je .L4B7C8B                                          # 004B7C82
    mov al, byte ptr [ebp*8 + __1136BA3]                 # 004B7C84
.L4B7C8B:
    msvc_mov ah, al                                      # 004B7C8B
    msvc_mov bp, ax                                      # 004B7C8D
    shl eax, 0x10                                        # 004B7C90
    msvc_mov ax, bp                                      # 004B7C93
    push ecx                                             # 004B7C96
    push edi                                             # 004B7C97
    mov_offset edi, __5233CC                             # 004B7C98
    mov dword ptr [__50B860], edi                        # 004B7C9D
    mov ecx, 0x40                                        # 004B7CA3
    rep stosd dword ptr es:[edi], eax                    # 004B7CA8
    pop edi                                              # 004B7CAA
    pop ecx                                              # 004B7CAB
    mov byte ptr [__5233CC], 0                           # 004B7CAC
    mov dword ptr [__E04324], 0x20000000                 # 004B7CB3
    call _sub_448D90                                     # 004B7CBD
    ret                                                  # 004B7CC2

    .global _sub_4B7CC3
_sub_4B7CC3:
    pushal                                               # 004B7CC3
    cmp byte ptr [esi + 0x42], 1                         # 004B7CC4
    je .L4B7E01                                          # 004B7CC8
    movzx ebp, byte ptr [esi + 0x35]                     # 004B7CCE
    mov ebp, dword ptr [ebp*4 + _trackObjects]           # 004B7CD2
    movzx edi, word ptr [esi + 0x3a]                     # 004B7CD9
    shl edi, 7                                           # 004B7CDD
    add_offset edi, _things                              # 004B7CE0
    movzx edi, word ptr [edi + 0x3a]                     # 004B7CE6
    shl edi, 7                                           # 004B7CEA
    add_offset edi, _things                              # 004B7CED
    movzx edi, word ptr [edi + 0x3a]                     # 004B7CF3
    shl edi, 7                                           # 004B7CF7
    add_offset edi, _things                              # 004B7CFA
    msvc_xor ah, ah                                      # 004B7D00
    msvc_xor ecx, ecx                                    # 004B7D02
    mov dword ptr [__11360FC], 0                         # 004B7D04
    cmp byte ptr [edi + 1], 6                            # 004B7D0E
    je .L4B7DD7                                          # 004B7D12
.L4B7D18:
    movzx ebx, word ptr [edi + 0x40]                     # 004B7D18
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004B7D1C
    cmp byte ptr [ebx + 0x41], 1                         # 004B7D23
    jne .L4B7D2C                                         # 004B7D27
    or ah, 1                                             # 004B7D29
.L4B7D2C:
    test word ptr [ebx + 0xe0], 0x40                     # 004B7D2C
    je .L4B7D54                                          # 004B7D35
    mov al, byte ptr [ebx + 0x118]                       # 004B7D37
    msvc_xor edx, edx                                    # 004B7D3D
.L4B7D3F:
    cmp dl, byte ptr [ebp + 8]                           # 004B7D3F
    jae .L4B7D54                                         # 004B7D42
    cmp al, byte ptr [edx + ebp + 0xa]                   # 004B7D44
    je .L4B7D4D                                          # 004B7D48
    inc edx                                              # 004B7D4A
    jmp .L4B7D3F                                         # 004B7D4B
.L4B7D4D:
    bts dword ptr [__11360FC], edx                       # 004B7D4D
.L4B7D54:
    msvc_xor edx, edx                                    # 004B7D54
.L4B7D56:
    cmp dl, byte ptr [ebx + 6]                           # 004B7D56
    jae .L4B7D77                                         # 004B7D59
    mov al, byte ptr [edx + ebx + 0x20]                  # 004B7D5B
    push edx                                             # 004B7D5F
    msvc_xor edx, edx                                    # 004B7D60
.L4B7D62:
    cmp dl, byte ptr [ebp + 8]                           # 004B7D62
    jae .L4B7D73                                         # 004B7D65
    cmp al, byte ptr [edx + ebp + 0xa]                   # 004B7D67
    je .L4B7D70                                          # 004B7D6B
    inc edx                                              # 004B7D6D
    jmp .L4B7D62                                         # 004B7D6E
.L4B7D70:
    bts ecx, edx                                         # 004B7D70
.L4B7D73:
    pop edx                                              # 004B7D73
    inc edx                                              # 004B7D74
    jmp .L4B7D56                                         # 004B7D75
.L4B7D77:
    movzx edi, word ptr [edi + 0x3a]                     # 004B7D77
    shl edi, 7                                           # 004B7D7B
    add_offset edi, _things                              # 004B7D7E
    movzx edi, word ptr [edi + 0x3a]                     # 004B7D84
    shl edi, 7                                           # 004B7D88
    add_offset edi, _things                              # 004B7D8B
    movzx edi, word ptr [edi + 0x3a]                     # 004B7D91
    shl edi, 7                                           # 004B7D95
    add_offset edi, _things                              # 004B7D98
.L4B7D9E:
    cmp byte ptr [edi + 1], 6                            # 004B7D9E
    je .L4B7DD7                                          # 004B7DA2
    movzx edx, word ptr [edi + 0x3a]                     # 004B7DA4
    shl edx, 7                                           # 004B7DA8
    add_offset edx, _things                              # 004B7DAB
    movzx edx, word ptr [edx + 0x3a]                     # 004B7DB1
    shl edx, 7                                           # 004B7DB5
    add_offset edx, _things                              # 004B7DB8
    cmp byte ptr [edx + 1], 4                            # 004B7DBE
    je .L4B7D18                                          # 004B7DC2
    movzx edi, word ptr [edx + 0x3a]                     # 004B7DC8
    shl edi, 7                                           # 004B7DCC
    add_offset edi, _things                              # 004B7DCF
    jmp .L4B7D9E                                         # 004B7DD5
.L4B7DD7:
    mov byte ptr [esi + 0x53], cl                        # 004B7DD7
    movzx ebp, word ptr [esi + 0x3a]                     # 004B7DDA
    shl ebp, 7                                           # 004B7DDE
    add_offset ebp, _things                              # 004B7DE1
    mov ecx, dword ptr [__11360FC]                       # 004B7DE7
    mov byte ptr [ebp + 0x49], cl                        # 004B7DED
    and byte ptr [esi + 0x38], 0xdf                      # 004B7DF0
    msvc_or ah, ah                                       # 004B7DF4
    jne .L4B7DFC                                         # 004B7DF6
    or byte ptr [esi + 0x38], 0x20                       # 004B7DF8
.L4B7DFC:
    msvc_jmp .L4B7F3B                                    # 004B7DFC
.L4B7E01:
    movsx ebp, byte ptr [esi + 0x35]                     # 004B7E01
    cmp ebp, -1                                          # 004B7E05
    jne .L4B7E11                                         # 004B7E08
    movzx ebp, byte ptr [_scenarioChunk3+429]            # 004B7E0A
.L4B7E11:
    mov ebp, dword ptr [ebp*4 + _roadObjects]            # 004B7E11
    movzx edi, word ptr [esi + 0x3a]                     # 004B7E18
    shl edi, 7                                           # 004B7E1C
    add_offset edi, _things                              # 004B7E1F
    movzx edi, word ptr [edi + 0x3a]                     # 004B7E25
    shl edi, 7                                           # 004B7E29
    add_offset edi, _things                              # 004B7E2C
    movzx edi, word ptr [edi + 0x3a]                     # 004B7E32
    shl edi, 7                                           # 004B7E36
    add_offset edi, _things                              # 004B7E39
    msvc_xor ah, ah                                      # 004B7E3F
    msvc_xor ecx, ecx                                    # 004B7E41
    mov dword ptr [__11360FC], 0                         # 004B7E43
    cmp byte ptr [edi + 1], 6                            # 004B7E4D
    je .L4B7F16                                          # 004B7E51
.L4B7E57:
    movzx ebx, word ptr [edi + 0x40]                     # 004B7E57
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004B7E5B
    cmp byte ptr [ebx + 0x41], 1                         # 004B7E62
    jne .L4B7E6B                                         # 004B7E66
    or ah, 1                                             # 004B7E68
.L4B7E6B:
    test word ptr [ebx + 0xe0], 0x40                     # 004B7E6B
    je .L4B7E93                                          # 004B7E74
    mov al, byte ptr [ebx + 0x118]                       # 004B7E76
    msvc_xor edx, edx                                    # 004B7E7C
.L4B7E7E:
    cmp dl, byte ptr [ebp + 0x25]                        # 004B7E7E
    jae .L4B7E93                                         # 004B7E81
    cmp al, byte ptr [edx + ebp + 0x26]                  # 004B7E83
    je .L4B7E8C                                          # 004B7E87
    inc edx                                              # 004B7E89
    jmp .L4B7E7E                                         # 004B7E8A
.L4B7E8C:
    bts dword ptr [__11360FC], edx                       # 004B7E8C
.L4B7E93:
    msvc_xor edx, edx                                    # 004B7E93
.L4B7E95:
    cmp dl, byte ptr [ebx + 6]                           # 004B7E95
    jae .L4B7EB6                                         # 004B7E98
    mov al, byte ptr [edx + ebx + 0x20]                  # 004B7E9A
    push edx                                             # 004B7E9E
    msvc_xor edx, edx                                    # 004B7E9F
.L4B7EA1:
    cmp dl, byte ptr [ebp + 0x25]                        # 004B7EA1
    jae .L4B7EB2                                         # 004B7EA4
    cmp al, byte ptr [edx + ebp + 0x26]                  # 004B7EA6
    je .L4B7EAF                                          # 004B7EAA
    inc edx                                              # 004B7EAC
    jmp .L4B7EA1                                         # 004B7EAD
.L4B7EAF:
    bts ecx, edx                                         # 004B7EAF
.L4B7EB2:
    pop edx                                              # 004B7EB2
    inc edx                                              # 004B7EB3
    jmp .L4B7E95                                         # 004B7EB4
.L4B7EB6:
    movzx edi, word ptr [edi + 0x3a]                     # 004B7EB6
    shl edi, 7                                           # 004B7EBA
    add_offset edi, _things                              # 004B7EBD
    movzx edi, word ptr [edi + 0x3a]                     # 004B7EC3
    shl edi, 7                                           # 004B7EC7
    add_offset edi, _things                              # 004B7ECA
    movzx edi, word ptr [edi + 0x3a]                     # 004B7ED0
    shl edi, 7                                           # 004B7ED4
    add_offset edi, _things                              # 004B7ED7
.L4B7EDD:
    cmp byte ptr [edi + 1], 6                            # 004B7EDD
    je .L4B7F16                                          # 004B7EE1
    movzx edx, word ptr [edi + 0x3a]                     # 004B7EE3
    shl edx, 7                                           # 004B7EE7
    add_offset edx, _things                              # 004B7EEA
    movzx edx, word ptr [edx + 0x3a]                     # 004B7EF0
    shl edx, 7                                           # 004B7EF4
    add_offset edx, _things                              # 004B7EF7
    cmp byte ptr [edx + 1], 4                            # 004B7EFD
    je .L4B7E57                                          # 004B7F01
    movzx edi, word ptr [edx + 0x3a]                     # 004B7F07
    shl edi, 7                                           # 004B7F0B
    add_offset edi, _things                              # 004B7F0E
    jmp .L4B7EDD                                         # 004B7F14
.L4B7F16:
    mov byte ptr [esi + 0x53], cl                        # 004B7F16
    movzx ebp, word ptr [esi + 0x3a]                     # 004B7F19
    shl ebp, 7                                           # 004B7F1D
    add_offset ebp, _things                              # 004B7F20
    mov ecx, dword ptr [__11360FC]                       # 004B7F26
    mov byte ptr [ebp + 0x49], cl                        # 004B7F2C
    and byte ptr [esi + 0x38], 0xdf                      # 004B7F2F
    msvc_or ah, ah                                       # 004B7F33
    jne .L4B7F3B                                         # 004B7F35
    or byte ptr [esi + 0x38], 0x20                       # 004B7F37
.L4B7F3B:
    movzx ebp, word ptr [esi + 0x3a]                     # 004B7F3B
    shl ebp, 7                                           # 004B7F3F
    add_offset ebp, _things                              # 004B7F42
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B7F48
    shl ebp, 7                                           # 004B7F4C
    add_offset ebp, _things                              # 004B7F4F
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B7F55
    shl ebp, 7                                           # 004B7F59
    add_offset ebp, _things                              # 004B7F5C
    msvc_xor ecx, ecx                                    # 004B7F62
    msvc_xor edx, edx                                    # 004B7F64
    mov edi, 0xffffffff                                  # 004B7F66
    mov dword ptr [__11360F8], 0xffffffff                # 004B7F6B
    mov dword ptr [__113613C], 0                         # 004B7F75
    mov dword ptr [__11360F0], 0xffffffff                # 004B7F7F
    mov dword ptr [__11360F4], 0xffffffff                # 004B7F89
    cmp byte ptr [ebp + 1], 6                            # 004B7F93
    je .L4B811C                                          # 004B7F97
.L4B7F9D:
    movzx ebx, word ptr [ebp + 0x40]                     # 004B7F9D
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004B7FA1
    movzx eax, word ptr [ebx + 0xd8]                     # 004B7FA8
    msvc_add ecx, eax                                    # 004B7FAF
    msvc_or eax, eax                                     # 004B7FB1
    je .L4B7FC5                                          # 004B7FB3
    mov eax, dword ptr [ebp + 0x56]                      # 004B7FB5
    cmp eax, dword ptr [__11360F0]                       # 004B7FB8
    jae .L4B7FC5                                         # 004B7FBE
    mov dword ptr [__11360F0], eax                       # 004B7FC0
.L4B7FC5:
    mov eax, dword ptr [ebp + 0x56]                      # 004B7FC5
    cmp eax, dword ptr [__11360F4]                       # 004B7FC8
    jae .L4B7FD5                                         # 004B7FCE
    mov dword ptr [__11360F4], eax                       # 004B7FD0
.L4B7FD5:
    movzx eax, word ptr [ebx + 0xde]                     # 004B7FD5
    push ecx                                             # 004B7FDC
    push edx                                             # 004B7FDD
    push ebp                                             # 004B7FDE
    mov ecx, dword ptr [ebp + 0x48]                      # 004B7FDF
    or dword ptr [__113613C], ecx                        # 004B7FE2
    movzx ecx, byte ptr [ebp + 0x4c]                     # 004B7FE8
    cmp cl, 0xff                                         # 004B7FEC
    je .L4B8008                                          # 004B7FEF
    mov ecx, dword ptr [ecx*4 + _cargoObjects]           # 004B7FF1
    movzx ecx, word ptr [ecx + 2]                        # 004B7FF8
    movzx edx, byte ptr [ebp + 0x51]                     # 004B7FFC
    imul edx, ecx                                        # 004B8000
    shr edx, 8                                           # 004B8003
    msvc_add eax, edx                                    # 004B8006
.L4B8008:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B8008
    shl ebp, 7                                           # 004B800C
    add_offset ebp, _things                              # 004B800F
    mov ecx, dword ptr [ebp + 0x48]                      # 004B8015
    or dword ptr [__113613C], ecx                        # 004B8018
    movzx ecx, byte ptr [ebp + 0x4c]                     # 004B801E
    cmp cl, 0xff                                         # 004B8022
    je .L4B803E                                          # 004B8025
    mov ecx, dword ptr [ecx*4 + _cargoObjects]           # 004B8027
    movzx ecx, word ptr [ecx + 2]                        # 004B802E
    movzx edx, byte ptr [ebp + 0x51]                     # 004B8032
    imul edx, ecx                                        # 004B8036
    shr edx, 8                                           # 004B8039
    msvc_add eax, edx                                    # 004B803C
.L4B803E:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B803E
    shl ebp, 7                                           # 004B8042
    add_offset ebp, _things                              # 004B8045
    mov ecx, dword ptr [ebp + 0x48]                      # 004B804B
    or dword ptr [__113613C], ecx                        # 004B804E
    movzx ecx, byte ptr [ebp + 0x4c]                     # 004B8054
    cmp cl, 0xff                                         # 004B8058
    je .L4B8074                                          # 004B805B
    mov ecx, dword ptr [ecx*4 + _cargoObjects]           # 004B805D
    movzx ecx, word ptr [ecx + 2]                        # 004B8064
    movzx edx, byte ptr [ebp + 0x51]                     # 004B8068
    imul edx, ecx                                        # 004B806C
    shr edx, 8                                           # 004B806F
    msvc_add eax, edx                                    # 004B8072
.L4B8074:
    pop ebp                                              # 004B8074
    pop edx                                              # 004B8075
    pop ecx                                              # 004B8076
    mov word ptr [ebp + 0x52], ax                        # 004B8077
    msvc_add edx, eax                                    # 004B807B
    movzx eax, word ptr [ebx + 0xda]                     # 004B807D
    msvc_cmp eax, edi                                    # 004B8084
    jae .L4B808A                                         # 004B8086
    msvc_mov edi, eax                                    # 004B8088
.L4B808A:
    cmp eax, dword ptr [__11360F8]                       # 004B808A
    jae .L4B8097                                         # 004B8090
    mov dword ptr [__11360F8], eax                       # 004B8092
.L4B8097:
    test word ptr [ebx + 0xe0], 0x40                     # 004B8097
    je .L4B80B6                                          # 004B80A0
    movzx eax, word ptr [ebx + 0xdc]                     # 004B80A2
    cmp eax, dword ptr [__11360F8]                       # 004B80A9
    jae .L4B80B6                                         # 004B80AF
    mov dword ptr [__11360F8], eax                       # 004B80B1
.L4B80B6:
    cmp byte ptr [ebx + 2], 2                            # 004B80B6
    jne .L4B80C8                                         # 004B80BA
    movzx eax, word ptr [ebx + 0xdc]                     # 004B80BC
    mov dword ptr [__11360F8], eax                       # 004B80C3
.L4B80C8:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B80C8
    shl ebp, 7                                           # 004B80CC
    add_offset ebp, _things                              # 004B80CF
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B80D5
    shl ebp, 7                                           # 004B80D9
    add_offset ebp, _things                              # 004B80DC
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B80E2
    shl ebp, 7                                           # 004B80E6
    add_offset ebp, _things                              # 004B80E9
    cmp byte ptr [ebp + 1], 6                            # 004B80EF
    je .L4B811C                                          # 004B80F3
    push ebp                                             # 004B80F5
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B80F6
    shl ebp, 7                                           # 004B80FA
    add_offset ebp, _things                              # 004B80FD
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B8103
    shl ebp, 7                                           # 004B8107
    add_offset ebp, _things                              # 004B810A
    cmp byte ptr [ebp + 1], 5                            # 004B8110
    pop ebp                                              # 004B8114
    je .L4B80C8                                          # 004B8115
    msvc_jmp .L4B7F9D                                    # 004B8117
.L4B811C:
    mov ebp, dword ptr [__113613C]                       # 004B811C
    mov dword ptr [esi + 0x4e], ebp                      # 004B8122
    movzx ebp, word ptr [esi + 0x3a]                     # 004B8125
    shl ebp, 7                                           # 004B8129
    add_offset ebp, _things                              # 004B812C
    mov eax, dword ptr [__11360F0]                       # 004B8132
    cmp eax, -1                                          # 004B8137
    jne .L4B814B                                         # 004B813A
    mov eax, dword ptr [__11360F4]                       # 004B813C
    cmp eax, -1                                          # 004B8141
    jne .L4B814B                                         # 004B8144
    mov eax, dword ptr [_scenarioChunk3+20]              # 004B8146
.L4B814B:
    mov dword ptr [ebp + 0x4a], eax                      # 004B814B
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B814E
    shl ebp, 7                                           # 004B8152
    add_offset ebp, _things                              # 004B8155
    cmp ecx, 0xffff                                      # 004B815B
    jbe .L4B8168                                         # 004B8161
    mov ecx, 0xffff                                      # 004B8163
.L4B8168:
    cmp edx, 0xffff                                      # 004B8168
    jbe .L4B8175                                         # 004B816E
    mov edx, 0xffff                                      # 004B8170
.L4B8175:
    mov word ptr [ebp + 0x50], cx                        # 004B8175
    mov word ptr [ebp + 0x52], dx                        # 004B8179
    mov word ptr [ebp + 0x54], di                        # 004B817D
    mov edi, dword ptr [__11360F8]                       # 004B8181
    mov word ptr [ebp + 0x5c], di                        # 004B8187
    mov byte ptr [ebp + 0x4f], 0xff                      # 004B818B
    movzx edi, word ptr [esi + 0x3a]                     # 004B818F
    shl edi, 7                                           # 004B8193
    add_offset edi, _things                              # 004B8196
    movzx edi, word ptr [edi + 0x3a]                     # 004B819C
    shl edi, 7                                           # 004B81A0
    add_offset edi, _things                              # 004B81A3
    mov ecx, 0xffffffff                                  # 004B81A9
    mov edx, 0xffffffff                                  # 004B81AE
.L4B81B3:
    movzx edi, word ptr [edi + 0x3a]                     # 004B81B3
    shl edi, 7                                           # 004B81B7
    add_offset edi, _things                              # 004B81BA
    cmp byte ptr [edi + 1], 6                            # 004B81C0
    je .L4B8210                                          # 004B81C4
    movzx edi, word ptr [edi + 0x3a]                     # 004B81C6
    shl edi, 7                                           # 004B81CA
    add_offset edi, _things                              # 004B81CD
    movzx edi, word ptr [edi + 0x3a]                     # 004B81D3
    shl edi, 7                                           # 004B81D7
    add_offset edi, _things                              # 004B81DA
    cmp byte ptr [edi + 1], 4                            # 004B81E0
    jne .L4B81B3                                         # 004B81E4
    movzx ebp, word ptr [edi + 0x40]                     # 004B81E6
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B81EA
    mov al, byte ptr [ebp + 0x119]                       # 004B81F1
    cmp al, 0                                            # 004B81F7
    je .L4B820E                                          # 004B81F9
    cmp ecx, -1                                          # 004B81FB
    jne .L4B8202                                         # 004B81FE
    msvc_mov ecx, edi                                    # 004B8200
.L4B8202:
    mov ax, word ptr [edi + 0x40]                        # 004B8202
    cmp ax, word ptr [ecx + 0x40]                        # 004B8206
    je .L4B820E                                          # 004B820A
    msvc_mov edx, edi                                    # 004B820C
.L4B820E:
    jmp .L4B81B3                                         # 004B820E
.L4B8210:
    msvc_cmp ecx, edx                                    # 004B8210
    jne .L4B8219                                         # 004B8212
    mov edx, 0xffffffff                                  # 004B8214
.L4B8219:
    movzx edi, word ptr [esi + 0x3a]                     # 004B8219
    shl edi, 7                                           # 004B821D
    add_offset edi, _things                              # 004B8220
    movzx edi, word ptr [edi + 0x3a]                     # 004B8226
    shl edi, 7                                           # 004B822A
    add_offset edi, _things                              # 004B822D
    mov ax, 0xffff                                       # 004B8233
    cmp ecx, -1                                          # 004B8237
    je .L4B8240                                          # 004B823A
    mov ax, word ptr [ecx + 0x40]                        # 004B823C
.L4B8240:
    push eax                                             # 004B8240
    push edi                                             # 004B8241
.L4B8242:
    movzx edi, word ptr [edi + 0x3a]                     # 004B8242
    shl edi, 7                                           # 004B8246
    add_offset edi, _things                              # 004B8249
    cmp byte ptr [edi + 1], 6                            # 004B824F
    jne .L4B8242                                         # 004B8253
    mov ax, 0xffff                                       # 004B8255
    cmp edx, -1                                          # 004B8259
    je .L4B8262                                          # 004B825C
    mov ax, word ptr [edx + 0x40]                        # 004B825E
.L4B8262:
    pop ebp                                              # 004B8262
    pop ebx                                              # 004B8263
    cmp bx, word ptr [ebp + 0x48]                        # 004B8264
    je .L4B829A                                          # 004B8268
    cmp bx, word ptr [edi + 0x48]                        # 004B826A
    jne .L4B829A                                         # 004B826E
    mov cl, byte ptr [ebp + 0x44]                        # 004B8270
    xchg byte ptr [edi + 0x44], cl                       # 004B8273
    mov byte ptr [ebp + 0x44], cl                        # 004B8276
    mov cl, byte ptr [ebp + 0x45]                        # 004B8279
    xchg byte ptr [edi + 0x45], cl                       # 004B827C
    mov byte ptr [ebp + 0x45], cl                        # 004B827F
    mov cx, word ptr [ebp + 0x46]                        # 004B8282
    xchg word ptr [edi + 0x46], cx                       # 004B8286
    mov word ptr [ebp + 0x46], cx                        # 004B828A
    mov cx, word ptr [ebp + 0x4a]                        # 004B828E
    xchg word ptr [edi + 0x4a], cx                       # 004B8292
    mov word ptr [ebp + 0x4a], cx                        # 004B8296
.L4B829A:
    mov word ptr [ebp + 0x48], bx                        # 004B829A
    mov word ptr [edi + 0x48], ax                        # 004B829E
    call _sub_4B82AE                                     # 004B82A2
    call _sub_4B8340                                     # 004B82A7
    popal                                                # 004B82AC
    ret                                                  # 004B82AD

    .global _sub_4B82AE
_sub_4B82AE:
    msvc_xor ecx, ecx                                    # 004B82AE
    movzx ebp, word ptr [esi + 0x3a]                     # 004B82B0
    shl ebp, 7                                           # 004B82B4
    add_offset ebp, _things                              # 004B82B7
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B82BD
    shl ebp, 7                                           # 004B82C1
    add_offset ebp, _things                              # 004B82C4
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B82CA
    shl ebp, 7                                           # 004B82CE
    add_offset ebp, _things                              # 004B82D1
    cmp byte ptr [ebp + 1], 6                            # 004B82D7
    je .L4B833C                                          # 004B82DB
.L4B82DD:
    add ecx, dword ptr [ebp + 0x62]                      # 004B82DD
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B82E0
    shl ebp, 7                                           # 004B82E4
    add_offset ebp, _things                              # 004B82E7
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B82ED
    shl ebp, 7                                           # 004B82F1
    add_offset ebp, _things                              # 004B82F4
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B82FA
    shl ebp, 7                                           # 004B82FE
    add_offset ebp, _things                              # 004B8301
.L4B8307:
    cmp byte ptr [ebp + 1], 6                            # 004B8307
    je .L4B833C                                          # 004B830B
    movzx edx, word ptr [ebp + 0x3a]                     # 004B830D
    shl edx, 7                                           # 004B8311
    add_offset edx, _things                              # 004B8314
    movzx edx, word ptr [edx + 0x3a]                     # 004B831A
    shl edx, 7                                           # 004B831E
    add_offset edx, _things                              # 004B8321
    cmp byte ptr [edx + 1], 4                            # 004B8327
    je .L4B82DD                                          # 004B832B
    movzx ebp, word ptr [edx + 0x3a]                     # 004B832D
    shl ebp, 7                                           # 004B8331
    add_offset ebp, _things                              # 004B8334
    jmp .L4B8307                                         # 004B833A
.L4B833C:
    mov dword ptr [esi + 0x69], ecx                      # 004B833C
    ret                                                  # 004B833F

    .global _sub_4B8340
_sub_4B8340:
    mov cx, 0xffff                                       # 004B8340
    movzx ebp, word ptr [esi + 0x3a]                     # 004B8344
    shl ebp, 7                                           # 004B8348
    add_offset ebp, _things                              # 004B834B
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B8351
    shl ebp, 7                                           # 004B8355
    add_offset ebp, _things                              # 004B8358
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B835E
    shl ebp, 7                                           # 004B8362
    add_offset ebp, _things                              # 004B8365
    cmp byte ptr [ebp + 1], 6                            # 004B836B
    je .L4B83DE                                          # 004B836F
.L4B8371:
    mov dx, word ptr [ebp + 0x66]                        # 004B8371
    msvc_or dx, dx                                       # 004B8375
    je .L4B8382                                          # 004B8378
    msvc_cmp dx, cx                                      # 004B837A
    jae .L4B8382                                         # 004B837D
    msvc_mov cx, dx                                      # 004B837F
.L4B8382:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B8382
    shl ebp, 7                                           # 004B8386
    add_offset ebp, _things                              # 004B8389
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B838F
    shl ebp, 7                                           # 004B8393
    add_offset ebp, _things                              # 004B8396
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B839C
    shl ebp, 7                                           # 004B83A0
    add_offset ebp, _things                              # 004B83A3
.L4B83A9:
    cmp byte ptr [ebp + 1], 6                            # 004B83A9
    je .L4B83DE                                          # 004B83AD
    movzx edx, word ptr [ebp + 0x3a]                     # 004B83AF
    shl edx, 7                                           # 004B83B3
    add_offset edx, _things                              # 004B83B6
    movzx edx, word ptr [edx + 0x3a]                     # 004B83BC
    shl edx, 7                                           # 004B83C0
    add_offset edx, _things                              # 004B83C3
    cmp byte ptr [edx + 1], 4                            # 004B83C9
    je .L4B8371                                          # 004B83CD
    movzx ebp, word ptr [edx + 0x3a]                     # 004B83CF
    shl ebp, 7                                           # 004B83D3
    add_offset ebp, _things                              # 004B83D6
    jmp .L4B83A9                                         # 004B83DC
.L4B83DE:
    cmp cx, -1                                           # 004B83DE
    jne .L4B83E7                                         # 004B83E2
    msvc_xor cx, cx                                      # 004B83E4
.L4B83E7:
    movzx ebp, word ptr [esi + 0x3a]                     # 004B83E7
    shl ebp, 7                                           # 004B83EB
    add_offset ebp, _things                              # 004B83EE
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B83F4
    shl ebp, 7                                           # 004B83F8
    add_offset ebp, _things                              # 004B83FB
    mov byte ptr [ebp + 0x72], ch                        # 004B8401
    ret                                                  # 004B8404

    .global _sub_4B8405
_sub_4B8405:
    cmp al, 3                                            # 004B8405
    je .L4B8C4D                                          # 004B8407
    cmp al, 1                                            # 004B840D
    je .L4B89FF                                          # 004B840F
    ja .L4B8B23                                          # 004B8415
    lea ebp, [esi + 0x15e]                               # 004B841B
    msvc_xor edx, edx                                    # 004B8421
    call _sub_472172                                     # 004B8423
    mov word ptr [esi], ax                               # 004B8428
    mov edi, dword ptr [__50D158]                        # 004B842B
    cmp edi, -1                                          # 004B8431
    je .L4B843A                                          # 004B8434
    mov byte ptr [edi], 0                                # 004B8436
    inc edi                                              # 004B8439
.L4B843A:
    mov dword ptr [__112C20D], edi                       # 004B843A
    mov byte ptr [esi + 5], 0xff                         # 004B8440
    test word ptr [esi + 0xe0], 0x200                    # 004B8444
    jne .L4B84A2                                         # 004B844D
    cmp byte ptr [esi + 2], 2                            # 004B844F
    je .L4B84A2                                          # 004B8453
    cmp byte ptr [esi + 2], 3                            # 004B8455
    je .L4B84A2                                          # 004B8459
    push ebx                                             # 004B845B
    push ecx                                             # 004B845C
    push esi                                             # 004B845D
    mov edi, dword ptr [__112C20D]                       # 004B845E
    cmp edi, -1                                          # 004B8464
    je .L4B848F                                          # 004B8467
    mov eax, dword ptr [ebp]                             # 004B8469
    mov dword ptr [edi], eax                             # 004B846C
    mov eax, dword ptr [ebp + 4]                         # 004B846E
    mov dword ptr [edi + 4], eax                         # 004B8471
    mov eax, dword ptr [ebp + 8]                         # 004B8474
    mov dword ptr [edi + 8], eax                         # 004B8477
    mov eax, dword ptr [ebp + 0xc]                       # 004B847A
    mov dword ptr [edi + 0xc], eax                       # 004B847D
    add dword ptr [__112C20D], 0x10                      # 004B8480
    mov edi, dword ptr [__50D158]                        # 004B8487
    inc byte ptr [edi]                                   # 004B848D
.L4B848F:
    call _sub_4720EB                                     # 004B848F
    jb .L4B849C                                          # 004B8494
    mov esi, dword ptr [esp]                             # 004B8496
    mov byte ptr [esi + 5], bl                           # 004B8499
.L4B849C:
    pop esi                                              # 004B849C
    pop ecx                                              # 004B849D
    pop ebx                                              # 004B849E
    add ebp, 0x10                                        # 004B849F
.L4B84A2:
    movzx edi, byte ptr [esi + 6]                        # 004B84A2
    msvc_xor eax, eax                                    # 004B84A6
    push eax                                             # 004B84A8
.L4B84A9:
    msvc_or edi, edi                                     # 004B84A9
    je .L4B8502                                          # 004B84AB
    push ebx                                             # 004B84AD
    push ecx                                             # 004B84AE
    push edi                                             # 004B84AF
    push esi                                             # 004B84B0
    mov edi, dword ptr [__112C20D]                       # 004B84B1
    cmp edi, -1                                          # 004B84B7
    je .L4B84E2                                          # 004B84BA
    mov eax, dword ptr [ebp]                             # 004B84BC
    mov dword ptr [edi], eax                             # 004B84BF
    mov eax, dword ptr [ebp + 4]                         # 004B84C1
    mov dword ptr [edi + 4], eax                         # 004B84C4
    mov eax, dword ptr [ebp + 8]                         # 004B84C7
    mov dword ptr [edi + 8], eax                         # 004B84CA
    mov eax, dword ptr [ebp + 0xc]                       # 004B84CD
    mov dword ptr [edi + 0xc], eax                       # 004B84D0
    add dword ptr [__112C20D], 0x10                      # 004B84D3
    mov edi, dword ptr [__50D158]                        # 004B84DA
    inc byte ptr [edi]                                   # 004B84E0
.L4B84E2:
    call _sub_4720EB                                     # 004B84E2
    jb .L4B84F8                                          # 004B84E7
    mov eax, dword ptr [esp + 0x10]                      # 004B84E9
    mov esi, dword ptr [esp]                             # 004B84ED
    mov byte ptr [eax + esi + 0x20], bl                  # 004B84F0
    inc dword ptr [esp + 0x10]                           # 004B84F4
.L4B84F8:
    pop esi                                              # 004B84F8
    pop edi                                              # 004B84F9
    pop ecx                                              # 004B84FA
    pop ebx                                              # 004B84FB
    add ebp, 0x10                                        # 004B84FC
    dec edi                                              # 004B84FF
    jmp .L4B84A9                                         # 004B8500
.L4B8502:
    pop eax                                              # 004B8502
    push ebx                                             # 004B8503
    push ecx                                             # 004B8504
    msvc_xor ebx, ebx                                    # 004B8505
.L4B8507:
    mov byte ptr [ebx + esi + 0xec], 0                   # 004B8507
    inc ebx                                              # 004B850F
    cmp ebx, 0x20                                        # 004B8510
    jb .L4B8507                                          # 004B8513
    mov dword ptr [esi + 0xe4], 0                        # 004B8515
    mov dword ptr [esi + 0xe8], 0                        # 004B851F
    mov byte ptr [esi + 0x10c], 0                        # 004B8529
    msvc_xor ebx, ebx                                    # 004B8530
    msvc_xor edx, edx                                    # 004B8532
.L4B8534:
    mov al, byte ptr [ebp]                               # 004B8534
    inc ebp                                              # 004B8537
    mov byte ptr [edx + esi + 0xe2], al                  # 004B8538
    msvc_or al, al                                       # 004B853F
    je .L4B8596                                          # 004B8541
.L4B8543:
    mov eax, dword ptr [ebp]                             # 004B8543
    add ebp, 2                                           # 004B8546
    cmp ax, -1                                           # 004B8549
    je .L4B8581                                          # 004B854D
    inc ebp                                              # 004B854F
    msvc_xor ecx, ecx                                    # 004B8550
.L4B8552:
    mov edi, dword ptr [ecx*4 + _cargoObjects]           # 004B8552
    cmp edi, -1                                          # 004B8559
    je .L4B8579                                          # 004B855C
    cmp ax, word ptr [edi + 0x10]                        # 004B855E
    jne .L4B8579                                         # 004B8562
    bts dword ptr [esi + edx*4 + 0xe4], ecx              # 004B8564
    ror eax, 0x10                                        # 004B856C
    mov byte ptr [ecx + esi + 0xec], al                  # 004B856F
    ror eax, 0x10                                        # 004B8576
.L4B8579:
    inc ecx                                              # 004B8579
    cmp ecx, 0x20                                        # 004B857A
    jb .L4B8552                                          # 004B857D
    jmp .L4B8543                                         # 004B857F
.L4B8581:
    cmp dword ptr [esi + edx*4 + 0xe4], 0                # 004B8581
    jne .L4B8595                                         # 004B8589
    mov byte ptr [edx + esi + 0xe2], 0                   # 004B858B
    jmp .L4B8596                                         # 004B8593
.L4B8595:
    inc edx                                              # 004B8595
.L4B8596:
    inc ebx                                              # 004B8596
    cmp ebx, 2                                           # 004B8597
    jb .L4B8534                                          # 004B859A
    mov byte ptr [esi + 0x10c], dl                       # 004B859C
    pop ecx                                              # 004B85A2
    pop ebx                                              # 004B85A3
    cmp byte ptr [esi + 0x10f], 0                        # 004B85A4
    je .L4B85F7                                          # 004B85AB
    push ebx                                             # 004B85AD
    push ecx                                             # 004B85AE
    push esi                                             # 004B85AF
    mov edi, dword ptr [__112C20D]                       # 004B85B0
    cmp edi, -1                                          # 004B85B6
    je .L4B85E1                                          # 004B85B9
    mov eax, dword ptr [ebp]                             # 004B85BB
    mov dword ptr [edi], eax                             # 004B85BE
    mov eax, dword ptr [ebp + 4]                         # 004B85C0
    mov dword ptr [edi + 4], eax                         # 004B85C3
    mov eax, dword ptr [ebp + 8]                         # 004B85C6
    mov dword ptr [edi + 8], eax                         # 004B85C9
    mov eax, dword ptr [ebp + 0xc]                       # 004B85CC
    mov dword ptr [edi + 0xc], eax                       # 004B85CF
    add dword ptr [__112C20D], 0x10                      # 004B85D2
    mov edi, dword ptr [__50D158]                        # 004B85D9
    inc byte ptr [edi]                                   # 004B85DF
.L4B85E1:
    call _sub_4720EB                                     # 004B85E1
    jb .L4B85F1                                          # 004B85E6
    mov esi, dword ptr [esp]                             # 004B85E8
    mov byte ptr [esi + 0x10d], bl                       # 004B85EB
.L4B85F1:
    pop esi                                              # 004B85F1
    pop ecx                                              # 004B85F2
    pop ebx                                              # 004B85F3
    add ebp, 0x10                                        # 004B85F4
.L4B85F7:
    cmp byte ptr [esi + 0x112], 0                        # 004B85F7
    je .L4B864A                                          # 004B85FE
    push ebx                                             # 004B8600
    push ecx                                             # 004B8601
    push esi                                             # 004B8602
    mov edi, dword ptr [__112C20D]                       # 004B8603
    cmp edi, -1                                          # 004B8609
    je .L4B8634                                          # 004B860C
    mov eax, dword ptr [ebp]                             # 004B860E
    mov dword ptr [edi], eax                             # 004B8611
    mov eax, dword ptr [ebp + 4]                         # 004B8613
    mov dword ptr [edi + 4], eax                         # 004B8616
    mov eax, dword ptr [ebp + 8]                         # 004B8619
    mov dword ptr [edi + 8], eax                         # 004B861C
    mov eax, dword ptr [ebp + 0xc]                       # 004B861F
    mov dword ptr [edi + 0xc], eax                       # 004B8622
    add dword ptr [__112C20D], 0x10                      # 004B8625
    mov edi, dword ptr [__50D158]                        # 004B862C
    inc byte ptr [edi]                                   # 004B8632
.L4B8634:
    call _sub_4720EB                                     # 004B8634
    jb .L4B8644                                          # 004B8639
    mov esi, dword ptr [esp]                             # 004B863B
    mov byte ptr [esi + 0x110], bl                       # 004B863E
.L4B8644:
    pop esi                                              # 004B8644
    pop ecx                                              # 004B8645
    pop ebx                                              # 004B8646
    add ebp, 0x10                                        # 004B8647
.L4B864A:
    movzx edi, byte ptr [esi + 0xf]                      # 004B864A
    msvc_xor eax, eax                                    # 004B864E
    push eax                                             # 004B8650
.L4B8651:
    msvc_or edi, edi                                     # 004B8651
    je .L4B867A                                          # 004B8653
    push ebx                                             # 004B8655
    push ecx                                             # 004B8656
    push edi                                             # 004B8657
    push esi                                             # 004B8658
    call _sub_47206C                                     # 004B8659
    jb .L4B8670                                          # 004B865E
    mov eax, dword ptr [esp + 0x10]                      # 004B8660
    mov esi, dword ptr [esp]                             # 004B8664
    mov word ptr [esi + eax*2 + 0x10], bx                # 004B8667
    inc dword ptr [esp + 0x10]                           # 004B866C
.L4B8670:
    pop esi                                              # 004B8670
    pop edi                                              # 004B8671
    pop ecx                                              # 004B8672
    pop ebx                                              # 004B8673
    add ebp, 0x10                                        # 004B8674
    dec edi                                              # 004B8677
    jmp .L4B8651                                         # 004B8678
.L4B867A:
    pop eax                                              # 004B867A
    test word ptr [esi + 0xe0], 0x40                     # 004B867B
    je .L4B86D0                                          # 004B8684
    push ebx                                             # 004B8686
    push ecx                                             # 004B8687
    push esi                                             # 004B8688
    mov edi, dword ptr [__112C20D]                       # 004B8689
    cmp edi, -1                                          # 004B868F
    je .L4B86BA                                          # 004B8692
    mov eax, dword ptr [ebp]                             # 004B8694
    mov dword ptr [edi], eax                             # 004B8697
    mov eax, dword ptr [ebp + 4]                         # 004B8699
    mov dword ptr [edi + 4], eax                         # 004B869C
    mov eax, dword ptr [ebp + 8]                         # 004B869F
    mov dword ptr [edi + 8], eax                         # 004B86A2
    mov eax, dword ptr [ebp + 0xc]                       # 004B86A5
    mov dword ptr [edi + 0xc], eax                       # 004B86A8
    add dword ptr [__112C20D], 0x10                      # 004B86AB
    mov edi, dword ptr [__50D158]                        # 004B86B2
    inc byte ptr [edi]                                   # 004B86B8
.L4B86BA:
    call _sub_4720EB                                     # 004B86BA
    jb .L4B86CA                                          # 004B86BF
    mov esi, dword ptr [esp]                             # 004B86C1
    mov byte ptr [esi + 0x118], bl                       # 004B86C4
.L4B86CA:
    pop esi                                              # 004B86CA
    pop ecx                                              # 004B86CB
    pop ebx                                              # 004B86CC
    add ebp, 0x10                                        # 004B86CD
.L4B86D0:
    cmp byte ptr [esi + 0x119], 0                        # 004B86D0
    je .L4B8723                                          # 004B86D7
    push ebx                                             # 004B86D9
    push ecx                                             # 004B86DA
    push esi                                             # 004B86DB
    mov edi, dword ptr [__112C20D]                       # 004B86DC
    cmp edi, -1                                          # 004B86E2
    je .L4B870D                                          # 004B86E5
    mov eax, dword ptr [ebp]                             # 004B86E7
    mov dword ptr [edi], eax                             # 004B86EA
    mov eax, dword ptr [ebp + 4]                         # 004B86EC
    mov dword ptr [edi + 4], eax                         # 004B86EF
    mov eax, dword ptr [ebp + 8]                         # 004B86F2
    mov dword ptr [edi + 8], eax                         # 004B86F5
    mov eax, dword ptr [ebp + 0xc]                       # 004B86F8
    mov dword ptr [edi + 0xc], eax                       # 004B86FB
    add dword ptr [__112C20D], 0x10                      # 004B86FE
    mov edi, dword ptr [__50D158]                        # 004B8705
    inc byte ptr [edi]                                   # 004B870B
.L4B870D:
    call _sub_4720EB                                     # 004B870D
    jb .L4B871D                                          # 004B8712
    mov esi, dword ptr [esp]                             # 004B8714
    mov byte ptr [esi + 0x11a], bl                       # 004B8717
.L4B871D:
    pop esi                                              # 004B871D
    pop ecx                                              # 004B871E
    pop ebx                                              # 004B871F
    add ebp, 0x10                                        # 004B8720
.L4B8723:
    msvc_xor eax, eax                                    # 004B8723
.L4B8725:
    push ebx                                             # 004B8725
    mov bl, byte ptr [esi + 0x15a]                       # 004B8726
    and bl, 0x7f                                         # 004B872C
    cmp al, bl                                           # 004B872F
    pop ebx                                              # 004B8731
    jae .L4B8788                                         # 004B8732
    push eax                                             # 004B8734
    push ebx                                             # 004B8735
    push ecx                                             # 004B8736
    push esi                                             # 004B8737
    mov edi, dword ptr [__112C20D]                       # 004B8738
    cmp edi, -1                                          # 004B873E
    je .L4B8769                                          # 004B8741
    mov eax, dword ptr [ebp]                             # 004B8743
    mov dword ptr [edi], eax                             # 004B8746
    mov eax, dword ptr [ebp + 4]                         # 004B8748
    mov dword ptr [edi + 4], eax                         # 004B874B
    mov eax, dword ptr [ebp + 8]                         # 004B874E
    mov dword ptr [edi + 8], eax                         # 004B8751
    mov eax, dword ptr [ebp + 0xc]                       # 004B8754
    mov dword ptr [edi + 0xc], eax                       # 004B8757
    add dword ptr [__112C20D], 0x10                      # 004B875A
    mov edi, dword ptr [__50D158]                        # 004B8761
    inc byte ptr [edi]                                   # 004B8767
.L4B8769:
    call _sub_4720EB                                     # 004B8769
    jb .L4B877E                                          # 004B876E
    mov esi, dword ptr [esp]                             # 004B8770
    mov eax, dword ptr [esp + 0xc]                       # 004B8773
    mov byte ptr [eax + esi + 0x15b], bl                 # 004B8777
.L4B877E:
    pop esi                                              # 004B877E
    pop ecx                                              # 004B877F
    pop ebx                                              # 004B8780
    pop eax                                              # 004B8781
    add ebp, 0x10                                        # 004B8782
    inc eax                                              # 004B8785
    jmp .L4B8725                                         # 004B8786
.L4B8788:
    call _sub_47221F                                     # 004B8788
    push eax                                             # 004B878D
    push ebx                                             # 004B878E
    push ecx                                             # 004B878F
    msvc_xor edx, edx                                    # 004B8790
    msvc_xor edi, edi                                    # 004B8792
.L4B8794:
    test byte ptr [edi + esi + 0x43], 1                  # 004B8794
    je .L4B8903                                          # 004B8799
    mov eax, dword ptr [esp + 8]                         # 004B879F
    mov dword ptr [edi + esi + 0x4a], eax                # 004B87A3
    mov bl, byte ptr [edi + esi + 0x3c]                  # 004B87A7
    mov ecx, 1                                           # 004B87AB
    cmp bl, 8                                            # 004B87B0
    je .L4B87C8                                          # 004B87B3
    mov ecx, 2                                           # 004B87B5
    cmp bl, 0x10                                         # 004B87BA
    je .L4B87C8                                          # 004B87BD
    mov cl, 3                                            # 004B87BF
    cmp bl, 0x20                                         # 004B87C1
    je .L4B87C8                                          # 004B87C4
    mov cl, 4                                            # 004B87C6
.L4B87C8:
    mov byte ptr [edi + esi + 0x47], cl                  # 004B87C8
    movzx eax, byte ptr [edi + esi + 0x3e]               # 004B87CC
    movzx ebx, byte ptr [edi + esi + 0x40]               # 004B87D1
    imul eax, ebx                                        # 004B87D6
    movzx ebx, byte ptr [edi + esi + 0x41]               # 004B87D9
    imul eax, ebx                                        # 004B87DE
    test byte ptr [edi + esi + 0x43], 0x20               # 004B87E1
    je .L4B87E9                                          # 004B87E6
    inc eax                                              # 004B87E8
.L4B87E9:
    mov byte ptr [edi + esi + 0x49], al                  # 004B87E9
    imul eax, dword ptr [ecx*4 + __503F0C]               # 004B87ED
    test byte ptr [edi + esi + 0x43], 2                  # 004B87F5
    je .L4B87FE                                          # 004B87FA
    shr eax, 1                                           # 004B87FC
.L4B87FE:
    add dword ptr [esp + 8], eax                         # 004B87FE
    test byte ptr [edi + esi + 0x43], 8                  # 004B8802
    je .L4B88BB                                          # 004B8807
    mov eax, dword ptr [esp + 8]                         # 004B880D
    mov dword ptr [edi + esi + 0x52], eax                # 004B8811
    mov eax, 4                                           # 004B8815
    test byte ptr [edi + esi + 0x43], 2                  # 004B881A
    jne .L4B8824                                         # 004B881F
    add eax, 4                                           # 004B8821
.L4B8824:
    movzx ebx, byte ptr [edi + esi + 0x49]               # 004B8824
    imul eax, ebx                                        # 004B8829
    add dword ptr [esp + 8], eax                         # 004B882C
    mov bl, byte ptr [edi + esi + 0x3d]                  # 004B8830
    mov ecx, 0                                           # 004B8834
    cmp bl, 4                                            # 004B8839
    je .L4B8854                                          # 004B883C
    mov ecx, 1                                           # 004B883E
    cmp bl, 8                                            # 004B8843
    je .L4B8854                                          # 004B8846
    mov ecx, 2                                           # 004B8848
    cmp bl, 0x10                                         # 004B884D
    je .L4B8854                                          # 004B8850
    mov cl, 3                                            # 004B8852
.L4B8854:
    movzx eax, byte ptr [edi + esi + 0x49]               # 004B8854
    test byte ptr [edi + esi + 0x43], 2                  # 004B8859
    jne .L4B8862                                         # 004B885E
    shl eax, 1                                           # 004B8860
.L4B8862:
    mov byte ptr [edi + esi + 0x48], cl                  # 004B8862
    imul eax, dword ptr [ecx*4 + __503F0C]               # 004B8866
    add dword ptr [esp + 8], eax                         # 004B886E
    test byte ptr [edi + esi + 0x43], 0x10               # 004B8872
    je .L4B88BB                                          # 004B8877
    mov eax, dword ptr [esp + 8]                         # 004B8879
    mov dword ptr [edi + esi + 0x56], eax                # 004B887D
    mov eax, 4                                           # 004B8881
    test byte ptr [edi + esi + 0x43], 2                  # 004B8886
    jne .L4B8890                                         # 004B888B
    add eax, 4                                           # 004B888D
.L4B8890:
    movzx ebx, byte ptr [edi + esi + 0x49]               # 004B8890
    imul eax, ebx                                        # 004B8895
    add dword ptr [esp + 8], eax                         # 004B8898
    movzx ecx, byte ptr [edi + esi + 0x48]               # 004B889C
    movzx eax, byte ptr [edi + esi + 0x49]               # 004B88A1
    test byte ptr [edi + esi + 0x43], 2                  # 004B88A6
    jne .L4B88AF                                         # 004B88AB
    shl eax, 1                                           # 004B88AD
.L4B88AF:
    imul eax, dword ptr [ecx*4 + __503F0C]               # 004B88AF
    add dword ptr [esp + 8], eax                         # 004B88B7
.L4B88BB:
    test byte ptr [edi + esi + 0x43], 4                  # 004B88BB
    je .L4B88E6                                          # 004B88C0
    mov eax, dword ptr [esp + 8]                         # 004B88C2
    mov dword ptr [edi + esi + 0x4e], eax                # 004B88C6
    movzx ecx, byte ptr [edi + esi + 0x47]               # 004B88CA
    mov eax, dword ptr [ecx*4 + __503F0C]                # 004B88CF
    test byte ptr [edi + esi + 0x43], 2                  # 004B88D6
    je .L4B88DF                                          # 004B88DB
    shr eax, 1                                           # 004B88DD
.L4B88DF:
    imul eax, eax, 3                                     # 004B88DF
    add dword ptr [esp + 8], eax                         # 004B88E2
.L4B88E6:
    mov ebx, dword ptr [edi + esi + 0x4a]                # 004B88E6
    mov ecx, dword ptr [esp + 8]                         # 004B88EA
    msvc_sub ecx, ebx                                    # 004B88EE
    push edx                                             # 004B88F0
    call _sub_4530F8                                     # 004B88F1
    mov byte ptr [edi + esi + 0x44], al                  # 004B88F6
    mov byte ptr [edi + esi + 0x45], bl                  # 004B88FA
    mov byte ptr [edi + esi + 0x46], bh                  # 004B88FE
    pop edx                                              # 004B8902
.L4B8903:
    inc edx                                              # 004B8903
    add edi, 0x1e                                        # 004B8904
    cmp edx, 4                                           # 004B8907
    jb .L4B8794                                          # 004B890A
    msvc_xor edx, edx                                    # 004B8910
    msvc_xor edi, edi                                    # 004B8912
.L4B8914:
    test byte ptr [edi + esi + 0xb5], 1                  # 004B8914
    je .L4B89E0                                          # 004B891C
    movzx eax, byte ptr [edi + esi + 0xb4]               # 004B8922
    mov byte ptr [edi + esi + 0xb9], al                  # 004B892A
    mov eax, dword ptr [esp + 8]                         # 004B8931
    mov dword ptr [edi + esi + 0xba], eax                # 004B8935
    movzx eax, byte ptr [edi + esi + 0xb9]               # 004B893C
    imul eax, eax, 0x20                                  # 004B8944
    test byte ptr [edi + esi + 0xb5], 2                  # 004B8947
    je .L4B8953                                          # 004B894F
    shr eax, 1                                           # 004B8951
.L4B8953:
    add dword ptr [esp + 8], eax                         # 004B8953
    test byte ptr [edi + esi + 0xb5], 4                  # 004B8957
    je .L4B89B7                                          # 004B895F
    mov eax, dword ptr [esp + 8]                         # 004B8961
    mov dword ptr [edi + esi + 0xbe], eax                # 004B8965
    movzx eax, byte ptr [edi + esi + 0xb9]               # 004B896C
    imul eax, eax, 0x40                                  # 004B8974
    test byte ptr [edi + esi + 0xb5], 2                  # 004B8977
    je .L4B8983                                          # 004B897F
    shr eax, 1                                           # 004B8981
.L4B8983:
    add dword ptr [esp + 8], eax                         # 004B8983
    test byte ptr [edi + esi + 0xb5], 8                  # 004B8987
    je .L4B89B7                                          # 004B898F
    mov eax, dword ptr [esp + 8]                         # 004B8991
    mov dword ptr [edi + esi + 0xc2], eax                # 004B8995
    movzx eax, byte ptr [edi + esi + 0xb9]               # 004B899C
    imul eax, eax, 0x40                                  # 004B89A4
    test byte ptr [edi + esi + 0xb5], 2                  # 004B89A7
    je .L4B89B3                                          # 004B89AF
    shr eax, 1                                           # 004B89B1
.L4B89B3:
    add dword ptr [esp + 8], eax                         # 004B89B3
.L4B89B7:
    mov ebx, dword ptr [edi + esi + 0xba]                # 004B89B7
    mov ecx, dword ptr [esp + 8]                         # 004B89BE
    msvc_sub ecx, ebx                                    # 004B89C2
    push edx                                             # 004B89C4
    call _sub_4530F8                                     # 004B89C5
    mov byte ptr [edi + esi + 0xb6], al                  # 004B89CA
    mov byte ptr [edi + esi + 0xb7], bl                  # 004B89D1
    mov byte ptr [edi + esi + 0xb8], bh                  # 004B89D8
    pop edx                                              # 004B89DF
.L4B89E0:
    inc edx                                              # 004B89E0
    add edi, 0x12                                        # 004B89E1
    cmp edx, 2                                           # 004B89E4
    jb .L4B8914                                          # 004B89E7
    pop ecx                                              # 004B89ED
    pop ebx                                              # 004B89EE
    pop eax                                              # 004B89EF
    mov edi, dword ptr [__112C20D]                       # 004B89F0
    cmp edi, -1                                          # 004B89F6
    je .L4B89FE                                          # 004B89F9
    mov byte ptr [edi], 0                                # 004B89FB
.L4B89FE:
    ret                                                  # 004B89FE
.L4B89FF:
    mov word ptr [esi], 0                                # 004B89FF
    mov byte ptr [esi + 5], 0                            # 004B8A04
    mov byte ptr [esi + 0x10d], 0                        # 004B8A08
    mov byte ptr [esi + 0x110], 0                        # 004B8A0F
    msvc_xor eax, eax                                    # 004B8A16
.L4B8A18:
    mov byte ptr [eax + esi + 0x20], 0                   # 004B8A18
    inc eax                                              # 004B8A1D
    cmp eax, 4                                           # 004B8A1E
    jb .L4B8A18                                          # 004B8A21
    mov byte ptr [esi + 0xe2], 0                         # 004B8A23
    mov byte ptr [esi + 0xe3], 0                         # 004B8A2A
    mov dword ptr [esi + 0xe4], 0                        # 004B8A31
    mov dword ptr [esi + 0xe8], 0                        # 004B8A3B
    mov byte ptr [esi + 0x10c], 0                        # 004B8A45
    msvc_xor eax, eax                                    # 004B8A4C
.L4B8A4E:
    mov byte ptr [eax + esi + 0xec], 0                   # 004B8A4E
    inc eax                                              # 004B8A56
    cmp eax, 0x20                                        # 004B8A57
    jb .L4B8A4E                                          # 004B8A5A
    msvc_xor eax, eax                                    # 004B8A5C
.L4B8A5E:
    mov word ptr [esi + eax*2 + 0x10], 0                 # 004B8A5E
    inc eax                                              # 004B8A65
    cmp eax, 8                                           # 004B8A66
    jb .L4B8A5E                                          # 004B8A69
    msvc_xor edx, edx                                    # 004B8A6B
    msvc_xor edi, edi                                    # 004B8A6D
.L4B8A6F:
    mov dword ptr [edi + esi + 0x4a], 0                  # 004B8A6F
    mov byte ptr [edi + esi + 0x47], 0                   # 004B8A77
    mov byte ptr [edi + esi + 0x49], 0                   # 004B8A7C
    mov dword ptr [edi + esi + 0x52], 0                  # 004B8A81
    mov byte ptr [edi + esi + 0x48], 0                   # 004B8A89
    mov dword ptr [edi + esi + 0x56], 0                  # 004B8A8E
    mov dword ptr [edi + esi + 0x4e], 0                  # 004B8A96
    mov byte ptr [edi + esi + 0x44], 0                   # 004B8A9E
    mov byte ptr [edi + esi + 0x45], 0                   # 004B8AA3
    mov byte ptr [edi + esi + 0x46], 0                   # 004B8AA8
    inc edx                                              # 004B8AAD
    add edi, 0x1e                                        # 004B8AAE
    cmp edx, 4                                           # 004B8AB1
    jb .L4B8A6F                                          # 004B8AB4
    msvc_xor edx, edx                                    # 004B8AB6
    msvc_xor edi, edi                                    # 004B8AB8
.L4B8ABA:
    mov dword ptr [edi + esi + 0xba], 0                  # 004B8ABA
    mov dword ptr [edi + esi + 0xbe], 0                  # 004B8AC5
    mov dword ptr [edi + esi + 0xc2], 0                  # 004B8AD0
    mov byte ptr [edi + esi + 0xb6], 0                   # 004B8ADB
    mov byte ptr [edi + esi + 0xb7], 0                   # 004B8AE3
    mov byte ptr [edi + esi + 0xb8], 0                   # 004B8AEB
    mov byte ptr [edi + esi + 0xb9], 0                   # 004B8AF3
    inc edx                                              # 004B8AFB
    add edi, 0x12                                        # 004B8AFC
    cmp edx, 2                                           # 004B8AFF
    jb .L4B8ABA                                          # 004B8B02
    mov byte ptr [esi + 0x118], 0                        # 004B8B04
    mov byte ptr [esi + 0x11a], 0                        # 004B8B0B
    msvc_xor eax, eax                                    # 004B8B12
.L4B8B14:
    mov byte ptr [eax + esi + 0x15b], 0                  # 004B8B14
    inc eax                                              # 004B8B1C
    cmp eax, 3                                           # 004B8B1D
    jb .L4B8B14                                          # 004B8B20
    ret                                                  # 004B8B22
.L4B8B23:
    cmp word ptr [esi + 8], 0                            # 004B8B23
    jle .L4B8C4B                                         # 004B8B28
    cmp word ptr [esi + 0xc], 0                          # 004B8B2E
    jl .L4B8C4B                                          # 004B8B33
    test word ptr [esi + 0xe0], 0x200                    # 004B8B39
    je .L4B8B5D                                          # 004B8B42
    cmp byte ptr [esi + 6], 0                            # 004B8B44
    jne .L4B8C4B                                         # 004B8B48
    test word ptr [esi + 0xe0], 0x40                     # 004B8B4E
    jne .L4B8C4B                                         # 004B8B57
.L4B8B5D:
    cmp byte ptr [esi + 6], 4                            # 004B8B5D
    ja .L4B8C4B                                          # 004B8B61
    cmp byte ptr [esi + 0x10c], 2                        # 004B8B67
    ja .L4B8C4B                                          # 004B8B6E
    cmp byte ptr [esi + 0xf], 8                          # 004B8B74
    ja .L4B8C4B                                          # 004B8B78
    mov ax, word ptr [esi + 0xdc]                        # 004B8B7E
    cmp ax, word ptr [esi + 0xda]                        # 004B8B85
    ja .L4B8C4B                                          # 004B8B8C
    msvc_xor edx, edx                                    # 004B8B92
    msvc_xor edi, edi                                    # 004B8B94
.L4B8B96:
    test byte ptr [edi + esi + 0x43], 1                  # 004B8B96
    je .L4B8C0A                                          # 004B8B9B
    cmp byte ptr [edi + esi + 0x3c], 8                   # 004B8B9D
    je .L4B8BBD                                          # 004B8BA2
    cmp byte ptr [edi + esi + 0x3c], 0x10                # 004B8BA4
    je .L4B8BBD                                          # 004B8BA9
    cmp byte ptr [edi + esi + 0x3c], 0x20                # 004B8BAB
    je .L4B8BBD                                          # 004B8BB0
    cmp byte ptr [edi + esi + 0x3c], 0x40                # 004B8BB2
    jne .L4B8C4B                                         # 004B8BB7
.L4B8BBD:
    cmp byte ptr [edi + esi + 0x3d], 4                   # 004B8BBD
    je .L4B8BD9                                          # 004B8BC2
    cmp byte ptr [edi + esi + 0x3d], 8                   # 004B8BC4
    je .L4B8BD9                                          # 004B8BC9
    cmp byte ptr [edi + esi + 0x3d], 0x10                # 004B8BCB
    je .L4B8BD9                                          # 004B8BD0
    cmp byte ptr [edi + esi + 0x3d], 0x20                # 004B8BD2
    jne .L4B8C4B                                         # 004B8BD7
.L4B8BD9:
    cmp byte ptr [edi + esi + 0x3e], 1                   # 004B8BD9
    je .L4B8BEE                                          # 004B8BDE
    cmp byte ptr [edi + esi + 0x3e], 2                   # 004B8BE0
    je .L4B8BEE                                          # 004B8BE5
    cmp byte ptr [edi + esi + 0x3e], 4                   # 004B8BE7
    jne .L4B8C4B                                         # 004B8BEC
.L4B8BEE:
    cmp byte ptr [edi + esi + 0x3f], 1                   # 004B8BEE
    jb .L4B8C4B                                          # 004B8BF3
    cmp byte ptr [edi + esi + 0x3f], 5                   # 004B8BF5
    ja .L4B8C4B                                          # 004B8BFA
    cmp byte ptr [edi + esi + 0x41], 1                   # 004B8BFC
    je .L4B8C0A                                          # 004B8C01
    cmp byte ptr [edi + esi + 0x41], 3                   # 004B8C03
    jne .L4B8C4B                                         # 004B8C08
.L4B8C0A:
    inc edx                                              # 004B8C0A
    add edi, 0x1e                                        # 004B8C0B
    cmp edx, 4                                           # 004B8C0E
    jb .L4B8B96                                          # 004B8C11
    msvc_xor edx, edx                                    # 004B8C13
    msvc_xor edi, edi                                    # 004B8C15
.L4B8C17:
    test byte ptr [edi + esi + 0xb5], 1                  # 004B8C17
    je .L4B8C3F                                          # 004B8C1F
    cmp byte ptr [edi + esi + 0xb4], 1                   # 004B8C21
    je .L4B8C3F                                          # 004B8C29
    cmp byte ptr [edi + esi + 0xb4], 2                   # 004B8C2B
    je .L4B8C3F                                          # 004B8C33
    cmp byte ptr [edi + esi + 0xb4], 4                   # 004B8C35
    jne .L4B8C4B                                         # 004B8C3D
.L4B8C3F:
    inc edx                                              # 004B8C3F
    add edi, 0x12                                        # 004B8C40
    cmp edx, 2                                           # 004B8C43
    jb .L4B8C17                                          # 004B8C46
    msvc_and eax, eax                                    # 004B8C48
    ret                                                  # 004B8C4A
.L4B8C4B:
    stc                                                  # 004B8C4B
    ret                                                  # 004B8C4C
.L4B8C4D:
    push esi                                             # 004B8C4D
    msvc_or ah, ah                                       # 004B8C4E
    jne .L4B8C9D                                         # 004B8C50
    push edi                                             # 004B8C52
    push ebp                                             # 004B8C53
    msvc_mov ax, cx                                      # 004B8C54
    msvc_mov cx, dx                                      # 004B8C57
    sub ax, 0x38                                         # 004B8C5A
    sub cx, 0x38                                         # 004B8C5E
    mov bx, 0x70                                         # 004B8C62
    mov dx, 0x70                                         # 004B8C66
    call _sub_4CEC50                                     # 004B8C6A
    pop ebp                                              # 004B8C6F
    je .L4B8C9A                                          # 004B8C70
    mov bl, 0xb                                          # 004B8C72
    mov bh, 2                                            # 004B8C74
    movzx eax, word ptr [_scenarioChunk3+1046]           # 004B8C76
    msvc_mov si, ax                                      # 004B8C7D
    add si, 2                                            # 004B8C80
    shr esi, 2                                           # 004B8C84
    and eax, 0x3f                                        # 004B8C87
    and esi, 0x3f                                        # 004B8C8A
    mov cx, 0x38                                         # 004B8C8D
    mov dx, 0x4b                                         # 004B8C91
    call _sub_4B7733                                     # 004B8C95
.L4B8C9A:
    pop edi                                              # 004B8C9A
    pop esi                                              # 004B8C9B
    ret                                                  # 004B8C9C
.L4B8C9D:
    cmp word ptr [ebp + 0x114], 0                        # 004B8C9D
    je .L4B8CC2                                          # 004B8CA5
    push ecx                                             # 004B8CA7
    push edx                                             # 004B8CA8
    push ebp                                             # 004B8CA9
    lea esi, [ebp + 0x114]                               # 004B8CAA
    mov bx, 0x6bb                                        # 004B8CB0
    msvc_xor al, al                                      # 004B8CB4
    call _sub_494B3F                                     # 004B8CB6
    pop ebp                                              # 004B8CBB
    pop edx                                              # 004B8CBC
    pop ecx                                              # 004B8CBD
    add dx, 0xa                                          # 004B8CBE
.L4B8CC2:
    cmp word ptr [ebp + 0x116], -1                       # 004B8CC2
    je .L4B8CE7                                          # 004B8CCA
    push ecx                                             # 004B8CCC
    push edx                                             # 004B8CCD
    push ebp                                             # 004B8CCE
    lea esi, [ebp + 0x116]                               # 004B8CCF
    mov bx, 0x6bc                                        # 004B8CD5
    msvc_xor al, al                                      # 004B8CD9
    call _sub_494B3F                                     # 004B8CDB
    pop ebp                                              # 004B8CE0
    pop edx                                              # 004B8CE1
    pop ecx                                              # 004B8CE2
    add dx, 0xa                                          # 004B8CE3
.L4B8CE7:
    cmp word ptr [ebp + 0xd8], 0                         # 004B8CE7
    je .L4B8D18                                          # 004B8CEF
    cmp byte ptr [ebp + 2], 2                            # 004B8CF1
    je .L4B8D18                                          # 004B8CF5
    cmp byte ptr [ebp + 2], 3                            # 004B8CF7
    je .L4B8D18                                          # 004B8CFB
    push ecx                                             # 004B8CFD
    push edx                                             # 004B8CFE
    push ebp                                             # 004B8CFF
    lea esi, [ebp + 0xd8]                                # 004B8D00
    mov bx, 0x6bd                                        # 004B8D06
    msvc_xor al, al                                      # 004B8D0A
    call _sub_494B3F                                     # 004B8D0C
    pop ebp                                              # 004B8D11
    pop edx                                              # 004B8D12
    pop ecx                                              # 004B8D13
    add dx, 0xa                                          # 004B8D14
.L4B8D18:
    push ecx                                             # 004B8D18
    push edx                                             # 004B8D19
    push ebp                                             # 004B8D1A
    lea esi, [ebp + 0xde]                                # 004B8D1B
    mov bx, 0x6be                                        # 004B8D21
    msvc_xor al, al                                      # 004B8D25
    call _sub_494B3F                                     # 004B8D27
    pop ebp                                              # 004B8D2C
    pop edx                                              # 004B8D2D
    pop ecx                                              # 004B8D2E
    add dx, 0xa                                          # 004B8D2F
    push ecx                                             # 004B8D33
    push edx                                             # 004B8D34
    push ebp                                             # 004B8D35
    lea esi, [ebp + 0xda]                                # 004B8D36
    mov bx, 0x6bf                                        # 004B8D3C
    msvc_xor al, al                                      # 004B8D40
    call _sub_494B3F                                     # 004B8D42
    pop ebp                                              # 004B8D47
    pop edx                                              # 004B8D48
    pop ecx                                              # 004B8D49
    add dx, 0xa                                          # 004B8D4A
    cmp byte ptr [ebp + 0x10c], 0                        # 004B8D4E
    je .L4B8ED0                                          # 004B8D55
    push ecx                                             # 004B8D5B
    push edx                                             # 004B8D5C
    push edi                                             # 004B8D5D
    mov_offset edi, _str_1250                            # 004B8D5E
    movzx eax, byte ptr [ebp + 0xe2]                     # 004B8D63
    mov dword ptr [__112C828], eax                       # 004B8D6A
    mov esi, dword ptr [ebp + 0xe4]                      # 004B8D6F
    bsf ebx, esi                                         # 004B8D75
    je .L4B8DF4                                          # 004B8D78
    btr esi, ebx                                         # 004B8D7A
    push esi                                             # 004B8D7D
    mov ebx, dword ptr [ebx*4 + _cargoObjects]           # 004B8D7E
    mov dx, word ptr [ebx + 8]                           # 004B8D85
    cmp eax, 1                                           # 004B8D89
    je .L4B8D92                                          # 004B8D8C
    mov dx, word ptr [ebx + 0xa]                         # 004B8D8E
.L4B8D92:
    mov word ptr [__112C826], dx                         # 004B8D92
    mov_offset ecx, __112C826                            # 004B8D99
    mov eax, 0x6c0                                       # 004B8D9E
    call _sub_4958C6                                     # 004B8DA3
    pop esi                                              # 004B8DA8
    bsf ebx, esi                                         # 004B8DA9
    je .L4B8DF4                                          # 004B8DAC
    mov word ptr [edi], 0x2820                           # 004B8DAE
    add edi, 2                                           # 004B8DB3
.L4B8DB6:
    btr esi, ebx                                         # 004B8DB6
    cmp byte ptr [edi - 1], 0x28                         # 004B8DB9
    je .L4B8DC3                                          # 004B8DBD
    mov byte ptr [edi], 0x20                             # 004B8DBF
    inc edi                                              # 004B8DC2
.L4B8DC3:
    push esi                                             # 004B8DC3
    mov ebx, dword ptr [ebx*4 + _cargoObjects]           # 004B8DC4
    mov dx, word ptr [ebx]                               # 004B8DCB
    mov word ptr [__112C826], dx                         # 004B8DCE
    mov_offset ecx, __112C826                            # 004B8DD5
    mov eax, 0x4ed                                       # 004B8DDA
    call _sub_4958C6                                     # 004B8DDF
    pop esi                                              # 004B8DE4
    mov byte ptr [edi], 0x20                             # 004B8DE5
    inc edi                                              # 004B8DE8
    bsf ebx, esi                                         # 004B8DE9
    jne .L4B8DB6                                         # 004B8DEC
    mov word ptr [edi - 1], 0x29                         # 004B8DEE
.L4B8DF4:
    test word ptr [ebp + 0xe0], 0x4000                   # 004B8DF4
    je .L4B8E09                                          # 004B8DFD
    mov eax, 0x4ef                                       # 004B8DFF
    call _sub_4958C6                                     # 004B8E04
.L4B8E09:
    cmp byte ptr [ebp + 0x10c], 1                        # 004B8E09
    jbe .L4B8EAC                                         # 004B8E10
    movzx eax, byte ptr [ebp + 0xe3]                     # 004B8E16
    mov dword ptr [__112C828], eax                       # 004B8E1D
    mov esi, dword ptr [ebp + 0xe8]                      # 004B8E22
    bsf ebx, esi                                         # 004B8E28
    je .L4B8EAC                                          # 004B8E2B
    btr esi, ebx                                         # 004B8E2D
    push esi                                             # 004B8E30
    mov ebx, dword ptr [ebx*4 + _cargoObjects]           # 004B8E31
    mov dx, word ptr [ebx + 8]                           # 004B8E38
    cmp eax, 1                                           # 004B8E3C
    je .L4B8E45                                          # 004B8E3F
    mov dx, word ptr [ebx + 0xa]                         # 004B8E41
.L4B8E45:
    mov word ptr [__112C826], dx                         # 004B8E45
    mov_offset ecx, __112C826                            # 004B8E4C
    mov eax, 0x4ea                                       # 004B8E51
    call _sub_4958C6                                     # 004B8E56
    pop esi                                              # 004B8E5B
    bsf ebx, esi                                         # 004B8E5C
    je .L4B8EAC                                          # 004B8E5F
    mov word ptr [edi], 0x2820                           # 004B8E61
    add edi, 2                                           # 004B8E66
.L4B8E69:
    bsf ebx, esi                                         # 004B8E69
    je .L4B8EAC                                          # 004B8E6C
    btr esi, ebx                                         # 004B8E6E
    cmp byte ptr [edi - 1], 0x28                         # 004B8E71
    je .L4B8E7B                                          # 004B8E75
    mov byte ptr [edi], 0x20                             # 004B8E77
    inc edi                                              # 004B8E7A
.L4B8E7B:
    push esi                                             # 004B8E7B
    mov ebx, dword ptr [ebx*4 + _cargoObjects]           # 004B8E7C
    mov dx, word ptr [ebx]                               # 004B8E83
    mov word ptr [__112C826], dx                         # 004B8E86
    mov_offset ecx, __112C826                            # 004B8E8D
    mov eax, 0x4ed                                       # 004B8E92
    call _sub_4958C6                                     # 004B8E97
    pop esi                                              # 004B8E9C
    mov byte ptr [edi], 0x20                             # 004B8E9D
    inc edi                                              # 004B8EA0
    bsf ebx, esi                                         # 004B8EA1
    jne .L4B8E69                                         # 004B8EA4
    mov word ptr [edi - 1], 0x29                         # 004B8EA6
.L4B8EAC:
    pop edi                                              # 004B8EAC
    pop edx                                              # 004B8EAD
    pop ecx                                              # 004B8EAE
    mov esi, dword ptr [esp]                             # 004B8EAF
    push ecx                                             # 004B8EB2
    push ebp                                             # 004B8EB3
    mov bp, word ptr [esi + 0x34]                        # 004B8EB4
    add bp, word ptr [esi + 0x30]                        # 004B8EB8
    msvc_sub bp, cx                                      # 004B8EBC
    sub bp, 4                                            # 004B8EBF
    mov bx, 0x4e2                                        # 004B8EC3
    msvc_xor al, al                                      # 004B8EC7
    call _sub_495224                                     # 004B8EC9
    pop ebp                                              # 004B8ECE
    pop ecx                                              # 004B8ECF
.L4B8ED0:
    pop esi                                              # 004B8ED0
    ret                                                  # 004B8ED1

    .global _sub_4B8ED2
_sub_4B8ED2:
    pushal                                               # 004B8ED2
    mov di, word ptr [_scenarioChunk3+42]                # 004B8ED3
    movzx ebx, dl                                        # 004B8EDA
    imul ebx, ebx, 0x8fa8                                # 004B8EDD
.L4B8EE3:
    cmp di, -1                                           # 004B8EE3
    je .L4B8F9B                                          # 004B8EE7
    movzx edi, di                                        # 004B8EED
    shl edi, 7                                           # 004B8EF0
    add_offset edi, _things                              # 004B8EF3
    cmp dl, byte ptr [edi + 0x21]                        # 004B8EF9
    jne .L4B8F92                                         # 004B8EFC
    movzx esi, word ptr [edi + 0x3a]                     # 004B8F02
    shl esi, 7                                           # 004B8F06
    add_offset esi, _things                              # 004B8F09
    movzx esi, word ptr [esi + 0x3a]                     # 004B8F0F
    shl esi, 7                                           # 004B8F13
    add_offset esi, _things                              # 004B8F16
    movzx esi, word ptr [esi + 0x3a]                     # 004B8F1C
    shl esi, 7                                           # 004B8F20
    add_offset esi, _things                              # 004B8F23
.L4B8F29:
    cmp byte ptr [esi + 1], 6                            # 004B8F29
    je .L4B8F92                                          # 004B8F2D
    movzx ebp, word ptr [esi + 0x40]                     # 004B8F2F
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B8F33
    mov cl, byte ptr [ebp + 4]                           # 004B8F3A
    movzx ebp, byte ptr [ebp + 0xe]                      # 004B8F3D
    mov ax, word ptr [ebx + _companies+26]               # 004B8F41
    bt dword ptr [ebx + _companies+48], ebp              # 004B8F48
    jae .L4B8F59                                         # 004B8F4F
    mov ax, word ptr [ebx + ebp*2 + _companies+26]       # 004B8F51
.L4B8F59:
    mov word ptr [esi + 0x24], ax                        # 004B8F59
    movzx esi, word ptr [esi + 0x3a]                     # 004B8F5D
    shl esi, 7                                           # 004B8F61
    add_offset esi, _things                              # 004B8F64
    mov word ptr [esi + 0x24], ax                        # 004B8F6A
    movzx esi, word ptr [esi + 0x3a]                     # 004B8F6E
    shl esi, 7                                           # 004B8F72
    add_offset esi, _things                              # 004B8F75
    mov word ptr [esi + 0x24], ax                        # 004B8F7B
    movzx esi, word ptr [esi + 0x3a]                     # 004B8F7F
    shl esi, 7                                           # 004B8F83
    add_offset esi, _things                              # 004B8F86
    dec cl                                               # 004B8F8C
    jne .L4B8F59                                         # 004B8F8E
    jmp .L4B8F29                                         # 004B8F90
.L4B8F92:
    mov di, word ptr [edi + 4]                           # 004B8F92
    msvc_jmp .L4B8EE3                                    # 004B8F96
.L4B8F9B:
    call _sub_4CD406                                     # 004B8F9B
    popal                                                # 004B8FA0
    ret                                                  # 004B8FA1

    .global _sub_4B8FA2
_sub_4B8FA2:
    push eax                                             # 004B8FA2
    push ebx                                             # 004B8FA3
    push edi                                             # 004B8FA4
    push esi                                             # 004B8FA5
    mov edi, dword ptr [eax*4 + _vehicleObjects]         # 004B8FA6
    cmp byte ptr [edi + 2], 2                            # 004B8FAD
    je .L4B90A4                                          # 004B8FB1
    cmp byte ptr [edi + 2], 3                            # 004B8FB7
    je .L4B90A4                                          # 004B8FBB
    mov bl, byte ptr [edi + 5]                           # 004B8FC1
    cmp bl, byte ptr [esi + 0x35]                        # 004B8FC4
    jne .L4B90E1                                         # 004B8FC7
.L4B8FCD:
    mov bl, byte ptr [edi + 2]                           # 004B8FCD
    cmp bl, byte ptr [esi + 0x42]                        # 004B8FD0
    jne .L4B90E1                                         # 004B8FD3
    mov bl, byte ptr [edi + 3]                           # 004B8FD9
    cmp bl, byte ptr [esi + 0x5e]                        # 004B8FDC
    jne .L4B90E1                                         # 004B8FDF
    movzx esi, word ptr [esi + 0x3a]                     # 004B8FE5
    shl esi, 7                                           # 004B8FE9
    add_offset esi, _things                              # 004B8FEC
    movzx esi, word ptr [esi + 0x3a]                     # 004B8FF2
    shl esi, 7                                           # 004B8FF6
    add_offset esi, _things                              # 004B8FF9
    movzx esi, word ptr [esi + 0x3a]                     # 004B8FFF
    shl esi, 7                                           # 004B9003
    add_offset esi, _things                              # 004B9006
    cmp byte ptr [esi + 1], 6                            # 004B900C
    je .L4B9070                                          # 004B9010
.L4B9012:
    movzx ebx, word ptr [esi + 0x40]                     # 004B9012
    call _sub_4B90F0                                     # 004B9016
    jb .L4B90EA                                          # 004B901B
.L4B9021:
    movzx esi, word ptr [esi + 0x3a]                     # 004B9021
    shl esi, 7                                           # 004B9025
    add_offset esi, _things                              # 004B9028
    movzx esi, word ptr [esi + 0x3a]                     # 004B902E
    shl esi, 7                                           # 004B9032
    add_offset esi, _things                              # 004B9035
    movzx esi, word ptr [esi + 0x3a]                     # 004B903B
    shl esi, 7                                           # 004B903F
    add_offset esi, _things                              # 004B9042
    cmp byte ptr [esi + 1], 6                            # 004B9048
    je .L4B9070                                          # 004B904C
    movzx edi, word ptr [esi + 0x3a]                     # 004B904E
    shl edi, 7                                           # 004B9052
    add_offset edi, _things                              # 004B9055
    movzx edi, word ptr [edi + 0x3a]                     # 004B905B
    shl edi, 7                                           # 004B905F
    add_offset edi, _things                              # 004B9062
    cmp byte ptr [edi + 1], 5                            # 004B9068
    je .L4B9021                                          # 004B906C
    jmp .L4B9012                                         # 004B906E
.L4B9070:
    mov esi, dword ptr [esp]                             # 004B9070
    cmp byte ptr [esi + 0x42], 1                         # 004B9073
    jne .L4B909D                                         # 004B9077
    cmp byte ptr [esi + 0x35], 0xff                      # 004B9079
    jne .L4B909D                                         # 004B907D
    push ecx                                             # 004B907F
    push edx                                             # 004B9080
    call _sub_4B97B7                                     # 004B9081
    mov ebx, dword ptr [esp + 0x14]                      # 004B9086
    push edx                                             # 004B908A
    call _sub_4B9780                                     # 004B908B
    pop edx                                              # 004B9090
    msvc_add edx, eax                                    # 004B9091
    cmp edx, 0xb0                                        # 004B9093
    pop edx                                              # 004B9099
    pop ecx                                              # 004B909A
    ja .L4B90D6                                          # 004B909B
.L4B909D:
    pop esi                                              # 004B909D
    pop edi                                              # 004B909E
    pop ebx                                              # 004B909F
    pop eax                                              # 004B90A0
    msvc_and eax, eax                                    # 004B90A1
    ret                                                  # 004B90A3
.L4B90A4:
    movzx ebx, word ptr [esi + 0x3a]                     # 004B90A4
    shl ebx, 7                                           # 004B90A8
    add_offset ebx, _things                              # 004B90AB
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B90B1
    shl ebx, 7                                           # 004B90B5
    add_offset ebx, _things                              # 004B90B8
    movzx ebx, word ptr [ebx + 0x3a]                     # 004B90BE
    shl ebx, 7                                           # 004B90C2
    add_offset ebx, _things                              # 004B90C5
    cmp byte ptr [ebx + 1], 6                            # 004B90CB
    jne .L4B90E1                                         # 004B90CF
    msvc_jmp .L4B8FCD                                    # 004B90D1
.L4B90D6:
    mov word ptr [__9C68E6], 0x5ac                       # 004B90D6
    jmp .L4B90EA                                         # 004B90DF
.L4B90E1:
    mov word ptr [__9C68E6], 0x14f                       # 004B90E1
.L4B90EA:
    pop esi                                              # 004B90EA
    pop edi                                              # 004B90EB
    pop ebx                                              # 004B90EC
    pop eax                                              # 004B90ED
    stc                                                  # 004B90EE
    ret                                                  # 004B90EF

    .global _sub_4B90F0
_sub_4B90F0:
    push ecx                                             # 004B90F0
    push edi                                             # 004B90F1
    push esi                                             # 004B90F2
    mov edi, dword ptr [eax*4 + _vehicleObjects]         # 004B90F3
    mov esi, dword ptr [ebx*4 + _vehicleObjects]         # 004B90FA
    test word ptr [edi + 0xe0], 0x800                    # 004B9101
    je .L4B9117                                          # 004B910A
    test word ptr [esi + 0xe0], 0x800                    # 004B910C
    jne .L4B9157                                         # 004B9115
.L4B9117:
    msvc_cmp eax, ebx                                    # 004B9117
    je .L4B9151                                          # 004B9119
    cmp byte ptr [edi + 0xf], 0                          # 004B911B
    je .L4B9130                                          # 004B911F
    msvc_xor ecx, ecx                                    # 004B9121
.L4B9123:
    cmp bx, word ptr [edi + ecx*2 + 0x10]                # 004B9123
    je .L4B9151                                          # 004B9128
    inc ecx                                              # 004B912A
    cmp cl, byte ptr [edi + 0xf]                         # 004B912B
    jb .L4B9123                                          # 004B912E
.L4B9130:
    cmp byte ptr [esi + 0xf], 0                          # 004B9130
    je .L4B9145                                          # 004B9134
    msvc_xor ecx, ecx                                    # 004B9136
.L4B9138:
    cmp ax, word ptr [esi + ecx*2 + 0x10]                # 004B9138
    je .L4B9151                                          # 004B913D
    inc ecx                                              # 004B913F
    cmp cl, byte ptr [esi + 0xf]                         # 004B9140
    jb .L4B9138                                          # 004B9143
.L4B9145:
    cmp byte ptr [edi + 0xf], 0                          # 004B9145
    jne .L4B9157                                         # 004B9149
    cmp byte ptr [esi + 0xf], 0                          # 004B914B
    jne .L4B9157                                         # 004B914F
.L4B9151:
    pop esi                                              # 004B9151
    pop edi                                              # 004B9152
    pop ecx                                              # 004B9153
    msvc_and eax, eax                                    # 004B9154
    ret                                                  # 004B9156
.L4B9157:
    pop esi                                              # 004B9157
    pop edi                                              # 004B9158
    pop ecx                                              # 004B9159
    mov word ptr [__9C68E6], 0x14f                       # 004B915A
    stc                                                  # 004B9163
    ret                                                  # 004B9164

    .global _sub_4B9165
_sub_4B9165:
    DebugStamp 0x4011605
    pushal                                               # 004B9165
    cmp dh, 0xff                                         # 004B9166
    je .L4B9185                                          # 004B9169
    msvc_or dh, dh                                       # 004B916B
    jns .L4B9185                                         # 004B916D
    msvc_mov bl, dh                                      # 004B916F
    and ebx, 0x7f                                        # 004B9171
    mov ebx, dword ptr [ebx*4 + _roadObjects]            # 004B9174
    test word ptr [ebx + 0x12], 8                        # 004B917B
    je .L4B9185                                          # 004B9181
    mov dh, 0xfe                                         # 004B9183
.L4B9185:
    movzx edi, byte ptr [_scenarioChunk3+36]             # 004B9185
    cmp esi, -1                                          # 004B918C
    je .L4B9195                                          # 004B918F
    movzx edi, byte ptr [esi + 0x21]                     # 004B9191
.L4B9195:
    imul edi, edi, 0x8fa8                                # 004B9195
    mov word ptr [__1136268], 0                          # 004B919B
    msvc_xor eax, eax                                    # 004B91A4
.L4B91A6:
    cmp dword ptr [eax*4 + _vehicleObjects], -1          # 004B91A6
    je .L4B9297                                          # 004B91AE
    cmp esi, -1                                          # 004B91B4
    je .L4B91C4                                          # 004B91B7
    call _sub_4B8FA2                                     # 004B91B9
    jb .L4B9297                                          # 004B91BE
.L4B91C4:
    mov ebp, dword ptr [eax*4 + _vehicleObjects]         # 004B91C4
    cmp dl, byte ptr [ebp + 3]                           # 004B91CB
    jne .L4B9297                                         # 004B91CE
    msvc_mov ebx, eax                                    # 004B91D4
    msvc_mov ecx, eax                                    # 004B91D6
    and ebx, 0x1f                                        # 004B91D8
    shr ecx, 5                                           # 004B91DB
    bt dword ptr [edi + ecx*4 + _companies+52], ebx      # 004B91DE
    jae .L4B9297                                         # 004B91E6
    cmp dh, 0xff                                         # 004B91EC
    je .L4B922A                                          # 004B91EF
    msvc_or dh, dh                                       # 004B91F1
    js .L4B9209                                          # 004B91F3
    cmp byte ptr [ebp + 2], 0                            # 004B91F5
    jne .L4B9297                                         # 004B91F9
    cmp dh, byte ptr [ebp + 5]                           # 004B91FF
    je .L4B922A                                          # 004B9202
    msvc_jmp .L4B9297                                    # 004B9204
.L4B9209:
    cmp byte ptr [ebp + 2], 1                            # 004B9209
    jne .L4B9297                                         # 004B920D
    cmp dh, 0xfe                                         # 004B9213
    je .L4B9224                                          # 004B9216
    msvc_mov bl, dh                                      # 004B9218
    and bl, 0x7f                                         # 004B921A
    cmp bl, byte ptr [ebp + 5]                           # 004B921D
    je .L4B922A                                          # 004B9220
    jmp .L4B9297                                         # 004B9222
.L4B9224:
    cmp byte ptr [ebp + 5], 0xff                         # 004B9224
    jne .L4B9297                                         # 004B9228
.L4B922A:
    push eax                                             # 004B922A
    push edx                                             # 004B922B
    sub esp, 0x380                                       # 004B922C
    mov ecx, dword ptr [eax*4 + _vehicleObjects]         # 004B9232
    mov bx, word ptr [ecx + 0xd8]                        # 004B9239
    msvc_or bx, bx                                       # 004B9240
    je .L4B9249                                          # 004B9243
    mov bx, 1                                            # 004B9245
.L4B9249:
    msvc_mov dh, bl                                      # 004B9249
    mov bx, word ptr [ecx + 0x114]                       # 004B924B
    msvc_xor ecx, ecx                                    # 004B9252
.L4B9254:
    cmp cx, word ptr [__1136268]                         # 004B9254
    jae .L4B926E                                         # 004B925B
    cmp dh, byte ptr [esp + ecx*4]                       # 004B925D
    ja .L4B926E                                          # 004B9260
    jb .L4B926B                                          # 004B9262
    cmp bx, word ptr [esp + ecx*4 + 2]                   # 004B9264
    jb .L4B926E                                          # 004B9269
.L4B926B:
    inc ecx                                              # 004B926B
    jmp .L4B9254                                         # 004B926C
.L4B926E:
    inc word ptr [__1136268]                             # 004B926E
.L4B9275:
    xchg word ptr [ecx*2 + __113626A], ax                # 004B9275
    xchg byte ptr [esp + ecx*4], dh                      # 004B927D
    xchg word ptr [esp + ecx*4 + 2], bx                  # 004B9280
    inc ecx                                              # 004B9285
    cmp cx, word ptr [__1136268]                         # 004B9286
    jb .L4B9275                                          # 004B928D
    add esp, 0x380                                       # 004B928F
    pop edx                                              # 004B9295
    pop eax                                              # 004B9296
.L4B9297:
    inc eax                                              # 004B9297
    cmp eax, 0xe0                                        # 004B9298
    jb .L4B91A6                                          # 004B929D
    popal                                                # 004B92A3
    ret                                                  # 004B92A4

    .global _sub_4B92A5
_sub_4B92A5:
    mov edi, dword ptr [__113D754]                       # 004B92A5
.L4B92AB:
    sub edi, 0x88e                                       # 004B92AB
    cmp_offset edi, __11370AC                            # 004B92B1
    jb .L4B9305                                          # 004B92B7
    cmp byte ptr [edi + 0x882], 0x17                     # 004B92B9
    jne .L4B92AB                                         # 004B92C0
    cmp word ptr [edi + 0x870], 1                        # 004B92C2
    jne .L4B92AB                                         # 004B92CA
    movzx ebx, word ptr [edi + 0x40]                     # 004B92CC
    shl ebx, 7                                           # 004B92D0
    add_offset ebx, _things                              # 004B92D3
    mov al, byte ptr [ebx + 0x21]                        # 004B92D9
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B92DC
    jne .L4B92AB                                         # 004B92E2
    movzx eax, word ptr [edi + 0x40]                     # 004B92E4
    cmp eax, dword ptr [__11364E8]                       # 004B92E8
    je .L4B9326                                          # 004B92EE
    mov dword ptr [__11364E8], eax                       # 004B92F0
    mov word ptr [esi + 0x83c], 0                        # 004B92F5
    call _sub_4CA4BD                                     # 004B92FE
    jmp .L4B9326                                         # 004B9303
.L4B9305:
    cmp dword ptr [__11364E8], -1                        # 004B9305
    je .L4B9326                                          # 004B930C
    mov dword ptr [__11364E8], 0xffffffff                # 004B930E
    mov word ptr [esi + 0x83c], 0                        # 004B9318
    call _sub_4CA4BD                                     # 004B9321
.L4B9326:
    push esi                                             # 004B9326
    mov dx, word ptr [esi + 0x870]                       # 004B9327
    movzx esi, word ptr [esi + 0x874]                    # 004B932E
    mov dh, byte ptr [esi + __11364F0]                   # 004B9335
    mov esi, dword ptr [__11364E8]                       # 004B933B
    cmp esi, -1                                          # 004B9341
    je .L4B9352                                          # 004B9344
    movzx esi, si                                        # 004B9346
    shl esi, 7                                           # 004B9349
    add_offset esi, _things                              # 004B934C
.L4B9352:
    call _sub_4B9165                                     # 004B9352
    pop esi                                              # 004B9357
    mov cx, word ptr [__1136268]                         # 004B9358
    cmp cx, word ptr [esi + 0x83c]                       # 004B935F
    je .L4B93A4                                          # 004B9366
    mov_offset ebp, __113626A                            # 004B9368
    lea edi, [esi + 0x6a]                                # 004B936D
    mov word ptr [esi + 0x83c], cx                       # 004B9370
    mov word ptr [esi + 0x83a], 0                        # 004B9377
    msvc_or cx, cx                                       # 004B9380
    je .L4B9396                                          # 004B9383
.L4B9385:
    mov ax, word ptr [ebp]                               # 004B9385
    mov word ptr [edi], ax                               # 004B9389
    add ebp, 2                                           # 004B938C
    add edi, 2                                           # 004B938F
    dec cx                                               # 004B9392
    jne .L4B9385                                         # 004B9394
.L4B9396:
    mov word ptr [esi + 0x840], 0xffff                   # 004B9396
    call _sub_4CA4BD                                     # 004B939F
.L4B93A4:
    ret                                                  # 004B93A4

    .global _sub_4B93A5
_sub_4B93A5:
    push esi                                             # 004B93A5
    mov_offset esi, __11370AC                            # 004B93A6
.L4B93AB:
    cmp esi, dword ptr [__113D754]                       # 004B93AB
    jae .L4B93DA                                         # 004B93B1
    mov al, byte ptr [esi + 0x882]                       # 004B93B3
    cmp al, 0x17                                         # 004B93B9
    jne .L4B93D2                                         # 004B93BB
    cmp bx, word ptr [esi + 0x40]                        # 004B93BD
    jne .L4B93D2                                         # 004B93C1
    cmp word ptr [esi + 0x870], 4                        # 004B93C3
    jne .L4B93D2                                         # 004B93CB
    call _sub_4CA4BD                                     # 004B93CD
.L4B93D2:
    add esi, 0x88e                                       # 004B93D2
    jmp .L4B93AB                                         # 004B93D8
.L4B93DA:
    pop esi                                              # 004B93DA
    ret                                                  # 004B93DB

    .global _sub_4B93DC
_sub_4B93DC:
    pushal                                               # 004B93DC
    mov_offset edi, _scenarioChunk3+42                   # 004B93DD
    mov si, word ptr [edi]                               # 004B93E2
.L4B93E5:
    cmp si, -1                                           # 004B93E5
    je .L4B9448                                          # 004B93E9
    movzx esi, si                                        # 004B93EB
    shl esi, 7                                           # 004B93EE
    add_offset esi, _things                              # 004B93F1
    cmp bx, word ptr [esi + 0x54]                        # 004B93F7
    jne .L4B9403                                         # 004B93FB
    mov word ptr [esi + 0x54], 0xffff                    # 004B93FD
.L4B9403:
    movzx ebp, word ptr [esi + 0x3a]                     # 004B9403
    shl ebp, 7                                           # 004B9407
    add_offset ebp, _things                              # 004B940A
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B9410
    shl ebp, 7                                           # 004B9414
    add_offset ebp, _things                              # 004B9417
.L4B941D:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B941D
    shl ebp, 7                                           # 004B9421
    add_offset ebp, _things                              # 004B9424
    cmp byte ptr [ebp + 1], 6                            # 004B942A
    je .L4B9442                                          # 004B942E
    cmp byte ptr [ebp + 0x51], 0                         # 004B9430
    je .L4B941D                                          # 004B9434
    cmp bx, word ptr [ebp + 0x4e]                        # 004B9436
    jne .L4B941D                                         # 004B943A
    mov byte ptr [ebp + 0x51], 0                         # 004B943C
    jmp .L4B941D                                         # 004B9440
.L4B9442:
    mov si, word ptr [esi + 4]                           # 004B9442
    jmp .L4B93E5                                         # 004B9446
.L4B9448:
    popal                                                # 004B9448
    ret                                                  # 004B9449

    .global _sub_4B944A
_sub_4B944A:
    bt dword ptr [__523368], 3                           # 004B944A
    jae .L4B9499                                         # 004B9452
    cmp byte ptr [__523392], 0x17                        # 004B9454
    jne .L4B9499                                         # 004B945B
    mov cl, 0x17                                         # 004B945D
    mov dx, word ptr [__523390]                          # 004B945F
    call _sub_4C9B56                                     # 004B9466
    je .L4B9499                                          # 004B946B
    cmp word ptr [esi + 0x870], 0                        # 004B946D
    je .L4B948D                                          # 004B9475
    cmp word ptr [esi + 0x870], 4                        # 004B9477
    jne .L4B9499                                         # 004B947F
    mov edx, 4                                           # 004B9481
    mov ebp, dword ptr [esi]                             # 004B9486
    call dword ptr [ebp + 4]                             # 004B9488
    stc                                                  # 004B948B
    ret                                                  # 004B948C
.L4B948D:
    mov edx, 5                                           # 004B948D
    mov ebp, dword ptr [esi]                             # 004B9492
    call dword ptr [ebp + 4]                             # 004B9494
    stc                                                  # 004B9497
    ret                                                  # 004B9498
.L4B9499:
    msvc_and eax, eax                                    # 004B9499
    ret                                                  # 004B949B

    .global _sub_4B949C
_sub_4B949C:
    bt dword ptr [__523368], 3                           # 004B949C
    jae .L4B94CC                                         # 004B94A4
    cmp byte ptr [__523392], 0x17                        # 004B94A6
    jne .L4B94CC                                         # 004B94AD
    cmp word ptr [__523394], 0xd                         # 004B94AF
    je .L4B94C3                                          # 004B94B7
    cmp word ptr [__523394], 0xa                         # 004B94B9
    jne .L4B94CC                                         # 004B94C1
.L4B94C3:
    xor byte ptr [_scenarioChunk3+408], 1                # 004B94C3
    stc                                                  # 004B94CA
    ret                                                  # 004B94CB
.L4B94CC:
    msvc_and eax, eax                                    # 004B94CC
    ret                                                  # 004B94CE

    .global _sub_4B94CF
_sub_4B94CF:
    DebugStamp 0x4041202
    test dword ptr [_scenarioChunk3+16], 1               # 004B94CF
    je .L4B9508                                          # 004B94D9
    mov si, word ptr [_scenarioChunk3+42]                # 004B94DB
.L4B94E2:
    cmp si, -1                                           # 004B94E2
    je .L4B9501                                          # 004B94E6
    movzx esi, si                                        # 004B94E8
    shl esi, 7                                           # 004B94EB
    add_offset esi, _things                              # 004B94EE
    mov ax, word ptr [esi + 4]                           # 004B94F4
    push eax                                             # 004B94F8
    call _sub_4B9509                                     # 004B94F9
    pop esi                                              # 004B94FE
    jmp .L4B94E2                                         # 004B94FF
.L4B9501:
    mov al, 0x5b                                         # 004B9501
    call _sub_4CB966                                     # 004B9503
.L4B9508:
    ret                                                  # 004B9508

    .global _sub_4B9509
_sub_4B9509:
.L4B9552:
.L4B9556:
    cmp byte ptr [esi + 0x5d], 8                         # 004B9556
    je .L4B9566                                          # 004B955A
    cmp byte ptr [esi + 0x5d], 9                         # 004B955C
    jne .L4B962B                                         # 004B9560
.L4B9566:
    inc byte ptr [esi + 0x6d]                            # 004B9566
    jne .L4B956E                                         # 004B9569
    dec byte ptr [esi + 0x6d]                            # 004B956B
.L4B956E:
    mov al, byte ptr [esi + 0x21]                        # 004B956E
    cmp al, byte ptr [_scenarioChunk3+36]                # 004B9571
    je .L4B962B                                          # 004B9577
    cmp al, byte ptr [_scenarioChunk3+37]                # 004B957D
    je .L4B962B                                          # 004B9583
    cmp byte ptr [esi + 0x6d], 0xe                       # 004B9589
    jb .L4B962B                                          # 004B958D
    movzx ebp, al                                        # 004B9593
    imul ebp, ebp, 0x8fa8                                # 004B9596
    movsx edi, byte ptr [esi + 0x60]                     # 004B959C
    cmp edi, -1                                          # 004B95A0
    je .L4B962B                                          # 004B95A3
    imul edi, edi, 0x8c                                  # 004B95A9
    lea edi, [edi + ebp + _companies+1192]               # 004B95AF
    mov bx, word ptr [esi + 0xa]                         # 004B95B6
    push ebx                                             # 004B95BA
    push edi                                             # 004B95BB
    push esi                                             # 004B95BC
    call _sub_4AD778                                     # 004B95BD
    mov byte ptr [esi + 0x5d], 1                         # 004B95C2
    movzx edi, word ptr [esi + 0x3a]                     # 004B95C6
    shl edi, 7                                           # 004B95CA
    add_offset edi, _things                              # 004B95CD
    movzx edi, word ptr [edi + 0x3a]                     # 004B95D3
    shl edi, 7                                           # 004B95D7
    add_offset edi, _things                              # 004B95DA
    mov dword ptr [edi + 0x56], 0                        # 004B95E0
    mov dx, word ptr [esi + 0xa]                         # 004B95E7
    mov bl, byte ptr [esi + 0x21]                        # 004B95EB
    xchg byte ptr [__9C68EB], bl                         # 004B95EE
    push ebx                                             # 004B95F4
    mov bl, 1                                            # 004B95F5
    mov esi, 6                                           # 004B95F7
    call _sub_431315                                     # 004B95FC
    pop ebx                                              # 004B9601
    mov byte ptr [__9C68EB], bl                          # 004B9602
    pop esi                                              # 004B9608
    pop edi                                              # 004B9609
    pop ebx                                              # 004B960A
    msvc_xor ecx, ecx                                    # 004B960B
.L4B960D:
    cmp bx, word ptr [edi + ecx*2 + 0x66]                # 004B960D
    je .L4B9617                                          # 004B9612
    inc ecx                                              # 004B9614
    jmp .L4B960D                                         # 004B9615
.L4B9617:
    mov dx, word ptr [edi + ecx*2 + 0x68]                # 004B9617
    mov word ptr [edi + ecx*2 + 0x66], dx                # 004B961C
    inc ecx                                              # 004B9621
    cmp ecx, 8                                           # 004B9622
    jb .L4B9617                                          # 004B9625
    dec byte ptr [edi + 0x44]                            # 004B9627
    ret                                                  # 004B962A
.L4B962B:
    push esi                                             # 004B962B
.L4B962C:
    mov si, word ptr [esi + 0x3a]                        # 004B962C
    cmp si, -1                                           # 004B9630
    je .L4B9662                                          # 004B9634
    movzx esi, si                                        # 004B9636
    shl esi, 7                                           # 004B9639
    add_offset esi, _things                              # 004B963C
    mov al, byte ptr [esi + 1]                           # 004B9642
    cmp al, 3                                            # 004B9645
    je .L4B9651                                          # 004B9647
    cmp al, 4                                            # 004B9649
    je .L4B9651                                          # 004B964B
    cmp al, 5                                            # 004B964D
    jne .L4B962C                                         # 004B964F
.L4B9651:
    cmp byte ptr [esi + 0x51], 0                         # 004B9651
    je .L4B962C                                          # 004B9655
    cmp byte ptr [esi + 0x50], 0xff                      # 004B9657
    je .L4B962C                                          # 004B965B
    inc byte ptr [esi + 0x50]                            # 004B965D
    jmp .L4B962C                                         # 004B9660
.L4B9662:
    pop esi                                              # 004B9662
    movzx ebp, word ptr [esi + 0x3a]                     # 004B9663
    shl ebp, 7                                           # 004B9667
    add_offset ebp, _things                              # 004B966A
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B9670
    shl ebp, 7                                           # 004B9674
    add_offset ebp, _things                              # 004B9677
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B967D
    shl ebp, 7                                           # 004B9681
    add_offset ebp, _things                              # 004B9684
    cmp byte ptr [ebp + 1], 6                            # 004B968A
    je .L4B977A                                          # 004B968E
.L4B9694:
    mov dx, word ptr [ebp + 0x66]                        # 004B9694
    msvc_or dx, dx                                       # 004B9698
    je .L4B971A                                          # 004B969B
    test byte ptr [ebp + 0x5f], 4                        # 004B969D
    je .L4B96B5                                          # 004B96A1
    dec byte ptr [ebp + 0x6a]                            # 004B96A3
    jne .L4B96B5                                         # 004B96A6
    and byte ptr [ebp + 0x5f], 0xfb                      # 004B96A8
    push ebp                                             # 004B96AC
    call _sub_4BAA76                                     # 004B96AD
    pop ebp                                              # 004B96B2
    jmp .L4B96E2                                         # 004B96B3
.L4B96B5:
    cmp word ptr [ebp + 0x68], -1                        # 004B96B5
    je .L4B96E2                                          # 004B96BA
    test byte ptr [ebp + 0x5f], 4                        # 004B96BC
    jne .L4B96E2                                         # 004B96C0
    cmp word ptr [ebp + 0x68], 0                         # 004B96C2
    je .L4B96CF                                          # 004B96C7
    dec word ptr [ebp + 0x68]                            # 004B96C9
    jne .L4B96E2                                         # 004B96CD
.L4B96CF:
    push esi                                             # 004B96CF
    msvc_mov esi, ebp                                    # 004B96D0
    call _sub_4BA873                                     # 004B96D2
    pop esi                                              # 004B96D7
    test byte ptr [ebp + 0x5f], 4                        # 004B96D8
    jne .L4B96E2                                         # 004B96DC
    or byte ptr [ebp + 0x5f], 2                          # 004B96DE
.L4B96E2:
    mov dx, word ptr [ebp + 0x66]                        # 004B96E2
    movzx ecx, word ptr [ebp + 0x40]                     # 004B96E6
    mov ecx, dword ptr [ecx*4 + _vehicleObjects]         # 004B96EA
    mov cx, word ptr [ecx + 0x116]                       # 004B96F1
    cmp cx, word ptr [_scenarioChunk3+26]                # 004B96F8
    jbe .L4B9707                                         # 004B96FF
    sub dx, 4                                            # 004B9701
    jmp .L4B970B                                         # 004B9705
.L4B9707:
    sub dx, 0xa                                          # 004B9707
.L4B970B:
    cmp dx, 0x100                                        # 004B970B
    jae .L4B9716                                         # 004B9710
    mov dx, 0x100                                        # 004B9712
.L4B9716:
    mov word ptr [ebp + 0x66], dx                        # 004B9716
.L4B971A:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B971A
    shl ebp, 7                                           # 004B971E
    add_offset ebp, _things                              # 004B9721
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B9727
    shl ebp, 7                                           # 004B972B
    add_offset ebp, _things                              # 004B972E
    movzx ebp, word ptr [ebp + 0x3a]                     # 004B9734
    shl ebp, 7                                           # 004B9738
    add_offset ebp, _things                              # 004B973B
.L4B9741:
    cmp byte ptr [ebp + 1], 6                            # 004B9741
    je .L4B977A                                          # 004B9745
    movzx edx, word ptr [ebp + 0x3a]                     # 004B9747
    shl edx, 7                                           # 004B974B
    add_offset edx, _things                              # 004B974E
    movzx edx, word ptr [edx + 0x3a]                     # 004B9754
    shl edx, 7                                           # 004B9758
    add_offset edx, _things                              # 004B975B
    cmp byte ptr [edx + 1], 4                            # 004B9761
    je .L4B9694                                          # 004B9765
    movzx ebp, word ptr [edx + 0x3a]                     # 004B976B
    shl ebp, 7                                           # 004B976F
    add_offset ebp, _things                              # 004B9772
    jmp .L4B9741                                         # 004B9778
.L4B977A:
    call _sub_4B8340                                     # 004B977A
    ret                                                  # 004B977F

    .global _sub_4B9780
_sub_4B9780:
    push ebp                                             # 004B9780
    mov ebp, dword ptr [ebx*4 + _vehicleObjects]         # 004B9781
    msvc_xor eax, eax                                    # 004B9788
    msvc_xor edx, edx                                    # 004B978A
    msvc_xor ebx, ebx                                    # 004B978C
.L4B978E:
    cmp dl, byte ptr [ebp + 4]                           # 004B978E
    jae .L4B97B5                                         # 004B9791
    movzx ecx, byte ptr [ebx + ebp + 0x28]               # 004B9793
    cmp cl, 0xff                                         # 004B9798
    je .L4B97AF                                          # 004B979B
    and ecx, 0xffffff7f                                  # 004B979D
    imul ecx, ecx, 0x1e                                  # 004B97A3
    movzx ecx, byte ptr [ecx + ebp + 0x42]               # 004B97A6
    shl ecx, 1                                           # 004B97AB
    msvc_add eax, ecx                                    # 004B97AD
.L4B97AF:
    inc edx                                              # 004B97AF
    add ebx, 6                                           # 004B97B0
    jmp .L4B978E                                         # 004B97B3
.L4B97B5:
    pop ebp                                              # 004B97B5
    ret                                                  # 004B97B6

    .global _sub_4B97B7
_sub_4B97B7:
    push esi                                             # 004B97B7
    msvc_xor edx, edx                                    # 004B97B8
    movzx esi, word ptr [esi + 0x3a]                     # 004B97BA
    shl esi, 7                                           # 004B97BE
    add_offset esi, _things                              # 004B97C1
    movzx esi, word ptr [esi + 0x3a]                     # 004B97C7
    shl esi, 7                                           # 004B97CB
    add_offset esi, _things                              # 004B97CE
    movzx esi, word ptr [esi + 0x3a]                     # 004B97D4
    shl esi, 7                                           # 004B97D8
    add_offset esi, _things                              # 004B97DB
.L4B97E1:
    mov al, byte ptr [esi + 1]                           # 004B97E1
    cmp al, 6                                            # 004B97E4
    je .L4B9808                                          # 004B97E6
    cmp al, 4                                            # 004B97E8
    jne .L4B97F9                                         # 004B97EA
    movzx ebx, word ptr [esi + 0x40]                     # 004B97EC
    push edx                                             # 004B97F0
    call _sub_4B9780                                     # 004B97F1
    pop edx                                              # 004B97F6
    msvc_add edx, eax                                    # 004B97F7
.L4B97F9:
    movzx esi, word ptr [esi + 0x3a]                     # 004B97F9
    shl esi, 7                                           # 004B97FD
    add_offset esi, _things                              # 004B9800
    jmp .L4B97E1                                         # 004B9806
.L4B9808:
    pop esi                                              # 004B9808
    ret                                                  # 004B9809

    .global _sub_4B980A
_sub_4B980A:
    cmp byte ptr [esi + 0x5d], 2                         # 004B980A
    jne .L4B98D9                                         # 004B980E
    mov al, byte ptr [__113646C]                         # 004B9814
    cmp al, 1                                            # 004B9819
    je .L4B9825                                          # 004B981B
    cmp al, 3                                            # 004B981D
    jne .L4B98D9                                         # 004B981F
.L4B9825:
    mov edi, dword ptr [__1136120]                       # 004B9825
    movzx edi, word ptr [edi + 0x3a]                     # 004B982B
    shl edi, 7                                           # 004B982F
    add_offset edi, _things                              # 004B9832
    movzx ebp, word ptr [edi + 0x40]                     # 004B9838
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B983C
    cmp byte ptr [ebp + 0x15a], 0                        # 004B9843
    je .L4B98D9                                          # 004B984A
    mov eax, dword ptr [_scenarioChunk3]                 # 004B9850
    mov ebx, dword ptr [_scenarioChunk3+4]               # 004B9855
    ror eax, 3                                           # 004B985B
    xor ebx, 0x1234567f                                  # 004B985E
    mov dword ptr [_scenarioChunk3+4], eax               # 004B9864
    ror ebx, 7                                           # 004B9869
    add dword ptr [_scenarioChunk3], ebx                 # 004B986C
    mov ah, byte ptr [ebp + 0x15a]                       # 004B9872
    and ah, 0x7f                                         # 004B9878
    test byte ptr [ebp + 0x15a], 0x80                    # 004B987B
    je .L4B988A                                          # 004B9882
    dec ah                                               # 004B9884
    jne .L4B988A                                         # 004B9886
    inc ah                                               # 004B9888
.L4B988A:
    mul ah                                               # 004B988A
    movzx ebx, ah                                        # 004B988C
    movzx eax, byte ptr [ebx + ebp + 0x15b]              # 004B988F
    or eax, 0x8000                                       # 004B9897
    mov edi, dword ptr [__1136120]                       # 004B989C
    mov cx, word ptr [edi + 0xe]                         # 004B98A2
    mov dx, word ptr [edi + 0x10]                        # 004B98A6
    mov bp, word ptr [edi + 0x12]                        # 004B98AA
    msvc_xor edi, edi                                    # 004B98AE
    push eax                                             # 004B98B0
    push ecx                                             # 004B98B1
    push edx                                             # 004B98B2
    msvc_mov ax, cx                                      # 004B98B3
    msvc_mov cx, dx                                      # 004B98B6
    call _sub_467297                                     # 004B98B9
    msvc_cmp bp, dx                                      # 004B98BE
    pop edx                                              # 004B98C1
    pop ecx                                              # 004B98C2
    pop eax                                              # 004B98C3
    jae .L4B98CB                                         # 004B98C4
    mov edi, 0xfffffa24                                  # 004B98C6
.L4B98CB:
    add bp, 0x16                                         # 004B98CB
    mov ebx, 0x5622                                      # 004B98CF
    call _sub_489F1B                                     # 004B98D4
.L4B98D9:
    ret                                                  # 004B98D9

    .global _sub_4B98DA
_sub_4B98DA:
    pushal                                               # 004B98DA
    movzx esi, word ptr [edi + 0x3a]                     # 004B98DB
    shl esi, 7                                           # 004B98DF
    add_offset esi, _things                              # 004B98E2
    movzx ebp, word ptr [esi + 0x40]                     # 004B98E8
    mov ebp, dword ptr [ebp*4 + _vehicleObjects]         # 004B98EC
    cmp byte ptr [ebp + 0x15a], 0                        # 004B98F3
    je .L4B996D                                          # 004B98FA
    mov eax, dword ptr [_scenarioChunk3]                 # 004B98FC
    mov ebx, dword ptr [_scenarioChunk3+4]               # 004B9901
    ror eax, 3                                           # 004B9907
    xor ebx, 0x1234567f                                  # 004B990A
    mov dword ptr [_scenarioChunk3+4], eax               # 004B9910
    ror ebx, 7                                           # 004B9915
    add dword ptr [_scenarioChunk3], ebx                 # 004B9918
    movzx ebx, byte ptr [ebp + 0x15a]                    # 004B991E
    and bl, 0x7f                                         # 004B9925
    dec ebx                                              # 004B9928
    movzx eax, byte ptr [ebx + ebp + 0x15b]              # 004B9929
    or eax, 0x8000                                       # 004B9931
    mov cx, word ptr [edi + 0xe]                         # 004B9936
    mov dx, word ptr [edi + 0x10]                        # 004B993A
    mov bp, word ptr [edi + 0x12]                        # 004B993E
    msvc_xor edi, edi                                    # 004B9942
    push eax                                             # 004B9944
    push ecx                                             # 004B9945
    push edx                                             # 004B9946
    msvc_mov ax, cx                                      # 004B9947
    msvc_mov cx, dx                                      # 004B994A
    call _sub_467297                                     # 004B994D
    msvc_cmp bp, dx                                      # 004B9952
    pop edx                                              # 004B9955
    pop ecx                                              # 004B9956
    pop eax                                              # 004B9957
    jae .L4B995F                                         # 004B9958
    mov edi, 0xfffffa24                                  # 004B995A
.L4B995F:
    add bp, 0x16                                         # 004B995F
    mov ebx, 0x5622                                      # 004B9963
    call _sub_489F1B                                     # 004B9968
.L4B996D:
    popal                                                # 004B996D
    ret                                                  # 004B996E

    .global _sub_4B996F
_sub_4B996F:
    movzx ebp, word ptr [esi + 0x54]                     # 004B996F
    imul ebp, ebp, 0x3d2                                 # 004B9973
    movzx ax, byte ptr [esi + 0x5e]                      # 004B9979
    bts word ptr [ebp + _stations+946], ax               # 004B997E
    ret                                                  # 004B9986

    .global _sub_4B9987
_sub_4B9987:
    mov ebp, dword ptr [esi + 0x46]                      # 004B9987
    movzx ecx, word ptr [esi + 0x4a]                     # 004B998A
    mov al, byte ptr [ecx + ebp + __987C5C]              # 004B998E
    and al, 7                                            # 004B9995
    cmp al, 1                                            # 004B9997
    je .L4B999F                                          # 004B9999
    cmp al, 2                                            # 004B999B
    jne .L4B99E0                                         # 004B999D
.L4B999F:
    mov al, byte ptr [ecx + ebp + __987C5C+1]            # 004B999F
    mov ah, byte ptr [ecx + ebp + __987C5C]              # 004B99A6
    shr ah, 6                                            # 004B99AD
    cmp ax, word ptr [esi + 0x54]                        # 004B99B0
    jne .L4B99E0                                         # 004B99B4
    mov al, byte ptr [ecx + ebp + __987C5C]              # 004B99B6
    and eax, 7                                           # 004B99BD
    add ecx, dword ptr [eax*4 + __4FE070]                # 004B99C0
    cmp byte ptr [ecx + ebp + __987C5C], 0               # 004B99C7
    jne .L4B99D3                                         # 004B99CF
    msvc_xor ecx, ecx                                    # 004B99D1
.L4B99D3:
    mov word ptr [esi + 0x4a], cx                        # 004B99D3
    mov bx, word ptr [esi + 0xa]                         # 004B99D7
    call _sub_4B93A5                                     # 004B99DB
.L4B99E0:
    ret                                                  # 004B99E0

    .global _sub_4B99E1
_sub_4B99E1:
    and byte ptr [esi + 0x5f], 0xfe                      # 004B99E1
    mov byte ptr [esi + 0x5d], 5                         # 004B99E5
    mov word ptr [esi + 0x56], 0xa                       # 004B99E9
    mov dword ptr [esi + 0x58], 0                        # 004B99EF
    movzx edi, word ptr [esi + 0x3a]                     # 004B99F6
    shl edi, 7                                           # 004B99FA
    add_offset edi, _things                              # 004B99FD
    movzx edi, word ptr [edi + 0x3a]                     # 004B9A03
    shl edi, 7                                           # 004B9A07
    add_offset edi, _things                              # 004B9A0A
.L4B9A10:
    movzx edi, word ptr [edi + 0x3a]                     # 004B9A10
    shl edi, 7                                           # 004B9A14
    add_offset edi, _things                              # 004B9A17
    cmp byte ptr [edi + 1], 6                            # 004B9A1D
    je .L4B9A29                                          # 004B9A21
    or byte ptr [edi + 0x5f], 1                          # 004B9A23
    jmp .L4B9A10                                         # 004B9A27
.L4B9A29:
    ret                                                  # 004B9A29

    .global _sub_4B9A2A
_sub_4B9A2A:
    cmp word ptr [esi + 0x56], 0                         # 004B9A2A
    je .L4B9A3A                                          # 004B9A2F
    dec word ptr [esi + 0x56]                            # 004B9A31
    msvc_jmp .L4BA141                                    # 004B9A35
.L4B9A3A:
    movzx edi, word ptr [esi + 0x3a]                     # 004B9A3A
    shl edi, 7                                           # 004B9A3E
    add_offset edi, _things                              # 004B9A41
    movzx edi, word ptr [edi + 0x3a]                     # 004B9A47
    shl edi, 7                                           # 004B9A4B
    add_offset edi, _things                              # 004B9A4E
.L4B9A54:
    mov dword ptr [__11360EC], edi                       # 004B9A54
    movzx edi, word ptr [edi + 0x3a]                     # 004B9A5A
    shl edi, 7                                           # 004B9A5E
    add_offset edi, _things                              # 004B9A61
    cmp byte ptr [edi + 1], 6                            # 004B9A67
    je .L4BA020                                          # 004B9A6B
    test byte ptr [edi + 0x5f], 1                        # 004B9A71
    je .L4B9A54                                          # 004B9A75
    and byte ptr [edi + 0x5f], 0xfe                      # 004B9A77
    movzx ebx, byte ptr [edi + 0x4c]                     # 004B9A7B
    cmp bl, 0xff                                         # 004B9A7F
    je .L4BA141                                          # 004B9A82
    cmp byte ptr [edi + 0x51], 0                         # 004B9A88
    je .L4BA141                                          # 004B9A8C
    movzx ebp, word ptr [esi + 0x54]                     # 004B9A92
    cmp bp, -1                                           # 004B9A96
    je .L4BA141                                          # 004B9A9A
    imul ebp, ebp, 0x3d2                                 # 004B9AA0
    imul ebx, ebx, 0xd                                   # 004B9AA6
    test byte ptr [ebx + ebp + _stations+50], 1          # 004B9AA9
    jne .L4B9BF3                                         # 004B9AB1
    movzx ebp, word ptr [esi + 0x4a]                     # 004B9AB7
    add ebp, dword ptr [esi + 0x46]                      # 004B9ABB
    mov bl, byte ptr [edi + 0x4c]                        # 004B9ABE
    shl bl, 3                                            # 004B9AC1
    or bl, 4                                             # 004B9AC4
.L4B9AC7:
    mov al, byte ptr [ebp + __987C5C]                    # 004B9AC7
    and eax, 7                                           # 004B9ACD
    test byte ptr [eax + __4FE088], 4                    # 004B9AD0
    je .L4BA141                                          # 004B9AD7
    cmp bl, byte ptr [ebp + __987C5C]                    # 004B9ADD
    je .L4B9AEE                                          # 004B9AE3
    add ebp, dword ptr [eax*4 + __4FE070]                # 004B9AE5
    jmp .L4B9AC7                                         # 004B9AEC
.L4B9AEE:
    movzx ebp, word ptr [esi + 0x54]                     # 004B9AEE
    imul ebp, ebp, 0x3d2                                 # 004B9AF2
    movzx ebx, byte ptr [edi + 0x4c]                     # 004B9AF8
    imul ebx, ebx, 0xd                                   # 004B9AFC
    movzx ax, byte ptr [edi + 0x51]                      # 004B9AFF
    add word ptr [ebx + ebp + _stations+46], ax          # 004B9B04
    jae .L4B9B18                                         # 004B9B0C
    mov word ptr [ebx + ebp + _stations+46], 0xffff      # 004B9B0E
.L4B9B18:
    push ebp                                             # 004B9B18
    add_offset ebp, _stations                            # 004B9B19
    call _sub_4929DB                                     # 004B9B1F
    pop ebp                                              # 004B9B24
    mov al, byte ptr [edi + 0x50]                        # 004B9B25
    cmp al, byte ptr [ebx + ebp + _stations+53]          # 004B9B28
    jbe .L4B9B38                                         # 004B9B2F
    mov byte ptr [ebx + ebp + _stations+53], al          # 004B9B31
.L4B9B38:
    cmp word ptr [ebx + ebp + _stations+48], -1          # 004B9B38
    je .L4B9BDB                                          # 004B9B41
    movzx ebx, word ptr [ebx + ebp + _stations+48]       # 004B9B47
    imul ebx, ebx, 0x3d2                                 # 004B9B4F
    mov ax, word ptr [ebx + _stations+2]                 # 004B9B55
    mov cx, word ptr [ebx + _stations+4]                 # 004B9B5C
    sub ax, word ptr [ebp + _stations+2]                 # 004B9B63
    jns .L4B9B6F                                         # 004B9B6A
    neg ax                                               # 004B9B6C
.L4B9B6F:
    sub cx, word ptr [ebp + _stations+4]                 # 004B9B6F
    jns .L4B9B7B                                         # 004B9B76
    neg cx                                               # 004B9B78
.L4B9B7B:
    movzx eax, ax                                        # 004B9B7B
    movzx ecx, cx                                        # 004B9B7E
    imul eax, eax                                        # 004B9B81
    imul ecx, ecx                                        # 004B9B84
    msvc_add eax, ecx                                    # 004B9B87
    call _sub_4BE368                                     # 004B9B89
    msvc_mov edx, eax                                    # 004B9B8E
    movzx ebx, word ptr [edi + 0x4e]                     # 004B9B90
    imul ebx, ebx, 0x3d2                                 # 004B9B94
    mov ax, word ptr [ebx + _stations+2]                 # 004B9B9A
    mov cx, word ptr [ebx + _stations+4]                 # 004B9BA1
    sub ax, word ptr [ebp + _stations+2]                 # 004B9BA8
    jns .L4B9BB4                                         # 004B9BAF
    neg ax                                               # 004B9BB1
.L4B9BB4:
    sub cx, word ptr [ebp + _stations+4]                 # 004B9BB4
    jns .L4B9BC0                                         # 004B9BBB
    neg cx                                               # 004B9BBD
.L4B9BC0:
    movzx eax, ax                                        # 004B9BC0
    movzx ecx, cx                                        # 004B9BC3
    imul eax, eax                                        # 004B9BC6
    imul ecx, ecx                                        # 004B9BC9
    msvc_add eax, ecx                                    # 004B9BCC
    call _sub_4BE368                                     # 004B9BCE
    msvc_cmp eax, edx                                    # 004B9BD3
    ja .L4B9E61                                          # 004B9BD5
.L4B9BDB:
    mov ax, word ptr [edi + 0x4e]                        # 004B9BDB
    movzx ebx, byte ptr [edi + 0x4c]                     # 004B9BDF
    imul ebx, ebx, 0xd                                   # 004B9BE3
    mov word ptr [ebx + ebp + _stations+48], ax          # 004B9BE6
    msvc_jmp .L4B9E61                                    # 004B9BEE
.L4B9BF3:
    movzx ebp, word ptr [esi + 0x54]                     # 004B9BF3
    movzx eax, byte ptr [edi + 0x4c]                     # 004B9BF7
    movzx ebx, byte ptr [edi + 0x51]                     # 004B9BFB
    call _sub_49B4E0                                     # 004B9BFF
    imul ebp, ebp, 0x3d2                                 # 004B9C04
    movzx ebx, word ptr [edi + 0x4e]                     # 004B9C0A
    imul ebx, ebx, 0x3d2                                 # 004B9C0E
    mov ax, word ptr [ebx + _stations+2]                 # 004B9C14
    mov cx, word ptr [ebx + _stations+4]                 # 004B9C1B
    sub ax, word ptr [ebp + _stations+2]                 # 004B9C22
    jae .L4B9C2E                                         # 004B9C29
    neg ax                                               # 004B9C2B
.L4B9C2E:
    sub cx, word ptr [ebp + _stations+4]                 # 004B9C2E
    jae .L4B9C3A                                         # 004B9C35
    neg cx                                               # 004B9C37
.L4B9C3A:
    movzx eax, ax                                        # 004B9C3A
    movzx ecx, cx                                        # 004B9C3D
    imul eax, eax                                        # 004B9C40
    imul ecx, ecx                                        # 004B9C43
    msvc_add eax, ecx                                    # 004B9C46
    call _sub_4BE368                                     # 004B9C48
    shr eax, 5                                           # 004B9C4D
    msvc_mov ecx, eax                                    # 004B9C50
    movzx eax, byte ptr [edi + 0x4c]                     # 004B9C52
    movzx ebx, byte ptr [edi + 0x51]                     # 004B9C56
    movzx edx, byte ptr [edi + 0x21]                     # 004B9C5A
    push eax                                             # 004B9C5E
    push ebx                                             # 004B9C5F
    mov al, 0x1a                                         # 004B9C60
    msvc_mov bx, dx                                      # 004B9C62
    call _sub_4CB966                                     # 004B9C65
    pop ebx                                              # 004B9C6A
    pop eax                                              # 004B9C6B
    imul edx, edx, 0x8fa8                                # 004B9C6C
    add dword ptr [edx + _companies+34296], ebx          # 004B9C72
    push eax                                             # 004B9C78
    push edx                                             # 004B9C79
    msvc_mov eax, ebx                                    # 004B9C7A
    mul ecx                                              # 004B9C7C
    msvc_or edx, edx                                     # 004B9C7E
    je .L4B9C87                                          # 004B9C80
    mov eax, 0xffffffff                                  # 004B9C82
.L4B9C87:
    pop edx                                              # 004B9C87
    add dword ptr [edx + _companies+35920], eax          # 004B9C88
    jae .L4B9C9A                                         # 004B9C8E
    mov dword ptr [edx + _companies+35920], 0xffffffff   # 004B9C90
.L4B9C9A:
    pop eax                                              # 004B9C9A
    movzx edx, byte ptr [edi + 0x50]                     # 004B9C9B
    push ebp                                             # 004B9C9F
    push eax                                             # 004B9CA0
    call _sub_42F23C                                     # 004B9CA1
    msvc_mov ebp, eax                                    # 004B9CA6
    pop eax                                              # 004B9CA8
    push esi                                             # 004B9CA9
    movzx esi, byte ptr [esi + 0x21]                     # 004B9CAA
    imul esi, esi, 0x8fa8                                # 004B9CAE
    add dword ptr [esi + eax*4 + _companies+35790], ebx  # 004B9CB4
    jae .L4B9CC8                                         # 004B9CBB
    mov dword ptr [esi + eax*4 + _companies+35790], 0xffffffff # 004B9CBD
.L4B9CC8:
    pop esi                                              # 004B9CC8
    call _sub_4BA7C7                                     # 004B9CC9
    add dword ptr [esi + 0x58], ebp                      # 004B9CCE
    pop ebp                                              # 004B9CD1
    mov byte ptr [ebp + _stations+945], 0                # 004B9CD2
    or word ptr [ebp + _stations+42], 0x100              # 004B9CD9
    movzx ebx, byte ptr [edi + 0x4c]                     # 004B9CE2
    imul ebx, ebx, 0xd                                   # 004B9CE6
    movzx ecx, byte ptr [ebx + ebp + _stations+57]       # 004B9CE9
    cmp cl, 0xff                                         # 004B9CF1
    je .L4B9DF5                                          # 004B9CF4
    push ebx                                             # 004B9CFA
    imul ecx, ecx, 0x453                                 # 004B9CFB
    movzx edx, byte ptr [ecx + _industries+16]           # 004B9D01
    mov bl, byte ptr [edi + 0x4c]                        # 004B9D08
    mov edx, dword ptr [edx*4 + _industryObjects]        # 004B9D0B
    movzx ax, byte ptr [edi + 0x51]                      # 004B9D12
    cmp bl, byte ptr [edx + 0xe0]                        # 004B9D17
    jne .L4B9D43                                         # 004B9D1D
    add word ptr [ecx + _industries+409], ax             # 004B9D1F
    jae .L4B9D31                                         # 004B9D26
    mov word ptr [ecx + _industries+409], 0xffff         # 004B9D28
.L4B9D31:
    add word ptr [ecx + _industries+397], ax             # 004B9D31
    jae .L4B9D43                                         # 004B9D38
    mov word ptr [ecx + _industries+397], 0xffff         # 004B9D3A
.L4B9D43:
    cmp bl, byte ptr [edx + 0xe1]                        # 004B9D43
    jne .L4B9D6F                                         # 004B9D49
    add word ptr [ecx + _industries+411], ax             # 004B9D4B
    jae .L4B9D5D                                         # 004B9D52
    mov word ptr [ecx + _industries+411], 0xffff         # 004B9D54
.L4B9D5D:
    add word ptr [ecx + _industries+399], ax             # 004B9D5D
    jae .L4B9D6F                                         # 004B9D64
    mov word ptr [ecx + _industries+399], 0xffff         # 004B9D66
.L4B9D6F:
    cmp bl, byte ptr [edx + 0xe2]                        # 004B9D6F
    jne .L4B9D9B                                         # 004B9D75
    add word ptr [ecx + _industries+413], ax             # 004B9D77
    jae .L4B9D89                                         # 004B9D7E
    mov word ptr [ecx + _industries+413], 0xffff         # 004B9D80
.L4B9D89:
    add word ptr [ecx + _industries+401], ax             # 004B9D89
    jae .L4B9D9B                                         # 004B9D90
    mov word ptr [ecx + _industries+401], 0xffff         # 004B9D92
.L4B9D9B:
    movzx ebx, byte ptr [edi + 0x4c]                     # 004B9D9B
    bts dword ptr [ecx + _industries+907], ebx           # 004B9D9F
    jb .L4B9DCC                                          # 004B9DA6
    pushal                                               # 004B9DA8
    msvc_mov dh, bl                                      # 004B9DA9
    movzx ebx, byte ptr [edi + 0x4c]                     # 004B9DAB
    imul ebx, ebx, 0xd                                   # 004B9DAF
    mov dl, byte ptr [ebx + ebp + _stations+57]          # 004B9DB2
    mov bx, word ptr [edi + 0x26]                        # 004B9DB9
    movzx cx, dl                                         # 004B9DBD
    mov ah, byte ptr [esi + 0x21]                        # 004B9DC1
    mov al, 0xe                                          # 004B9DC4
    call _sub_4285BA                                     # 004B9DC6
    popal                                                # 004B9DCB
.L4B9DCC:
    movzx ecx, word ptr [ecx + _industries+213]          # 004B9DCC
    imul ecx, ecx, 0x270                                 # 004B9DD3
    bts dword ptr [ecx + _towns+424], ebx                # 004B9DD9
    movzx ecx, word ptr [ebp + _stations+44]             # 004B9DE0
    imul ecx, ecx, 0x270                                 # 004B9DE7
    bts dword ptr [ecx + _towns+424], ebx                # 004B9DED
    pop ebx                                              # 004B9DF4
.L4B9DF5:
    push ebx                                             # 004B9DF5
    movzx ebx, byte ptr [edi + 0x4c]                     # 004B9DF6
    movzx ecx, word ptr [ebp + _stations+44]             # 004B9DFA
    imul ecx, ecx, 0x270                                 # 004B9E01
    bts dword ptr [ecx + _towns+424], ebx                # 004B9E07
    jb .L4B9E2D                                          # 004B9E0E
    pushal                                               # 004B9E10
    mov dx, word ptr [ebp + _stations+44]                # 004B9E11
    msvc_mov dh, bl                                      # 004B9E18
    mov bx, word ptr [edi + 0x26]                        # 004B9E1A
    movzx cx, dl                                         # 004B9E1E
    mov ah, byte ptr [esi + 0x21]                        # 004B9E22
    mov al, 0xd                                          # 004B9E25
    call _sub_4285BA                                     # 004B9E27
    popal                                                # 004B9E2C
.L4B9E2D:
    pop ebx                                              # 004B9E2D
    test byte ptr [ebx + ebp + _stations+50], 1          # 004B9E2E
    je .L4B9E4A                                          # 004B9E36
    test byte ptr [ebx + ebp + _stations+50], 8          # 004B9E38
    jne .L4B9E4A                                         # 004B9E40
    or byte ptr [ebx + ebp + _stations+50], 8            # 004B9E42
.L4B9E4A:
    movzx ebx, byte ptr [edi + 0x4c]                     # 004B9E4A
    movzx ecx, byte ptr [esi + 0x21]                     # 004B9E4E
    imul ecx, ecx, 0x8fa8                                # 004B9E52
    bts dword ptr [ecx + _companies+1184], ebx           # 004B9E58
    jb .L4B9E61                                          # 004B9E5F
.L4B9E61:
    cmp byte ptr [esi + 0x42], 2                         # 004B9E61
    je .L4B9F13                                          # 004B9E65
    cmp byte ptr [esi + 0x42], 3                         # 004B9E6B
    je .L4B9F13                                          # 004B9E6F
    cmp byte ptr [esi + 0x42], 1                         # 004B9E75
    je .L4B9F1E                                          # 004B9E79
    push esi                                             # 004B9E7F
    msvc_mov ebp, edi                                    # 004B9E80
    cmp byte ptr [ebp + 1], 3                            # 004B9E82
    je .L4B9E8E                                          # 004B9E86
    mov ebp, dword ptr [__11360EC]                       # 004B9E88
.L4B9E8E:
    mov ax, word ptr [ebp + 0x30]                        # 004B9E8E
    mov cx, word ptr [ebp + 0x32]                        # 004B9E92
    mov dl, byte ptr [ebp + 0x34]                        # 004B9E96
    movzx ebp, word ptr [ebp + 0x2c]                     # 004B9E99
    movzx esi, cx                                        # 004B9E9D
    shl esi, 9                                           # 004B9EA0
    msvc_or si, ax                                       # 004B9EA3
    shr esi, 3                                           # 004B9EA6
    mov esi, dword ptr [esi + __E40134]                  # 004B9EA9
.L4B9EAF:
    mov al, byte ptr [esi]                               # 004B9EAF
    and al, 0x3c                                         # 004B9EB1
    cmp al, 4                                            # 004B9EB3
    jne .L4B9EDA                                         # 004B9EB5
    cmp dl, byte ptr [esi + 2]                           # 004B9EB7
    jne .L4B9EDA                                         # 004B9EBA
    mov al, byte ptr [esi]                               # 004B9EBC
    and al, 3                                            # 004B9EBE
    msvc_mov cx, bp                                      # 004B9EC0
    and cl, 3                                            # 004B9EC3
    cmp al, cl                                           # 004B9EC6
    jne .L4B9EDA                                         # 004B9EC8
    mov al, byte ptr [esi + 4]                           # 004B9ECA
    and al, 0x3f                                         # 004B9ECD
    msvc_mov cx, bp                                      # 004B9ECF
    shr cx, 3                                            # 004B9ED2
    cmp al, cl                                           # 004B9ED6
    je .L4B9EED                                          # 004B9ED8
.L4B9EDA:
    add esi, 8                                           # 004B9EDA
    test byte ptr [esi - 7], 0x80                        # 004B9EDD
    je .L4B9EAF                                          # 004B9EE1
.L4B9EE3:
    mov ecx, 0xc                                         # 004B9EE3
    msvc_jmp .L4B9FCF                                    # 004B9EE8
.L4B9EED:
    test byte ptr [esi], 0x80                            # 004B9EED
    je .L4B9EE3                                          # 004B9EF0
    test byte ptr [esi + 9], 0x30                        # 004B9EF2
    jne .L4B9EE3                                         # 004B9EF6
    mov ax, word ptr [esi + 0xe]                         # 004B9EF8
    and ax, 0x3ff                                        # 004B9EFC
    mov ecx, dword ptr [esp]                             # 004B9F00
    cmp ax, word ptr [ecx + 0x54]                        # 004B9F03
    jne .L4B9EE3                                         # 004B9F07
    mov ecx, 1                                           # 004B9F09
    msvc_jmp .L4B9FCF                                    # 004B9F0E
.L4B9F13:
    push esi                                             # 004B9F13
    mov ecx, 1                                           # 004B9F14
    msvc_jmp .L4B9FCF                                    # 004B9F19
.L4B9F1E:
    push esi                                             # 004B9F1E
    msvc_mov ebp, edi                                    # 004B9F1F
    cmp byte ptr [ebp + 1], 3                            # 004B9F21
    je .L4B9F2D                                          # 004B9F25
    mov ebp, dword ptr [__11360EC]                       # 004B9F27
.L4B9F2D:
    mov ax, word ptr [ebp + 0x30]                        # 004B9F2D
    mov cx, word ptr [ebp + 0x32]                        # 004B9F31
    mov dl, byte ptr [ebp + 0x34]                        # 004B9F35
    movzx ebp, word ptr [ebp + 0x2c]                     # 004B9F38
    movzx esi, cx                                        # 004B9F3C
    shl esi, 9                                           # 004B9F3F
    msvc_or si, ax                                       # 004B9F42
    shr esi, 3                                           # 004B9F45
    mov esi, dword ptr [esi + __E40134]                  # 004B9F48
.L4B9F4E:
    mov al, byte ptr [esi]                               # 004B9F4E
    and al, 0x3c                                         # 004B9F50
    cmp al, 0x1c                                         # 004B9F52
    jne .L4B9F7C                                         # 004B9F54
    cmp dl, byte ptr [esi + 2]                           # 004B9F56
    jne .L4B9F7C                                         # 004B9F59
    mov al, byte ptr [esi]                               # 004B9F5B
    and al, 3                                            # 004B9F5D
    msvc_mov cx, bp                                      # 004B9F5F
    and cl, 3                                            # 004B9F62
    cmp al, cl                                           # 004B9F65
    jne .L4B9F7C                                         # 004B9F67
    mov al, byte ptr [esi + 4]                           # 004B9F69
    and al, 0xf                                          # 004B9F6C
    msvc_mov cx, bp                                      # 004B9F6E
    shr cx, 3                                            # 004B9F71
    and cl, 0xf                                          # 004B9F75
    cmp al, cl                                           # 004B9F78
    je .L4B9F8C                                          # 004B9F7A
.L4B9F7C:
    add esi, 8                                           # 004B9F7C
    test byte ptr [esi - 7], 0x80                        # 004B9F7F
    je .L4B9F4E                                          # 004B9F83
.L4B9F85:
    mov ecx, 2                                           # 004B9F85
    jmp .L4B9FCF                                         # 004B9F8A
.L4B9F8C:
    test byte ptr [esi], 0x80                            # 004B9F8C
    je .L4B9F85                                          # 004B9F8F
.L4B9F91:
    add esi, 8                                           # 004B9F91
    mov al, byte ptr [esi]                               # 004B9F94
    and al, 0x3c                                         # 004B9F96
    cmp al, 8                                            # 004B9F98
    jne .L4B9F91                                         # 004B9F9A
    test byte ptr [esi + 1], 0x30                        # 004B9F9C
    jne .L4B9F85                                         # 004B9FA0
    mov ax, word ptr [esi + 6]                           # 004B9FA2
    and ax, 0x3ff                                        # 004B9FA6
    mov ecx, dword ptr [esp]                             # 004B9FAA
    cmp ax, word ptr [ecx + 0x54]                        # 004B9FAD
    jne .L4B9F85                                         # 004B9FB1
    mov al, byte ptr [esi + 5]                           # 004B9FB3
    and eax, 0x1f                                        # 004B9FB6
    mov eax, dword ptr [eax*4 + _roadStationObjects]     # 004B9FB9
    test byte ptr [eax + 0xb], 8                         # 004B9FC0
    jne .L4B9FCA                                         # 004B9FC4
    or byte ptr [ecx + 0x5f], 1                          # 004B9FC6
.L4B9FCA:
    mov ecx, 1                                           # 004B9FCA
.L4B9FCF:
    pop esi                                              # 004B9FCF
    movzx ebp, byte ptr [edi + 0x4c]                     # 004B9FD0
    mov ebp, dword ptr [ebp*4 + _cargoObjects]           # 004B9FD4
    movzx eax, word ptr [ebp + 4]                        # 004B9FDB
    movzx ebx, byte ptr [edi + 0x51]                     # 004B9FDF
    imul eax, ebx                                        # 004B9FE3
    imul eax, ecx                                        # 004B9FE6
    shr eax, 8                                           # 004B9FE9
    cmp eax, 0xffff                                      # 004B9FEC
    jbe .L4B9FF8                                         # 004B9FF1
    mov eax, 0xffff                                      # 004B9FF3
.L4B9FF8:
    mov word ptr [esi + 0x56], ax                        # 004B9FF8
    mov byte ptr [edi + 0x51], 0                         # 004B9FFC
    call _sub_4B7CC3                                     # 004BA000
    push edi                                             # 004BA005
    push esi                                             # 004BA006
    mov al, 0x17                                         # 004BA007
    mov bx, word ptr [esi + 0xa]                         # 004BA009
    call _sub_4CB966                                     # 004BA00D
    msvc_mov esi, edi                                    # 004BA012
    call _sub_4AC039                                     # 004BA014
    pop esi                                              # 004BA019
    pop edi                                              # 004BA01A
    msvc_jmp .L4BA141                                    # 004BA01B
.L4BA020:
    mov al, byte ptr [esi + 0x21]                        # 004BA020
    mov byte ptr [__9C68EB], al                          # 004BA023
    msvc_xor ebx, ebx                                    # 004BA028
    xchg dword ptr [esi + 0x58], ebx                     # 004BA02A
    msvc_or ebx, ebx                                     # 004BA02D
    je .L4BA104                                          # 004BA02F
    movzx edx, byte ptr [esi + 0x60]                     # 004BA035
    cmp dl, 0xff                                         # 004BA039
    je .L4BA055                                          # 004BA03C
    imul edx, edx, 0x8c                                  # 004BA03E
    movzx ecx, byte ptr [esi + 0x21]                     # 004BA044
    imul ecx, ecx, 0x8fa8                                # 004BA048
    add dword ptr [edx + ecx + _companies+1320], ebx     # 004BA04E
.L4BA055:
    mov ebp, dword ptr [__1136120]                       # 004BA055
    add dword ptr [ebp + 0x5e], ebx                      # 004BA05B
    neg ebx                                              # 004BA05E
    mov ebp, dword ptr [__113611C]                       # 004BA060
    msvc_or ebx, ebx                                     # 004BA066
    je .L4BA06E                                          # 004BA068
    or byte ptr [ebp + 0x48], 4                          # 004BA06A
.L4BA06E:
    mov al, byte ptr [esi + 0x5e]                        # 004BA06E
    shl al, 3                                            # 004BA071
    add al, 0                                            # 004BA074
    mov byte ptr [__9C68EA], al                          # 004BA076
    call _sub_46DE2B                                     # 004BA07B
    mov ebp, dword ptr [__1136120]                       # 004BA080
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA086
    shl ebp, 7                                           # 004BA08A
    add_offset ebp, _things                              # 004BA08D
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA093
    shl ebp, 7                                           # 004BA097
    add_offset ebp, _things                              # 004BA09A
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA0A0
    shl ebp, 7                                           # 004BA0A4
    add_offset ebp, _things                              # 004BA0A7
    mov ax, word ptr [ebp + 0xe]                         # 004BA0AD
    mov cx, word ptr [ebp + 0x10]                        # 004BA0B1
    mov dx, word ptr [ebp + 0x12]                        # 004BA0B5
    add dx, 0x1c                                         # 004BA0B9
    mov word ptr [__9C68E0], ax                          # 004BA0BD
    mov word ptr [__9C68E2], cx                          # 004BA0C3
    mov word ptr [__9C68E4], dx                          # 004BA0CA
    call _sub_46DC9F                                     # 004BA0D1
    pushal                                               # 004BA0D6
    mov bp, word ptr [__9C68E4]                          # 004BA0D7
    mov dx, word ptr [__9C68E2]                          # 004BA0DE
    mov cx, word ptr [__9C68E0]                          # 004BA0E5
    push eax                                             # 004BA0EC
    push ebx                                             # 004BA0ED
    push ecx                                             # 004BA0EE
    push edx                                             # 004BA0EF
    mov ebx, 0x8001                                      # 004BA0F0
    mov eax, 5                                           # 004BA0F5
    call _sub_489CB5                                     # 004BA0FA
    pop edx                                              # 004BA0FF
    pop ecx                                              # 004BA100
    pop ebx                                              # 004BA101
    pop eax                                              # 004BA102
    popal                                                # 004BA103
.L4BA104:
    mov word ptr [esi + 0x56], 0xa                       # 004BA104
    movzx edi, word ptr [esi + 0x3a]                     # 004BA10A
    shl edi, 7                                           # 004BA10E
    add_offset edi, _things                              # 004BA111
    movzx edi, word ptr [edi + 0x3a]                     # 004BA117
    shl edi, 7                                           # 004BA11B
    add_offset edi, _things                              # 004BA11E
.L4BA124:
    movzx edi, word ptr [edi + 0x3a]                     # 004BA124
    shl edi, 7                                           # 004BA128
    add_offset edi, _things                              # 004BA12B
    cmp byte ptr [edi + 1], 6                            # 004BA131
    je .L4BA13D                                          # 004BA135
    or byte ptr [edi + 0x5f], 1                          # 004BA137
    jmp .L4BA124                                         # 004BA13B
.L4BA13D:
    mov byte ptr [esi + 0x5d], 6                         # 004BA13D
.L4BA141:
    ret                                                  # 004BA141

    .global _sub_4BA142
_sub_4BA142:
    cmp word ptr [esi + 0x56], 0                         # 004BA142
    je .L4BA152                                          # 004BA147
    dec word ptr [esi + 0x56]                            # 004BA149
    msvc_jmp .L4BA7C5                                    # 004BA14D
.L4BA152:
    movzx edi, word ptr [esi + 0x3a]                     # 004BA152
    shl edi, 7                                           # 004BA156
    add_offset edi, _things                              # 004BA159
    movzx edi, word ptr [edi + 0x3a]                     # 004BA15F
    shl edi, 7                                           # 004BA163
    add_offset edi, _things                              # 004BA166
.L4BA16C:
    mov dword ptr [__11360EC], edi                       # 004BA16C
    movzx edi, word ptr [edi + 0x3a]                     # 004BA172
    shl edi, 7                                           # 004BA176
    add_offset edi, _things                              # 004BA179
    cmp byte ptr [edi + 1], 6                            # 004BA17F
    je .L4BA6BB                                          # 004BA183
    test byte ptr [edi + 0x5f], 1                        # 004BA189
    je .L4BA16C                                          # 004BA18D
    and byte ptr [edi + 0x5f], 0xfe                      # 004BA18F
    cmp byte ptr [edi + 0x4c], 0xff                      # 004BA193
    je .L4BA7C5                                          # 004BA197
    cmp byte ptr [edi + 0x4d], 0                         # 004BA19D
    je .L4BA7C5                                          # 004BA1A1
    cmp word ptr [esi + 0x54], -1                        # 004BA1A7
    je .L4BA7C5                                          # 004BA1AC
    cmp byte ptr [esi + 0x42], 2                         # 004BA1B2
    je .L4BA264                                          # 004BA1B6
    cmp byte ptr [esi + 0x42], 3                         # 004BA1BC
    je .L4BA264                                          # 004BA1C0
    cmp byte ptr [esi + 0x42], 1                         # 004BA1C6
    je .L4BA26F                                          # 004BA1CA
    push esi                                             # 004BA1D0
    msvc_mov ebp, edi                                    # 004BA1D1
    cmp byte ptr [ebp + 1], 3                            # 004BA1D3
    je .L4BA1DF                                          # 004BA1D7
    mov ebp, dword ptr [__11360EC]                       # 004BA1D9
.L4BA1DF:
    mov ax, word ptr [ebp + 0x30]                        # 004BA1DF
    mov cx, word ptr [ebp + 0x32]                        # 004BA1E3
    mov dl, byte ptr [ebp + 0x34]                        # 004BA1E7
    movzx ebp, word ptr [ebp + 0x2c]                     # 004BA1EA
    movzx esi, cx                                        # 004BA1EE
    shl esi, 9                                           # 004BA1F1
    msvc_or si, ax                                       # 004BA1F4
    shr esi, 3                                           # 004BA1F7
    mov esi, dword ptr [esi + __E40134]                  # 004BA1FA
.L4BA200:
    mov al, byte ptr [esi]                               # 004BA200
    and al, 0x3c                                         # 004BA202
    cmp al, 4                                            # 004BA204
    jne .L4BA22B                                         # 004BA206
    cmp dl, byte ptr [esi + 2]                           # 004BA208
    jne .L4BA22B                                         # 004BA20B
    mov al, byte ptr [esi]                               # 004BA20D
    and al, 3                                            # 004BA20F
    msvc_mov cx, bp                                      # 004BA211
    and cl, 3                                            # 004BA214
    cmp al, cl                                           # 004BA217
    jne .L4BA22B                                         # 004BA219
    mov al, byte ptr [esi + 4]                           # 004BA21B
    and al, 0x3f                                         # 004BA21E
    msvc_mov cx, bp                                      # 004BA220
    shr cx, 3                                            # 004BA223
    cmp al, cl                                           # 004BA227
    je .L4BA23E                                          # 004BA229
.L4BA22B:
    add esi, 8                                           # 004BA22B
    test byte ptr [esi - 7], 0x80                        # 004BA22E
    je .L4BA200                                          # 004BA232
.L4BA234:
    mov ecx, 0xc                                         # 004BA234
    msvc_jmp .L4BA324                                    # 004BA239
.L4BA23E:
    test byte ptr [esi], 0x80                            # 004BA23E
    je .L4BA234                                          # 004BA241
    test byte ptr [esi + 9], 0x30                        # 004BA243
    jne .L4BA234                                         # 004BA247
    mov ax, word ptr [esi + 0xe]                         # 004BA249
    and ax, 0x3ff                                        # 004BA24D
    mov ecx, dword ptr [esp]                             # 004BA251
    cmp ax, word ptr [ecx + 0x54]                        # 004BA254
    jne .L4BA234                                         # 004BA258
    mov ecx, 1                                           # 004BA25A
    msvc_jmp .L4BA324                                    # 004BA25F
.L4BA264:
    push esi                                             # 004BA264
    mov ecx, 1                                           # 004BA265
    msvc_jmp .L4BA324                                    # 004BA26A
.L4BA26F:
    push esi                                             # 004BA26F
    msvc_mov ebp, edi                                    # 004BA270
    cmp byte ptr [ebp + 1], 3                            # 004BA272
    je .L4BA27E                                          # 004BA276
    mov ebp, dword ptr [__11360EC]                       # 004BA278
.L4BA27E:
    mov ax, word ptr [ebp + 0x30]                        # 004BA27E
    mov cx, word ptr [ebp + 0x32]                        # 004BA282
    mov dl, byte ptr [ebp + 0x34]                        # 004BA286
    movzx ebp, word ptr [ebp + 0x2c]                     # 004BA289
    movzx esi, cx                                        # 004BA28D
    shl esi, 9                                           # 004BA290
    msvc_or si, ax                                       # 004BA293
    shr esi, 3                                           # 004BA296
    mov esi, dword ptr [esi + __E40134]                  # 004BA299
.L4BA29F:
    mov al, byte ptr [esi]                               # 004BA29F
    and al, 0x3c                                         # 004BA2A1
    cmp al, 0x1c                                         # 004BA2A3
    jne .L4BA2CD                                         # 004BA2A5
    cmp dl, byte ptr [esi + 2]                           # 004BA2A7
    jne .L4BA2CD                                         # 004BA2AA
    mov al, byte ptr [esi]                               # 004BA2AC
    and al, 3                                            # 004BA2AE
    msvc_mov cx, bp                                      # 004BA2B0
    and cl, 3                                            # 004BA2B3
    cmp al, cl                                           # 004BA2B6
    jne .L4BA2CD                                         # 004BA2B8
    mov al, byte ptr [esi + 4]                           # 004BA2BA
    and al, 0xf                                          # 004BA2BD
    msvc_mov cx, bp                                      # 004BA2BF
    shr cx, 3                                            # 004BA2C2
    and cl, 0xf                                          # 004BA2C6
    cmp al, cl                                           # 004BA2C9
    je .L4BA2DD                                          # 004BA2CB
.L4BA2CD:
    add esi, 8                                           # 004BA2CD
    test byte ptr [esi - 7], 0x80                        # 004BA2D0
    je .L4BA29F                                          # 004BA2D4
.L4BA2D6:
    mov ecx, 2                                           # 004BA2D6
    jmp .L4BA324                                         # 004BA2DB
.L4BA2DD:
    test byte ptr [esi], 0x80                            # 004BA2DD
    je .L4BA2D6                                          # 004BA2E0
.L4BA2E2:
    add esi, 8                                           # 004BA2E2
    mov al, byte ptr [esi]                               # 004BA2E5
    and al, 0x3c                                         # 004BA2E7
    cmp al, 8                                            # 004BA2E9
    jne .L4BA2E2                                         # 004BA2EB
    test byte ptr [esi + 1], 0x30                        # 004BA2ED
    jne .L4BA234                                         # 004BA2F1
    mov ax, word ptr [esi + 6]                           # 004BA2F7
    and ax, 0x3ff                                        # 004BA2FB
    mov ecx, dword ptr [esp]                             # 004BA2FF
    cmp ax, word ptr [ecx + 0x54]                        # 004BA302
    jne .L4BA2D6                                         # 004BA306
    mov al, byte ptr [esi + 5]                           # 004BA308
    and eax, 0x1f                                        # 004BA30B
    mov eax, dword ptr [eax*4 + _roadStationObjects]     # 004BA30E
    test byte ptr [eax + 0xb], 8                         # 004BA315
    jne .L4BA31F                                         # 004BA319
    or byte ptr [ecx + 0x5f], 1                          # 004BA31B
.L4BA31F:
    mov ecx, 1                                           # 004BA31F
.L4BA324:
    pop esi                                              # 004BA324
    DebugStamp 0x11110001
    movzx ebp, word ptr [esi + 0x54]                     # 004BA325
    imul ebp, ebp, 0x3d2                                 # 004BA329
    cmp byte ptr [edi + 0x51], 0                         # 004BA32F
    jne .L4BA416                                         # 004BA333
    push ecx                                             # 004BA339
    push edi                                             # 004BA33A
    push ebp                                             # 004BA33B
    mov ebp, dword ptr [esi + 0x46]                      # 004BA33C
    movzx edi, word ptr [esi + 0x4a]                     # 004BA33F
    msvc_xor eax, eax                                    # 004BA343
.L4BA345:
    mov bl, byte ptr [edi + ebp + __987C5C]              # 004BA345
    and ebx, 7                                           # 004BA34C
    cmp bl, 5                                            # 004BA34F
    jne .L4BA362                                         # 004BA352
    movzx ecx, byte ptr [edi + ebp + __987C5C]           # 004BA354
    shr ecx, 3                                           # 004BA35C
    bts eax, ecx                                         # 004BA35F
.L4BA362:
    test byte ptr [ebx + __4FE088], 1                    # 004BA362
    jne .L4BA37F                                         # 004BA369
    add edi, dword ptr [ebx*4 + __4FE070]                # 004BA36B
    cmp bl, 0                                            # 004BA372
    jne .L4BA379                                         # 004BA375
    msvc_xor edi, edi                                    # 004BA377
.L4BA379:
    cmp di, word ptr [esi + 0x4a]                        # 004BA379
    jne .L4BA345                                         # 004BA37D
.L4BA37F:
    mov dword ptr [__11360DC], eax                       # 004BA37F
    pop ebp                                              # 004BA384
    pop edi                                              # 004BA385
    pop ecx                                              # 004BA386
    push ecx                                             # 004BA387
    push ebp                                             # 004BA388
    msvc_xor eax, eax                                    # 004BA389
    mov ebp, dword ptr [esi + 0x46]                      # 004BA38B
.L4BA38E:
    mov bl, byte ptr [ebp + __987C5C]                    # 004BA38E
    and ebx, 7                                           # 004BA394
    cmp bl, 5                                            # 004BA397
    jne .L4BA3A9                                         # 004BA39A
    movzx ecx, byte ptr [ebp + __987C5C]                 # 004BA39C
    shr ecx, 3                                           # 004BA3A3
    bts eax, ecx                                         # 004BA3A6
.L4BA3A9:
    add ebp, dword ptr [ebx*4 + __4FE070]                # 004BA3A9
    cmp bl, 0                                            # 004BA3B0
    jne .L4BA38E                                         # 004BA3B3
    msvc_or eax, eax                                     # 004BA3B5
    jne .L4BA3BB                                         # 004BA3B7
    not eax                                              # 004BA3B9
.L4BA3BB:
    mov dword ptr [__11360D8], eax                       # 004BA3BB
    pop ebp                                              # 004BA3C0
    pop ecx                                              # 004BA3C1
    mov edx, dword ptr [edi + 0x48]                      # 004BA3C2
    msvc_xor ax, ax                                      # 004BA3C5
    push ecx                                             # 004BA3C8
    push esi                                             # 004BA3C9
.L4BA3CA:
    bsf ecx, edx                                         # 004BA3CA
    je .L4BA407                                          # 004BA3CD
    btr edx, ecx                                         # 004BA3CF
    bt dword ptr [__11360D8], ecx                        # 004BA3D2
    jae .L4BA3CA                                         # 004BA3D9
    bt dword ptr [__11360DC], ecx                        # 004BA3DB
    jb .L4BA3FF                                          # 004BA3E2
    msvc_mov esi, ecx                                    # 004BA3E4
    imul esi, esi, 0xd                                   # 004BA3E6
    cmp ax, word ptr [esi + ebp + _stations+46]          # 004BA3E9
    jae .L4BA3CA                                         # 004BA3F1
    mov ax, word ptr [esi + ebp + _stations+46]          # 004BA3F3
    msvc_mov bl, cl                                      # 004BA3FB
    jmp .L4BA3CA                                         # 004BA3FD
.L4BA3FF:
    mov ax, 0xffff                                       # 004BA3FF
    msvc_mov bl, cl                                      # 004BA403
    jmp .L4BA3CA                                         # 004BA405
.L4BA407:
    pop esi                                              # 004BA407
    pop ecx                                              # 004BA408
    msvc_or ax, ax                                       # 004BA409
    je .L4BA416                                          # 004BA40C
    cmp bl, byte ptr [edi + 0x4c]                        # 004BA40E
    je .L4BA416                                          # 004BA411
    mov byte ptr [edi + 0x4c], bl                        # 004BA413
.L4BA416:
    movzx edx, byte ptr [edi + 0x4c]                     # 004BA416
    push ebx                                             # 004BA41A
    push edi                                             # 004BA41B
    push ebp                                             # 004BA41C
    mov ebp, dword ptr [esi + 0x46]                      # 004BA41D
    movzx edi, word ptr [esi + 0x4a]                     # 004BA420
.L4BA424:
    mov bl, byte ptr [edi + ebp + __987C5C]              # 004BA424
    and ebx, 7                                           # 004BA42B
    test byte ptr [ebx + __4FE088], 4                    # 004BA42E
    je .L4BA476                                          # 004BA435
    cmp bl, 4                                            # 004BA437
    jne .L4BA453                                         # 004BA43A
    movzx ebx, byte ptr [edi + ebp + __987C5C]           # 004BA43C
    shr ebx, 3                                           # 004BA444
    msvc_cmp ebx, edx                                    # 004BA447
    jne .L4BA453                                         # 004BA449
    pop ebp                                              # 004BA44B
    pop edi                                              # 004BA44C
    pop ebx                                              # 004BA44D
    msvc_jmp .L4BA7C5                                    # 004BA44E
.L4BA453:
    mov bl, byte ptr [edi + ebp + __987C5C]              # 004BA453
    and ebx, 7                                           # 004BA45A
    add edi, dword ptr [ebx*4 + __4FE070]                # 004BA45D
    cmp byte ptr [edi + ebp + __987C5C], 0               # 004BA464
    jne .L4BA470                                         # 004BA46C
    msvc_xor edi, edi                                    # 004BA46E
.L4BA470:
    cmp di, word ptr [esi + 0x4a]                        # 004BA470
    jne .L4BA424                                         # 004BA474
.L4BA476:
    pop ebp                                              # 004BA476
    pop edi                                              # 004BA477
    pop ebx                                              # 004BA478
    movzx ebx, byte ptr [edi + 0x4c]                     # 004BA479
    imul ebx, ebx, 0xd                                   # 004BA47D
    mov al, byte ptr [edi + 0x51]                        # 004BA480
    cmp al, byte ptr [edi + 0x4d]                        # 004BA483
    je .L4BA7C5                                          # 004BA486
    movzx edx, byte ptr [edi + 0x4c]                     # 004BA48C
    mov edx, dword ptr [edx*4 + _cargoObjects]           # 004BA490
    movzx eax, word ptr [edx + 4]                        # 004BA497
    imul eax, ecx                                        # 004BA49B
    movzx ecx, byte ptr [edi + 0x4d]                     # 004BA49E
    sub cl, byte ptr [edi + 0x51]                        # 004BA4A2
    cmp cx, word ptr [ebx + ebp + _stations+46]          # 004BA4A5
    jbe .L4BA4B7                                         # 004BA4AD
    mov cx, word ptr [ebx + ebp + _stations+46]          # 004BA4AF
.L4BA4B7:
    imul eax, ecx                                        # 004BA4B7
    shr eax, 8                                           # 004BA4BA
    cmp eax, 0xffff                                      # 004BA4BD
    jbe .L4BA4C9                                         # 004BA4C2
    mov eax, 0xffff                                      # 004BA4C4
.L4BA4C9:
    mov word ptr [esi + 0x56], ax                        # 004BA4C9
    cmp word ptr [ebx + ebp + _stations+46], 0           # 004BA4CD
    je .L4BA5B7                                          # 004BA4D6
    cmp byte ptr [edi + 0x51], 0                         # 004BA4DC
    je .L4BA59A                                          # 004BA4E0
    DebugStamp 0x11110002
    mov al, byte ptr [ebx + ebp + _stations+53]          # 004BA4E6
    cmp al, byte ptr [edi + 0x50]                        # 004BA4ED
    jbe .L4BA4F5                                         # 004BA4F0
    mov byte ptr [edi + 0x50], al                        # 004BA4F2
.L4BA4F5:
    movzx ebx, word ptr [ebx + ebp + _stations+48]       # 004BA4F5
    imul ebx, ebx, 0x3d2                                 # 004BA4FD
    mov ax, word ptr [ebx + _stations+2]                 # 004BA503
    mov cx, word ptr [ebx + _stations+4]                 # 004BA50A
    sub ax, word ptr [ebp + _stations+2]                 # 004BA511
    jns .L4BA51D                                         # 004BA518
    neg ax                                               # 004BA51A
.L4BA51D:
    sub cx, word ptr [ebp + _stations+4]                 # 004BA51D
    jns .L4BA529                                         # 004BA524
    neg cx                                               # 004BA526
.L4BA529:
    movzx eax, ax                                        # 004BA529
    movzx ecx, cx                                        # 004BA52C
    imul eax, eax                                        # 004BA52F
    imul ecx, ecx                                        # 004BA532
    msvc_add eax, ecx                                    # 004BA535
    call _sub_4BE368                                     # 004BA537
    msvc_mov edx, eax                                    # 004BA53C
    movzx ebx, word ptr [edi + 0x4e]                     # 004BA53E
    imul ebx, ebx, 0x3d2                                 # 004BA542
    mov ax, word ptr [ebx + _stations+2]                 # 004BA548
    mov cx, word ptr [ebx + _stations+4]                 # 004BA54F
    sub ax, word ptr [ebp + _stations+2]                 # 004BA556
    jns .L4BA562                                         # 004BA55D
    neg ax                                               # 004BA55F
.L4BA562:
    sub cx, word ptr [ebp + _stations+4]                 # 004BA562
    jns .L4BA56E                                         # 004BA569
    neg cx                                               # 004BA56B
.L4BA56E:
    movzx eax, ax                                        # 004BA56E
    movzx ecx, cx                                        # 004BA571
    imul eax, eax                                        # 004BA574
    imul ecx, ecx                                        # 004BA577
    msvc_add eax, ecx                                    # 004BA57A
    call _sub_4BE368                                     # 004BA57C
    DebugStamp 0x11110003
    msvc_cmp eax, edx                                    # 004BA581
    jb .L4BA598                                          # 004BA583
    movzx ebx, byte ptr [edi + 0x4c]                     # 004BA585
    imul ebx, ebx, 0xd                                   # 004BA589
    mov ax, word ptr [ebx + ebp + _stations+48]          # 004BA58C
    mov word ptr [edi + 0x4e], ax                        # 004BA594
.L4BA598:
    jmp .L4BA5B7                                         # 004BA598
.L4BA59A:
    DebugStamp 0x11110004
    movzx ebx, byte ptr [edi + 0x4c]                     # 004BA59A
    imul ebx, ebx, 0xd                                   # 004BA59E
    mov ax, word ptr [ebx + ebp + _stations+48]          # 004BA5A1
    mov word ptr [edi + 0x4e], ax                        # 004BA5A9
    mov al, byte ptr [ebx + ebp + _stations+53]          # 004BA5AD
    mov byte ptr [edi + 0x50], al                        # 004BA5B4
.L4BA5B7:
    movzx ax, byte ptr [edi + 0x4d]                      # 004BA5B7
    sub al, byte ptr [edi + 0x51]                        # 004BA5BC
    cmp ax, word ptr [ebx + ebp + _stations+46]          # 004BA5BF
    jbe .L4BA5D1                                         # 004BA5C7
    mov ax, word ptr [ebx + ebp + _stations+46]          # 004BA5C9
.L4BA5D1:
    sub word ptr [ebx + ebp + _stations+46], ax          # 004BA5D1
    push ebp                                             # 004BA5D9
    add_offset ebp, _stations                            # 004BA5DA
    call _sub_4929DB                                     # 004BA5E0
    pop ebp                                              # 004BA5E5
    add byte ptr [edi + 0x51], al                        # 004BA5E6
    mov eax, dword ptr [__1136118]                       # 004BA5E9
    movzx eax, byte ptr [eax + 0x5e]                     # 004BA5EE
    mov al, byte ptr [eax + __5002A8]                    # 004BA5F2
    cmp al, byte ptr [ebx + ebp + _stations+51]          # 004BA5F8
    jae .L4BA608                                         # 004BA5FF
    mov byte ptr [ebx + ebp + _stations+51], al          # 004BA601
.L4BA608:
    mov byte ptr [ebp + _stations+944], 0                # 004BA608
    or word ptr [ebp + _stations+42], 0x80               # 004BA60F
    mov eax, dword ptr [__1136120]                       # 004BA618
    mov ax, word ptr [eax + 0x54]                        # 004BA61D
    mov ecx, dword ptr [_scenarioChunk3+20]              # 004BA621
    sub ecx, dword ptr [edi + 0x56]                      # 004BA627
    shr ecx, 8                                           # 004BA62A
    cmp ecx, 0xff                                        # 004BA62D
    jbe .L4BA63A                                         # 004BA633
    mov ecx, 0xff                                        # 004BA635
.L4BA63A:
    test byte ptr [ebx + ebp + _stations+50], 4          # 004BA63A
    jne .L4BA65D                                         # 004BA642
    or byte ptr [ebx + ebp + _stations+50], 4            # 004BA644
    mov word ptr [ebx + ebp + _stations+54], ax          # 004BA64C
    mov byte ptr [ebx + ebp + _stations+56], cl          # 004BA654
    jmp .L4BA684                                         # 004BA65B
.L4BA65D:
    add ax, word ptr [ebx + ebp + _stations+54]          # 004BA65D
    shr ax, 1                                            # 004BA665
    mov word ptr [ebx + ebp + _stations+54], ax          # 004BA668
    add cl, byte ptr [ebx + ebp + _stations+56]          # 004BA670
    adc ch, 0                                            # 004BA677
    shr cx, 1                                            # 004BA67A
    mov byte ptr [ebx + ebp + _stations+56], cl          # 004BA67D
.L4BA684:
    movzx ebx, byte ptr [edi + 0x4c]                     # 004BA684
    movzx ecx, byte ptr [esi + 0x21]                     # 004BA688
    imul ecx, ecx, 0x8fa8                                # 004BA68C
    bts dword ptr [ecx + _companies+1180], ebx           # 004BA692
    jb .L4BA69B                                          # 004BA699
.L4BA69B:
    DebugStamp 0x11110005
    call _sub_4B7CC3                                     # 004BA69B
    DebugStamp 0x11110006
    push edi                                             # 004BA6A0
    push esi                                             # 004BA6A1
    mov al, 0x17                                         # 004BA6A2
    mov bx, word ptr [esi + 0xa]                         # 004BA6A4
    call _sub_4CB966                                     # 004BA6A8
    DebugStamp 0x11110007
    msvc_mov esi, edi                                    # 004BA6AD
    call _sub_4AC039                                     # 004BA6AF
    pop esi                                              # 004BA6B4
    pop edi                                              # 004BA6B5
    DebugStamp 0x11110008
    msvc_jmp .L4BA7C5                                    # 004BA6B6
.L4BA6BB:
    DebugStamp 0x11110017
    mov ebp, dword ptr [esi + 0x46]                      # 004BA6BB
    movzx edi, word ptr [esi + 0x4a]                     # 004BA6BE
.L4BA6C2:
    mov bl, byte ptr [edi + ebp + __987C5C]              # 004BA6C2
    and ebx, 7                                           # 004BA6C9
    test byte ptr [ebx + __4FE088], 4                    # 004BA6CC
    je .L4BA770                                          # 004BA6D3
    cmp bl, 5                                            # 004BA6D9
    jne .L4BA753                                         # 004BA6DC
    push ebx                                             # 004BA6DE
    push edi                                             # 004BA6DF
    movzx ebx, byte ptr [edi + ebp + __987C5C]           # 004BA6E0
    shr ebx, 3                                           # 004BA6E8
    movzx edi, word ptr [esi + 0x3a]                     # 004BA6EB
    shl edi, 7                                           # 004BA6EF
    add_offset edi, _things                              # 004BA6F2
    movzx edi, word ptr [edi + 0x3a]                     # 004BA6F8
    shl edi, 7                                           # 004BA6FC
    add_offset edi, _things                              # 004BA6FF
.L4BA705:
    movzx edi, word ptr [edi + 0x3a]                     # 004BA705
    shl edi, 7                                           # 004BA709
    add_offset edi, _things                              # 004BA70C
    cmp byte ptr [edi + 1], 6                            # 004BA712
    je .L4BA751                                          # 004BA716
    cmp bl, byte ptr [edi + 0x4c]                        # 004BA718
    jne .L4BA705                                         # 004BA71B
    mov al, byte ptr [edi + 0x4d]                        # 004BA71D
    cmp al, byte ptr [edi + 0x51]                        # 004BA720
    je .L4BA705                                          # 004BA723
    test byte ptr [esi + 0x5f], 1                        # 004BA725
    je .L4BA786                                          # 004BA729
    pushal                                               # 004BA72B
    mov al, byte ptr [esi + 0x21]                        # 004BA72C
    cmp al, byte ptr [_scenarioChunk3+36]                # 004BA72F
    jne .L4BA750                                         # 004BA735
    mov al, 0                                            # 004BA737
    mov bx, word ptr [esi + 0xa]                         # 004BA739
    mov cx, word ptr [esi + 0x54]                        # 004BA73D
    mov dx, 0xffff                                       # 004BA741
    mov ah, byte ptr [_scenarioChunk3+36]                # 004BA745
    call _sub_4285BA                                     # 004BA74B
.L4BA750:
    popal                                                # 004BA750
.L4BA751:
    pop edi                                              # 004BA751
    pop ebx                                              # 004BA752
.L4BA753:
    add edi, dword ptr [ebx*4 + __4FE070]                # 004BA753
    cmp byte ptr [edi + ebp + __987C5C], 0               # 004BA75A
    jne .L4BA766                                         # 004BA762
    msvc_xor edi, edi                                    # 004BA764
.L4BA766:
    cmp di, word ptr [esi + 0x4a]                        # 004BA766
    jne .L4BA6C2                                         # 004BA76A
.L4BA770:
    cmp di, word ptr [esi + 0x4a]                        # 004BA770
    je .L4BA783                                          # 004BA774
    mov word ptr [esi + 0x4a], di                        # 004BA776
    mov bx, word ptr [esi + 0xa]                         # 004BA77A
    call _sub_4B93A5                                     # 004BA77E
.L4BA783:
    msvc_and eax, eax                                    # 004BA783
    ret                                                  # 004BA785
.L4BA786:
    pop edi                                              # 004BA786
    pop ebx                                              # 004BA787
    mov word ptr [esi + 0x56], 0xa                       # 004BA788
    movzx edi, word ptr [esi + 0x3a]                     # 004BA78E
    shl edi, 7                                           # 004BA792
    add_offset edi, _things                              # 004BA795
    movzx edi, word ptr [edi + 0x3a]                     # 004BA79B
    shl edi, 7                                           # 004BA79F
    add_offset edi, _things                              # 004BA7A2
.L4BA7A8:
    movzx edi, word ptr [edi + 0x3a]                     # 004BA7A8
    shl edi, 7                                           # 004BA7AC
    add_offset edi, _things                              # 004BA7AF
    cmp byte ptr [edi + 1], 6                            # 004BA7B5
    je .L4BA7C1                                          # 004BA7B9
    or byte ptr [edi + 0x5f], 1                          # 004BA7BB
    jmp .L4BA7A8                                         # 004BA7BF
.L4BA7C1:
    mov byte ptr [esi + 0x5d], 6                         # 004BA7C1
.L4BA7C5:
    stc                                                  # 004BA7C5
    ret                                                  # 004BA7C6

    .global _sub_4BA7C7
_sub_4BA7C7:
    pushal                                               # 004BA7C7
    movzx esi, word ptr [esi + 0x26]                     # 004BA7C8
    shl esi, 7                                           # 004BA7CC
    add_offset esi, _things                              # 004BA7CF
    movzx esi, word ptr [esi + 0x3a]                     # 004BA7D5
    shl esi, 7                                           # 004BA7D9
    add_offset esi, _things                              # 004BA7DC
    msvc_or ebx, ebx                                     # 004BA7E2
    je .L4BA871                                          # 004BA7E4
    cmp edx, 0xff                                        # 004BA7EA
    ja .L4BA871                                          # 004BA7F0
    test byte ptr [esi + 0x48], 4                        # 004BA7F2
    je .L4BA815                                          # 004BA7F6
    and byte ptr [esi + 0x48], 0xfb                      # 004BA7F8
    mov edi, dword ptr [_scenarioChunk3+20]              # 004BA7FC
    mov dword ptr [esi + 0x53], edi                      # 004BA802
    mov byte ptr [esi + 0x57], 0xff                      # 004BA805
    mov byte ptr [esi + 0x58], 0xff                      # 004BA809
    mov byte ptr [esi + 0x59], 0xff                      # 004BA80D
    mov byte ptr [esi + 0x5a], 0xff                      # 004BA811
.L4BA815:
    msvc_xor edi, edi                                    # 004BA815
.L4BA817:
    cmp al, byte ptr [edi + esi + 0x57]                  # 004BA817
    jne .L4BA839                                         # 004BA81B
    cmp cx, word ptr [esi + edi*2 + 0x63]                # 004BA81D
    jne .L4BA839                                         # 004BA822
    add word ptr [esi + edi*2 + 0x5b], bx                # 004BA824
    add dword ptr [esi + edi*4 + 0x6f], ebp              # 004BA829
    cmp dl, byte ptr [edi + esi + 0x6b]                  # 004BA82D
    jbe .L4BA837                                         # 004BA831
    mov byte ptr [edi + esi + 0x6b], dl                  # 004BA833
.L4BA837:
    jmp .L4BA866                                         # 004BA837
.L4BA839:
    inc edi                                              # 004BA839
    cmp edi, 4                                           # 004BA83A
    jb .L4BA817                                          # 004BA83D
    msvc_xor edi, edi                                    # 004BA83F
.L4BA841:
    cmp byte ptr [edi + esi + 0x57], 0xff                # 004BA841
    je .L4BA850                                          # 004BA846
    inc edi                                              # 004BA848
    cmp edi, 4                                           # 004BA849
    jb .L4BA841                                          # 004BA84C
    jmp .L4BA871                                         # 004BA84E
.L4BA850:
    mov byte ptr [edi + esi + 0x57], al                  # 004BA850
    mov word ptr [esi + edi*2 + 0x5b], bx                # 004BA854
    mov word ptr [esi + edi*2 + 0x63], cx                # 004BA859
    mov byte ptr [edi + esi + 0x6b], dl                  # 004BA85E
    mov dword ptr [esi + edi*4 + 0x6f], ebp              # 004BA862
.L4BA866:
    mov bx, word ptr [esi + 0x26]                        # 004BA866
    mov al, 0x17                                         # 004BA86A
    call _sub_4CB966                                     # 004BA86C
.L4BA871:
    popal                                                # 004BA871
    ret                                                  # 004BA872

    .global _sub_4BA873
_sub_4BA873:
    push eax                                             # 004BA873
    push ebx                                             # 004BA874
    push ecx                                             # 004BA875
    push edx                                             # 004BA876
    mov word ptr [esi + 0x68], 0xffff                    # 004BA877
    movzx ecx, word ptr [esi + 0x66]                     # 004BA87D
    msvc_or ecx, ecx                                     # 004BA881
    je .L4BA8CF                                          # 004BA883
    shr ecx, 8                                           # 004BA885
    imul ecx, ecx                                        # 004BA888
    shr ecx, 4                                           # 004BA88B
    mov eax, dword ptr [_scenarioChunk3]                 # 004BA88E
    mov edx, dword ptr [_scenarioChunk3+4]               # 004BA893
    ror eax, 3                                           # 004BA899
    xor edx, 0x1234567f                                  # 004BA89C
    mov dword ptr [_scenarioChunk3+4], eax               # 004BA8A2
    ror edx, 7                                           # 004BA8A7
    add dword ptr [_scenarioChunk3], edx                 # 004BA8AA
    msvc_mov edx, ecx                                    # 004BA8B0
    msvc_mov ebx, ecx                                    # 004BA8B2
    shr edx, 1                                           # 004BA8B4
    shr ebx, 2                                           # 004BA8B6
    msvc_sub ecx, ebx                                    # 004BA8B9
    mul dx                                               # 004BA8BB
    msvc_add cx, dx                                      # 004BA8BE
    cmp cx, 4                                            # 004BA8C1
    jae .L4BA8CB                                         # 004BA8C5
    mov cx, 4                                            # 004BA8C7
.L4BA8CB:
    mov word ptr [esi + 0x68], cx                        # 004BA8CB
.L4BA8CF:
    pop edx                                              # 004BA8CF
    pop ecx                                              # 004BA8D0
    pop ebx                                              # 004BA8D1
    pop eax                                              # 004BA8D2
    ret                                                  # 004BA8D3

    .global _sub_4BA8D4
_sub_4BA8D4:
    mov al, byte ptr [esi + 0x5d]                        # 004BA8D4
    cmp al, 0                                            # 004BA8D7
    je .L4BAA75                                          # 004BA8D9
    cmp al, 1                                            # 004BA8DF
    je .L4BAA75                                          # 004BA8E1
    cmp al, 3                                            # 004BA8E7
    je .L4BAA75                                          # 004BA8E9
    cmp al, 5                                            # 004BA8EF
    je .L4BAA75                                          # 004BA8F1
    cmp al, 6                                            # 004BA8F7
    je .L4BAA75                                          # 004BA8F9
    cmp al, 8                                            # 004BA8FF
    je .L4BAA75                                          # 004BA901
    cmp al, 9                                            # 004BA907
    je .L4BAA75                                          # 004BA909
    movzx ebp, word ptr [esi + 0x3a]                     # 004BA90F
    shl ebp, 7                                           # 004BA913
    add_offset ebp, _things                              # 004BA916
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA91C
    shl ebp, 7                                           # 004BA920
    add_offset ebp, _things                              # 004BA923
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA929
    shl ebp, 7                                           # 004BA92D
    add_offset ebp, _things                              # 004BA930
    cmp byte ptr [ebp + 1], 6                            # 004BA936
    je .L4BAA75                                          # 004BA93A
.L4BA940:
    test byte ptr [ebp + 0x5f], 4                        # 004BA940
    je .L4BA983                                          # 004BA944
    test dword ptr [_scenarioChunk3+326], 3              # 004BA946
    jne .L4BA983                                         # 004BA950
    pushal                                               # 004BA952
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA953
    shl ebp, 7                                           # 004BA957
    add_offset ebp, _things                              # 004BA95A
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA960
    shl ebp, 7                                           # 004BA964
    add_offset ebp, _things                              # 004BA967
    mov ax, word ptr [ebp + 0xe]                         # 004BA96D
    mov cx, word ptr [ebp + 0x10]                        # 004BA971
    mov dx, word ptr [ebp + 0x12]                        # 004BA975
    add dx, 4                                            # 004BA979
    call _sub_440BEB                                     # 004BA97D
    popal                                                # 004BA982
.L4BA983:
    test byte ptr [ebp + 0x5f], 2                        # 004BA983
    je .L4BAA15                                          # 004BA987
    test word ptr [__508F14], 1                          # 004BA98D
    jne .L4BAA15                                         # 004BA996
    and byte ptr [ebp + 0x5f], 0xfd                      # 004BA998
    or byte ptr [ebp + 0x5f], 4                          # 004BA99C
    mov byte ptr [ebp + 0x6a], 5                         # 004BA9A0
    push ebp                                             # 004BA9A4
    call _sub_4BAA76                                     # 004BA9A5
    pop ebp                                              # 004BA9AA
    pushal                                               # 004BA9AB
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA9AC
    shl ebp, 7                                           # 004BA9B0
    add_offset ebp, _things                              # 004BA9B3
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BA9B9
    shl ebp, 7                                           # 004BA9BD
    add_offset ebp, _things                              # 004BA9C0
    mov eax, dword ptr [_scenarioChunk3]                 # 004BA9C6
    mov edx, dword ptr [_scenarioChunk3+4]               # 004BA9CB
    ror eax, 3                                           # 004BA9D1
    xor edx, 0x1234567f                                  # 004BA9D4
    mov dword ptr [_scenarioChunk3+4], eax               # 004BA9DA
    ror edx, 7                                           # 004BA9DF
    add dword ptr [_scenarioChunk3], edx                 # 004BA9E2
    mov ah, 6                                            # 004BA9E8
    mul ah                                               # 004BA9EA
    movzx eax, ah                                        # 004BA9EC
    add eax, 0x1a                                        # 004BA9EF
    mov cx, word ptr [ebp + 0xe]                         # 004BA9F2
    mov dx, word ptr [ebp + 0x10]                        # 004BA9F6
    mov bp, word ptr [ebp + 0x12]                        # 004BA9FA
    add bp, 0x16                                         # 004BA9FE
    push eax                                             # 004BAA02
    push ebx                                             # 004BAA03
    push ecx                                             # 004BAA04
    push edx                                             # 004BAA05
    mov ebx, 0x8001                                      # 004BAA06
    call _sub_489CB5                                     # 004BAA0B
    pop edx                                              # 004BAA10
    pop ecx                                              # 004BAA11
    pop ebx                                              # 004BAA12
    pop eax                                              # 004BAA13
    popal                                                # 004BAA14
.L4BAA15:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAA15
    shl ebp, 7                                           # 004BAA19
    add_offset ebp, _things                              # 004BAA1C
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAA22
    shl ebp, 7                                           # 004BAA26
    add_offset ebp, _things                              # 004BAA29
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAA2F
    shl ebp, 7                                           # 004BAA33
    add_offset ebp, _things                              # 004BAA36
.L4BAA3C:
    cmp byte ptr [ebp + 1], 6                            # 004BAA3C
    je .L4BAA75                                          # 004BAA40
    movzx edx, word ptr [ebp + 0x3a]                     # 004BAA42
    shl edx, 7                                           # 004BAA46
    add_offset edx, _things                              # 004BAA49
    movzx edx, word ptr [edx + 0x3a]                     # 004BAA4F
    shl edx, 7                                           # 004BAA53
    add_offset edx, _things                              # 004BAA56
    cmp byte ptr [edx + 1], 4                            # 004BAA5C
    je .L4BA940                                          # 004BAA60
    movzx ebp, word ptr [edx + 0x3a]                     # 004BAA66
    shl ebp, 7                                           # 004BAA6A
    add_offset ebp, _things                              # 004BAA6D
    jmp .L4BAA3C                                         # 004BAA73
.L4BAA75:
    ret                                                  # 004BAA75

    .global _sub_4BAA76
_sub_4BAA76:
    msvc_xor ecx, ecx                                    # 004BAA76
    movzx ebp, word ptr [esi + 0x3a]                     # 004BAA78
    shl ebp, 7                                           # 004BAA7C
    add_offset ebp, _things                              # 004BAA7F
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAA85
    shl ebp, 7                                           # 004BAA89
    add_offset ebp, _things                              # 004BAA8C
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAA92
    shl ebp, 7                                           # 004BAA96
    add_offset ebp, _things                              # 004BAA99
    cmp byte ptr [ebp + 1], 6                            # 004BAA9F
    je .L4BAB24                                          # 004BAAA3
.L4BAAA5:
    movzx ebx, word ptr [ebp + 0x40]                     # 004BAAA5
    mov ebx, dword ptr [ebx*4 + _vehicleObjects]         # 004BAAA9
    cmp word ptr [ebx + 0xd8], 0                         # 004BAAB0
    je .L4BAAC8                                          # 004BAAB8
    test byte ptr [ebp + 0x5f], 4                        # 004BAABA
    je .L4BAAC5                                          # 004BAABE
    or ecx, 1                                            # 004BAAC0
    jmp .L4BAAC8                                         # 004BAAC3
.L4BAAC5:
    or ecx, 2                                            # 004BAAC5
.L4BAAC8:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAAC8
    shl ebp, 7                                           # 004BAACC
    add_offset ebp, _things                              # 004BAACF
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAAD5
    shl ebp, 7                                           # 004BAAD9
    add_offset ebp, _things                              # 004BAADC
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAAE2
    shl ebp, 7                                           # 004BAAE6
    add_offset ebp, _things                              # 004BAAE9
.L4BAAEF:
    cmp byte ptr [ebp + 1], 6                            # 004BAAEF
    je .L4BAB24                                          # 004BAAF3
    movzx edx, word ptr [ebp + 0x3a]                     # 004BAAF5
    shl edx, 7                                           # 004BAAF9
    add_offset edx, _things                              # 004BAAFC
    movzx edx, word ptr [edx + 0x3a]                     # 004BAB02
    shl edx, 7                                           # 004BAB06
    add_offset edx, _things                              # 004BAB09
    cmp byte ptr [edx + 1], 4                            # 004BAB0F
    je .L4BAAA5                                          # 004BAB13
    movzx ebp, word ptr [edx + 0x3a]                     # 004BAB15
    shl ebp, 7                                           # 004BAB19
    add_offset ebp, _things                              # 004BAB1C
    jmp .L4BAAEF                                         # 004BAB22
.L4BAB24:
    movzx ebp, word ptr [esi + 0x3a]                     # 004BAB24
    shl ebp, 7                                           # 004BAB28
    add_offset ebp, _things                              # 004BAB2B
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAB31
    shl ebp, 7                                           # 004BAB35
    add_offset ebp, _things                              # 004BAB38
    test ecx, 1                                          # 004BAB3E
    jne .L4BAB4C                                         # 004BAB44
    and byte ptr [ebp + 0x73], 0xfc                      # 004BAB46
    jmp .L4BAB62                                         # 004BAB4A
.L4BAB4C:
    test ecx, 2                                          # 004BAB4C
    jne .L4BAB5E                                         # 004BAB52
    or byte ptr [ebp + 0x73], 1                          # 004BAB54
    and byte ptr [ebp + 0x73], 0xfd                      # 004BAB58
    jmp .L4BAB62                                         # 004BAB5C
.L4BAB5E:
    or byte ptr [ebp + 0x73], 3                          # 004BAB5E
.L4BAB62:
    ret                                                  # 004BAB62

    .global _sub_4BAB63
_sub_4BAB63:
    mov byte ptr [__9C68EA], 4                           # 004BAB63
    test bl, 1                                           # 004BAB6A
    je .L4BABAA                                          # 004BAB6D
    movzx esi, cx                                        # 004BAB6F
    shl esi, 7                                           # 004BAB72
    add_offset esi, _things                              # 004BAB75
    mov byte ptr [esi + 0x6e], dl                        # 004BAB7B
    bt word ptr [esi + 0xc], 1                           # 004BAB7E
    jae .L4BABA0                                         # 004BAB84
    cmp byte ptr [esi + 0x5d], 9                         # 004BAB86
    je .L4BABA0                                          # 004BAB8A
    cmp byte ptr [esi + 0x5d], 8                         # 004BAB8C
    je .L4BABA0                                          # 004BAB90
    push ecx                                             # 004BAB92
    mov bl, 1                                            # 004BAB93
    msvc_mov dx, cx                                      # 004BAB95
    mov bh, 1                                            # 004BAB98
    call _sub_4B694B                                     # 004BAB9A
    pop ecx                                              # 004BAB9F
.L4BABA0:
    msvc_mov bx, cx                                      # 004BABA0
    mov al, 0x17                                         # 004BABA3
    call _sub_4CB966                                     # 004BABA5
.L4BABAA:
    msvc_xor ebx, ebx                                    # 004BABAA
    ret                                                  # 004BABAC

    .global _sub_4BABAD
_sub_4BABAD:
    push ebx                                             # 004BABAD
    push ecx                                             # 004BABAE
    push edx                                             # 004BABAF
    push edi                                             # 004BABB0
    push esi                                             # 004BABB1
    push ebp                                             # 004BABB2
    msvc_mov ebp, esi                                    # 004BABB3
.L4BABB5:
    cmp byte ptr [ebp + 1], 6                            # 004BABB5
    je .L4BAC47                                          # 004BABB9
    cmp byte ptr [ebp + 1], 3                            # 004BABBF
    jne .L4BAC35                                         # 004BABC3
    mov ax, word ptr [ebp + 0x30]                        # 004BABC5
    mov cx, word ptr [ebp + 0x32]                        # 004BABC9
    mov dl, byte ptr [ebp + 0x34]                        # 004BABCD
    movzx edi, word ptr [ebp + 0x2c]                     # 004BABD0
    movzx esi, cx                                        # 004BABD4
    shl esi, 9                                           # 004BABD7
    msvc_or si, ax                                       # 004BABDA
    shr esi, 3                                           # 004BABDD
    mov esi, dword ptr [esi + __E40134]                  # 004BABE0
.L4BABE6:
    mov al, byte ptr [esi]                               # 004BABE6
    and al, 0x3c                                         # 004BABE8
    cmp al, 4                                            # 004BABEA
    jne .L4BAC2C                                         # 004BABEC
    cmp dl, byte ptr [esi + 2]                           # 004BABEE
    jne .L4BAC2C                                         # 004BABF1
    mov al, byte ptr [esi]                               # 004BABF3
    and al, 3                                            # 004BABF5
    msvc_mov cx, di                                      # 004BABF7
    and cl, 3                                            # 004BABFA
    cmp al, cl                                           # 004BABFD
    jne .L4BAC2C                                         # 004BABFF
    mov al, byte ptr [esi + 4]                           # 004BAC01
    and al, 0x3f                                         # 004BAC04
    msvc_mov cx, di                                      # 004BAC06
    shr cx, 3                                            # 004BAC09
    cmp al, cl                                           # 004BAC0D
    jne .L4BAC2C                                         # 004BAC0F
    test byte ptr [esi], 0x80                            # 004BAC11
    je .L4BAC2C                                          # 004BAC14
    test byte ptr [esi + 9], 0x30                        # 004BAC16
    jne .L4BAC2C                                         # 004BAC1A
    mov ax, word ptr [esi + 0xe]                         # 004BAC1C
    and eax, 0x3ff                                       # 004BAC20
    pop ebp                                              # 004BAC25
    pop esi                                              # 004BAC26
    pop edi                                              # 004BAC27
    pop edx                                              # 004BAC28
    pop ecx                                              # 004BAC29
    pop ebx                                              # 004BAC2A
    ret                                                  # 004BAC2B
.L4BAC2C:
    add esi, 8                                           # 004BAC2C
    test byte ptr [esi - 7], 0x80                        # 004BAC2F
    je .L4BABE6                                          # 004BAC33
.L4BAC35:
    movzx ebp, word ptr [ebp + 0x3a]                     # 004BAC35
    shl ebp, 7                                           # 004BAC39
    add_offset ebp, _things                              # 004BAC3C
    msvc_jmp .L4BABB5                                    # 004BAC42
.L4BAC47:
    pop ebp                                              # 004BAC47
    pop esi                                              # 004BAC48
    pop edi                                              # 004BAC49
    pop edx                                              # 004BAC4A
    pop ecx                                              # 004BAC4B
    pop ebx                                              # 004BAC4C
    mov eax, 0xffffffff                                  # 004BAC4D
    ret                                                  # 004BAC52

    .global _sub_4BAC53
_sub_4BAC53:
    mov byte ptr [__9C68EA], 4                           # 004BAC53
    test bl, 1                                           # 004BAC5A
    je .L4BAC71                                          # 004BAC5D
    movzx esi, cx                                        # 004BAC5F
    shl esi, 7                                           # 004BAC62
    add_offset esi, _things                              # 004BAC65
    xor word ptr [esi + 0xc], 0x80                       # 004BAC6B
.L4BAC71:
    msvc_xor ebx, ebx                                    # 004BAC71
    ret                                                  # 004BAC73

    .global _sub_4BAC74
_sub_4BAC74:
    push eax                                             # 004BAC74
    push edi                                             # 004BAC75
    mov eax, dword ptr [_scenarioChunk3+326]             # 004BAC76
    mov dword ptr [esi + 0x73], eax                      # 004BAC7B
    movzx edi, word ptr [esi + 0x3a]                     # 004BAC7E
    shl edi, 7                                           # 004BAC82
    add_offset edi, _things                              # 004BAC85
    movzx edi, word ptr [edi + 0x3a]                     # 004BAC8B
    shl edi, 7                                           # 004BAC8F
    add_offset edi, _things                              # 004BAC92
    mov ax, word ptr [edi + 0xe]                         # 004BAC98
    mov word ptr [esi + 0x6f], ax                        # 004BAC9C
    mov ax, word ptr [edi + 0x10]                        # 004BACA0
    mov word ptr [esi + 0x71], ax                        # 004BACA4
    or byte ptr [esi + 0x5f], 8                          # 004BACA8
    pop edi                                              # 004BACAC
    pop eax                                              # 004BACAD
    ret                                                  # 004BACAE

    .global _sub_4BACAF
_sub_4BACAF:
    test byte ptr [esi + 0x5f], 8                        # 004BACAF
    je .L4BADE3                                          # 004BACB3
    pushal                                               # 004BACB9
    and byte ptr [esi + 0x5f], 0xf7                      # 004BACBA
    mov ax, word ptr [esi + 0x6f]                        # 004BACBE
    mov cx, word ptr [esi + 0x71]                        # 004BACC2
    movzx edi, word ptr [esi + 0x3a]                     # 004BACC6
    shl edi, 7                                           # 004BACCA
    add_offset edi, _things                              # 004BACCD
    movzx edi, word ptr [edi + 0x3a]                     # 004BACD3
    shl edi, 7                                           # 004BACD7
    add_offset edi, _things                              # 004BACDA
    sub ax, word ptr [edi + 0xe]                         # 004BACE0
    jge .L4BACE9                                         # 004BACE4
    neg ax                                               # 004BACE6
.L4BACE9:
    sub cx, word ptr [edi + 0x10]                        # 004BACE9
    jge .L4BACF2                                         # 004BACED
    neg cx                                               # 004BACEF
.L4BACF2:
    movzx eax, ax                                        # 004BACF2
    movzx ecx, cx                                        # 004BACF5
    imul eax, eax                                        # 004BACF8
    imul ecx, ecx                                        # 004BACFB
    msvc_add eax, ecx                                    # 004BACFE
    call _sub_4BE368                                     # 004BAD00
    mov ecx, dword ptr [_scenarioChunk3+326]             # 004BAD05
    sub ecx, dword ptr [esi + 0x73]                      # 004BAD0B
    mov edx, 0x15                                        # 004BAD0E
    cmp byte ptr [esi + 0x42], 2                         # 004BAD13
    jne .L4BAD1E                                         # 004BAD17
    mov edx, 0x24                                        # 004BAD19
.L4BAD1E:
    cmp byte ptr [esi + 0x42], 3                         # 004BAD1E
    jne .L4BAD29                                         # 004BAD22
    mov edx, 0x1f                                        # 004BAD24
.L4BAD29:
    mul edx                                              # 004BAD29
.L4BAD2B:
    msvc_or edx, edx                                     # 004BAD2B
    je .L4BAD37                                          # 004BAD2D
    shr edx, 1                                           # 004BAD2F
    rcr eax, 1                                           # 004BAD31
    shr ecx, 1                                           # 004BAD33
    jmp .L4BAD2B                                         # 004BAD35
.L4BAD37:
    msvc_or ecx, ecx                                     # 004BAD37
    je .L4BADE2                                          # 004BAD39
    div ecx                                              # 004BAD3F
    jmp .L4BAD43                                         # 004BAD41
.L4BAD43:
    movzx edi, word ptr [esi + 0x3a]                     # 004BAD43
    shl edi, 7                                           # 004BAD47
    add_offset edi, _things                              # 004BAD4A
    movzx edi, word ptr [edi + 0x3a]                     # 004BAD50
    shl edi, 7                                           # 004BAD54
    add_offset edi, _things                              # 004BAD57
    cmp ax, word ptr [edi + 0x54]                        # 004BAD5D
    jbe .L4BAD67                                         # 004BAD61
    mov ax, word ptr [edi + 0x54]                        # 004BAD63
.L4BAD67:
    mov word ptr [esi + 0x77], ax                        # 004BAD67
    mov al, 0x17                                         # 004BAD6B
    mov bx, word ptr [esi + 0x26]                        # 004BAD6D
    call _sub_4CB966                                     # 004BAD71
    mov edx, 1                                           # 004BAD76
    cmp byte ptr [esi + 0x42], 2                         # 004BAD7B
    je .L4BAD91                                          # 004BAD7F
    mov edx, 2                                           # 004BAD81
    cmp byte ptr [esi + 0x42], 3                         # 004BAD86
    je .L4BAD91                                          # 004BAD8A
    mov edx, 0                                           # 004BAD8C
.L4BAD91:
    mov ax, word ptr [esi + 0x77]                        # 004BAD91
    cmp ax, word ptr [edx*2 + _scenarioChunk3+1078]      # 004BAD95
    jbe .L4BADE2                                         # 004BAD9D
    mov word ptr [edx*2 + _scenarioChunk3+1078], ax      # 004BAD9F
    mov al, byte ptr [esi + 0x21]                        # 004BADA7
    mov byte ptr [edx + _scenarioChunk3+1084], al        # 004BADAA
    mov eax, dword ptr [_scenarioChunk3+20]              # 004BADB0
    mov dword ptr [edx*4 + _scenarioChunk3+1088], eax    # 004BADB5
    mov al, 0x1d                                         # 004BADBC
    mov ah, byte ptr [esi + 0x21]                        # 004BADBE
    movzx cx, ah                                         # 004BADC1
    mov bx, word ptr [esi + 0xa]                         # 004BADC5
    call _sub_4285BA                                     # 004BADC9
    mov al, 1                                            # 004BADCE
    mov ah, byte ptr [esi + 0x21]                        # 004BADD0
    call _sub_437F29                                     # 004BADD3
    mov al, 0x30                                         # 004BADD8
    msvc_xor bx, bx                                      # 004BADDA
    call _sub_4CB966                                     # 004BADDD
.L4BADE2:
    popal                                                # 004BADE2
.L4BADE3:
    ret                                                  # 004BADE3
